{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IBank",
          "name": "_bank",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_werc20",
          "type": "address"
        },
        {
          "internalType": "contract IUniswapV2Router02",
          "name": "_router",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_wmasterchef",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "governor",
          "type": "address"
        }
      ],
      "name": "AcceptGovernor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "governor",
          "type": "address"
        }
      ],
      "name": "SetGovernor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "pendingGovernor",
          "type": "address"
        }
      ],
      "name": "SetPendingGovernor",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptGovernor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amtAUser",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amtBUser",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amtLPUser",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amtABorrow",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amtBBorrow",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amtLPBorrow",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amtAMin",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amtBMin",
              "type": "uint256"
            }
          ],
          "internalType": "struct SushiswapSpellV1.Amounts",
          "name": "amt",
          "type": "tuple"
        }
      ],
      "name": "addLiquidityWERC20",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amtAUser",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amtBUser",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amtLPUser",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amtABorrow",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amtBBorrow",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amtLPBorrow",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amtAMin",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amtBMin",
              "type": "uint256"
            }
          ],
          "internalType": "struct SushiswapSpellV1.Amounts",
          "name": "amt",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        }
      ],
      "name": "addLiquidityWMasterChef",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "approved",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bank",
      "outputs": [
        {
          "internalType": "contract IBank",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "contract IUniswapV2Factory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        }
      ],
      "name": "getAndApprovePair",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "harvestWMasterChef",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "pairs",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingGovernor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amtLPTake",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amtLPWithdraw",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amtARepay",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amtBRepay",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amtLPRepay",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amtAMin",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amtBMin",
              "type": "uint256"
            }
          ],
          "internalType": "struct SushiswapSpellV1.RepayAmounts",
          "name": "amt",
          "type": "tuple"
        }
      ],
      "name": "removeLiquidityWERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amtLPTake",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amtLPWithdraw",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amtARepay",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amtBRepay",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amtLPRepay",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amtAMin",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amtBMin",
              "type": "uint256"
            }
          ],
          "internalType": "struct SushiswapSpellV1.RepayAmounts",
          "name": "amt",
          "type": "tuple"
        }
      ],
      "name": "removeLiquidityWMasterChef",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "router",
      "outputs": [
        {
          "internalType": "contract IUniswapV2Router02",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pendingGovernor",
          "type": "address"
        }
      ],
      "name": "setPendingGovernor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "lpTokens",
          "type": "address[]"
        },
        {
          "internalType": "bool[]",
          "name": "statuses",
          "type": "bool[]"
        }
      ],
      "name": "setWhitelistLPTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sushi",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "werc20",
      "outputs": [
        {
          "internalType": "contract IWERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "weth",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whitelistedLpTokens",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wmasterchef",
      "outputs": [
        {
          "internalType": "contract IWMasterChef",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "101": "interfaces/IWMasterChef.sol",
    "14": "/Users/phpunch/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC1155/ERC1155Receiver.sol",
    "15": "/Users/phpunch/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC1155/IERC1155.sol",
    "17": "/Users/phpunch/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC1155/IERC1155Receiver.sol",
    "19": "/Users/phpunch/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/IERC20.sol",
    "20": "/Users/phpunch/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/SafeERC20.sol",
    "21": "/Users/phpunch/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/Address.sol",
    "24": "contracts/Governable.sol",
    "4": "/Users/phpunch/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/introspection/ERC165.sol",
    "5": "/Users/phpunch/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/introspection/IERC165.sol",
    "63": "contracts/spell/BasicSpell.sol",
    "66": "contracts/spell/SushiswapSpellV1.sol",
    "68": "contracts/spell/WhitelistSpell.sol",
    "7": "/Users/phpunch/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
    "71": "contracts/utils/ERC1155NaiveReceiver.sol",
    "72": "contracts/utils/HomoraMath.sol",
    "8": "/Users/phpunch/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/proxy/Initializable.sol",
    "80": "interfaces/IBank.sol",
    "87": "interfaces/IERC20Wrapper.sol",
    "90": "interfaces/IMasterChef.sol",
    "94": "interfaces/IUniswapV2Factory.sol",
    "95": "interfaces/IUniswapV2Pair.sol",
    "96": "interfaces/IUniswapV2Router01.sol",
    "97": "interfaces/IUniswapV2Router02.sol",
    "98": "interfaces/IWERC20.sol",
    "99": "interfaces/IWETH.sol"
  },
  "ast": {
    "absolutePath": "contracts/spell/SushiswapSpellV1.sol",
    "exportedSymbols": {
      "SushiswapSpellV1": [
        23288
      ]
    },
    "id": 23289,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 21898,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:66"
      },
      {
        "id": 21899,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "57:33:66"
      },
      {
        "absolutePath": "/Users/phpunch/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/IERC20.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/IERC20.sol",
        "id": 21900,
        "nodeType": "ImportDirective",
        "scope": 23289,
        "sourceUnit": 27767,
        "src": "92:84:66",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/phpunch/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
        "id": 21901,
        "nodeType": "ImportDirective",
        "scope": 23289,
        "sourceUnit": 27567,
        "src": "177:79:66",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/spell/WhitelistSpell.sol",
        "file": "./WhitelistSpell.sol",
        "id": 21902,
        "nodeType": "ImportDirective",
        "scope": 23289,
        "sourceUnit": 24748,
        "src": "258:30:66",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/utils/HomoraMath.sol",
        "file": "../utils/HomoraMath.sol",
        "id": 21903,
        "nodeType": "ImportDirective",
        "scope": 23289,
        "sourceUnit": 25626,
        "src": "289:33:66",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IUniswapV2Factory.sol",
        "file": "../../interfaces/IUniswapV2Factory.sol",
        "id": 21904,
        "nodeType": "ImportDirective",
        "scope": 23289,
        "sourceUnit": 30518,
        "src": "323:48:66",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IUniswapV2Router02.sol",
        "file": "../../interfaces/IUniswapV2Router02.sol",
        "id": 21905,
        "nodeType": "ImportDirective",
        "scope": 23289,
        "sourceUnit": 30815,
        "src": "372:49:66",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IUniswapV2Pair.sol",
        "file": "../../interfaces/IUniswapV2Pair.sol",
        "id": 21906,
        "nodeType": "ImportDirective",
        "scope": 23289,
        "sourceUnit": 29793,
        "src": "422:45:66",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IWMasterChef.sol",
        "file": "../../interfaces/IWMasterChef.sol",
        "id": 21907,
        "nodeType": "ImportDirective",
        "scope": 23289,
        "sourceUnit": 30865,
        "src": "468:43:66",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 21908,
              "name": "WhitelistSpell",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 24747,
              "src": "542:14:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WhitelistSpell_$24747",
                "typeString": "contract WhitelistSpell"
              }
            },
            "id": 21909,
            "nodeType": "InheritanceSpecifier",
            "src": "542:14:66"
          }
        ],
        "contractDependencies": [
          108,
          19534,
          24747,
          25359,
          27138,
          30898,
          32310,
          32915,
          32956
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 23288,
        "linearizedBaseContracts": [
          23288,
          24747,
          108,
          27138,
          19534,
          25359,
          30898,
          32956,
          32915,
          32310
        ],
        "name": "SushiswapSpellV1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 21912,
            "libraryName": {
              "contractScope": null,
              "id": 21910,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 27566,
              "src": "567:8:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$27566",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "561:24:66",
            "typeName": {
              "id": 21911,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "580:4:66",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 21915,
            "libraryName": {
              "contractScope": null,
              "id": 21913,
              "name": "HomoraMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 25625,
              "src": "594:10:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HomoraMath_$25625",
                "typeString": "library HomoraMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "588:26:66",
            "typeName": {
              "id": 21914,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "609:4:66",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "c45a0155",
            "id": 21917,
            "mutability": "immutable",
            "name": "factory",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 23288,
            "src": "618:42:66",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IUniswapV2Factory_$30517",
              "typeString": "contract IUniswapV2Factory"
            },
            "typeName": {
              "contractScope": null,
              "id": 21916,
              "name": "IUniswapV2Factory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 30517,
              "src": "618:17:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IUniswapV2Factory_$30517",
                "typeString": "contract IUniswapV2Factory"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f887ea40",
            "id": 21919,
            "mutability": "immutable",
            "name": "router",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 23288,
            "src": "685:42:66",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IUniswapV2Router02_$30814",
              "typeString": "contract IUniswapV2Router02"
            },
            "typeName": {
              "contractScope": null,
              "id": 21918,
              "name": "IUniswapV2Router02",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 30814,
              "src": "685:18:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IUniswapV2Router02_$30814",
                "typeString": "contract IUniswapV2Router02"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "69454b86",
            "id": 21925,
            "mutability": "mutable",
            "name": "pairs",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 23288,
            "src": "752:60:66",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
              "typeString": "mapping(address => mapping(address => address))"
            },
            "typeName": {
              "id": 21924,
              "keyType": {
                "id": 21920,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "760:7:66",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "752:47:66",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                "typeString": "mapping(address => mapping(address => address))"
              },
              "valueType": {
                "id": 21923,
                "keyType": {
                  "id": 21921,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "779:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "771:27:66",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                  "typeString": "mapping(address => address)"
                },
                "valueType": {
                  "id": 21922,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "790:7:66",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "86adcc79",
            "id": 21927,
            "mutability": "immutable",
            "name": "wmasterchef",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 23288,
            "src": "877:41:66",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IWMasterChef_$30864",
              "typeString": "contract IWMasterChef"
            },
            "typeName": {
              "contractScope": null,
              "id": 21926,
              "name": "IWMasterChef",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 30864,
              "src": "877:12:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IWMasterChef_$30864",
                "typeString": "contract IWMasterChef"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0a087903",
            "id": 21929,
            "mutability": "immutable",
            "name": "sushi",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 23288,
            "src": "945:30:66",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 21928,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "945:7:66",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 21987,
              "nodeType": "Block",
              "src": "1169:254:66",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 21949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 21947,
                      "name": "router",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21919,
                      "src": "1175:6:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV2Router02_$30814",
                        "typeString": "contract IUniswapV2Router02"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 21948,
                      "name": "_router",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21935,
                      "src": "1184:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV2Router02_$30814",
                        "typeString": "contract IUniswapV2Router02"
                      }
                    },
                    "src": "1175:16:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV2Router02_$30814",
                      "typeString": "contract IUniswapV2Router02"
                    }
                  },
                  "id": 21950,
                  "nodeType": "ExpressionStatement",
                  "src": "1175:16:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 21957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 21951,
                      "name": "factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21917,
                      "src": "1197:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV2Factory_$30517",
                        "typeString": "contract IUniswapV2Factory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 21953,
                              "name": "_router",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21935,
                              "src": "1225:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV2Router02_$30814",
                                "typeString": "contract IUniswapV2Router02"
                              }
                            },
                            "id": 21954,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "factory",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32557,
                            "src": "1225:15:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                              "typeString": "function () pure external returns (address)"
                            }
                          },
                          "id": 21955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1225:17:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 21952,
                        "name": "IUniswapV2Factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30517,
                        "src": "1207:17:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IUniswapV2Factory_$30517_$",
                          "typeString": "type(contract IUniswapV2Factory)"
                        }
                      },
                      "id": 21956,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1207:36:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV2Factory_$30517",
                        "typeString": "contract IUniswapV2Factory"
                      }
                    },
                    "src": "1197:46:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV2Factory_$30517",
                      "typeString": "contract IUniswapV2Factory"
                    }
                  },
                  "id": 21958,
                  "nodeType": "ExpressionStatement",
                  "src": "1197:46:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 21963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 21959,
                      "name": "wmasterchef",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21927,
                      "src": "1249:11:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IWMasterChef_$30864",
                        "typeString": "contract IWMasterChef"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 21961,
                          "name": "_wmasterchef",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21937,
                          "src": "1276:12:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 21960,
                        "name": "IWMasterChef",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30864,
                        "src": "1263:12:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IWMasterChef_$30864_$",
                          "typeString": "type(contract IWMasterChef)"
                        }
                      },
                      "id": 21962,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1263:26:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IWMasterChef_$30864",
                        "typeString": "contract IWMasterChef"
                      }
                    },
                    "src": "1249:40:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IWMasterChef_$30864",
                      "typeString": "contract IWMasterChef"
                    }
                  },
                  "id": 21964,
                  "nodeType": "ExpressionStatement",
                  "src": "1249:40:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 21971,
                            "name": "_bank",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21931,
                            "src": "1348:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IBank_$28233",
                              "typeString": "contract IBank"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IBank_$28233",
                              "typeString": "contract IBank"
                            }
                          ],
                          "id": 21970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1340:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21969,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1340:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 21972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1340:14:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 21973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1356:4:66",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 21966,
                            "name": "_wmasterchef",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21937,
                            "src": "1308:12:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 21965,
                          "name": "IWMasterChef",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30864,
                          "src": "1295:12:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IWMasterChef_$30864_$",
                            "typeString": "type(contract IWMasterChef)"
                          }
                        },
                        "id": 21967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1295:26:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IWMasterChef_$30864",
                          "typeString": "contract IWMasterChef"
                        }
                      },
                      "id": 21968,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setApprovalForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27647,
                      "src": "1295:44:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 21974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1295:66:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21975,
                  "nodeType": "ExpressionStatement",
                  "src": "1295:66:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 21985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 21976,
                      "name": "sushi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21929,
                      "src": "1367:5:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 21980,
                                  "name": "_wmasterchef",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21937,
                                  "src": "1396:12:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 21979,
                                "name": "IWMasterChef",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30864,
                                "src": "1383:12:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IWMasterChef_$30864_$",
                                  "typeString": "type(contract IWMasterChef)"
                                }
                              },
                              "id": 21981,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1383:26:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IWMasterChef_$30864",
                                "typeString": "contract IWMasterChef"
                              }
                            },
                            "id": 21982,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sushi",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30849,
                            "src": "1383:32:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_contract$_IERC20_$27766_$",
                              "typeString": "function () external returns (contract IERC20)"
                            }
                          },
                          "id": 21983,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1383:34:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$27766",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$27766",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 21978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1375:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 21977,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1375:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 21984,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1375:43:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1367:51:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 21986,
                  "nodeType": "ExpressionStatement",
                  "src": "1367:51:66"
                }
              ]
            },
            "documentation": null,
            "id": 21988,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 21940,
                    "name": "_bank",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21931,
                    "src": "1137:5:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBank_$28233",
                      "typeString": "contract IBank"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 21941,
                    "name": "_werc20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21933,
                    "src": "1144:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 21942,
                        "name": "_router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21935,
                        "src": "1153:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV2Router02_$30814",
                          "typeString": "contract IUniswapV2Router02"
                        }
                      },
                      "id": 21943,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "WETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32562,
                      "src": "1153:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                        "typeString": "function () pure external returns (address)"
                      }
                    },
                    "id": 21944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1153:14:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 21945,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 21939,
                  "name": "WhitelistSpell",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 24747,
                  "src": "1122:14:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_WhitelistSpell_$24747_$",
                    "typeString": "type(contract WhitelistSpell)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1122:46:66"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 21938,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21931,
                  "mutability": "mutable",
                  "name": "_bank",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21988,
                  "src": "1020:11:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBank_$28233",
                    "typeString": "contract IBank"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 21930,
                    "name": "IBank",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 28233,
                    "src": "1020:5:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBank_$28233",
                      "typeString": "contract IBank"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21933,
                  "mutability": "mutable",
                  "name": "_werc20",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21988,
                  "src": "1037:15:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21932,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1037:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21935,
                  "mutability": "mutable",
                  "name": "_router",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21988,
                  "src": "1058:26:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IUniswapV2Router02_$30814",
                    "typeString": "contract IUniswapV2Router02"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 21934,
                    "name": "IUniswapV2Router02",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 30814,
                    "src": "1058:18:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV2Router02_$30814",
                      "typeString": "contract IUniswapV2Router02"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21937,
                  "mutability": "mutable",
                  "name": "_wmasterchef",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21988,
                  "src": "1090:20:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21936,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1090:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1014:100:66"
            },
            "returnParameters": {
              "id": 21946,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1169:0:66"
            },
            "scope": 23288,
            "src": "1003:420:66",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 22074,
              "nodeType": "Block",
              "src": "1672:388:66",
              "statements": [
                {
                  "assignments": [
                    21999
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 21999,
                      "mutability": "mutable",
                      "name": "lp",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 22074,
                      "src": "1678:10:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 21998,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1678:7:66",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 22005,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 22000,
                        "name": "pairs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21925,
                        "src": "1691:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                          "typeString": "mapping(address => mapping(address => address))"
                        }
                      },
                      "id": 22002,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 22001,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21991,
                        "src": "1697:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1691:13:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 22004,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 22003,
                      "name": "tokenB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21993,
                      "src": "1705:6:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1691:21:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1678:34:66"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 22011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 22006,
                      "name": "lp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21999,
                      "src": "1722:2:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 22009,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1736:1:66",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 22008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1728:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 22007,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1728:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 22010,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1728:10:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1722:16:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 22071,
                  "nodeType": "IfStatement",
                  "src": "1718:323:66",
                  "trueBody": {
                    "id": 22070,
                    "nodeType": "Block",
                    "src": "1740:301:66",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 22018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 22012,
                            "name": "lp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21999,
                            "src": "1748:2:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 22015,
                                "name": "tokenA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21991,
                                "src": "1769:6:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 22016,
                                "name": "tokenB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21993,
                                "src": "1777:6:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 22013,
                                "name": "factory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21917,
                                "src": "1753:7:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IUniswapV2Factory_$30517",
                                  "typeString": "contract IUniswapV2Factory"
                                }
                              },
                              "id": 22014,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getPair",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 30485,
                              "src": "1753:15:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_address_$",
                                "typeString": "function (address,address) view external returns (address)"
                              }
                            },
                            "id": 22017,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1753:31:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1748:36:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 22019,
                        "nodeType": "ExpressionStatement",
                        "src": "1748:36:66"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 22026,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 22021,
                                "name": "lp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21999,
                                "src": "1800:2:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 22024,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1814:1:66",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 22023,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1806:7:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 22022,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1806:7:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 22025,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1806:10:66",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "1800:16:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6e6f206c7020746f6b656e",
                              "id": 22027,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1818:13:66",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6c1151469c7384c95e286501c7ffc8829d4bfb240f5c41815f1bf4b2ec1f5495",
                                "typeString": "literal_string \"no lp token\""
                              },
                              "value": "no lp token"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6c1151469c7384c95e286501c7ffc8829d4bfb240f5c41815f1bf4b2ec1f5495",
                                "typeString": "literal_string \"no lp token\""
                              }
                            ],
                            "id": 22020,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1792:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 22028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1792:40:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 22029,
                        "nodeType": "ExpressionStatement",
                        "src": "1792:40:66"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 22031,
                              "name": "tokenA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21991,
                              "src": "1854:6:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 22034,
                                  "name": "router",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21919,
                                  "src": "1870:6:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IUniswapV2Router02_$30814",
                                    "typeString": "contract IUniswapV2Router02"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IUniswapV2Router02_$30814",
                                    "typeString": "contract IUniswapV2Router02"
                                  }
                                ],
                                "id": 22033,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1862:7:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 22032,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1862:7:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 22035,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1862:15:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 22030,
                            "name": "ensureApprove",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19253,
                            "src": "1840:13:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 22036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1840:38:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 22037,
                        "nodeType": "ExpressionStatement",
                        "src": "1840:38:66"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 22039,
                              "name": "tokenB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21993,
                              "src": "1900:6:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 22042,
                                  "name": "router",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21919,
                                  "src": "1916:6:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IUniswapV2Router02_$30814",
                                    "typeString": "contract IUniswapV2Router02"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IUniswapV2Router02_$30814",
                                    "typeString": "contract IUniswapV2Router02"
                                  }
                                ],
                                "id": 22041,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1908:7:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 22040,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1908:7:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 22043,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1908:15:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 22038,
                            "name": "ensureApprove",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19253,
                            "src": "1886:13:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 22044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1886:38:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 22045,
                        "nodeType": "ExpressionStatement",
                        "src": "1886:38:66"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 22047,
                              "name": "lp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21999,
                              "src": "1946:2:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 22050,
                                  "name": "router",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21919,
                                  "src": "1958:6:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IUniswapV2Router02_$30814",
                                    "typeString": "contract IUniswapV2Router02"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IUniswapV2Router02_$30814",
                                    "typeString": "contract IUniswapV2Router02"
                                  }
                                ],
                                "id": 22049,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1950:7:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 22048,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1950:7:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 22051,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1950:15:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 22046,
                            "name": "ensureApprove",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19253,
                            "src": "1932:13:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 22052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1932:34:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 22053,
                        "nodeType": "ExpressionStatement",
                        "src": "1932:34:66"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 22060,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 22054,
                                "name": "pairs",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21925,
                                "src": "1974:5:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                  "typeString": "mapping(address => mapping(address => address))"
                                }
                              },
                              "id": 22057,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 22055,
                                "name": "tokenA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21991,
                                "src": "1980:6:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1974:13:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 22058,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 22056,
                              "name": "tokenB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21993,
                              "src": "1988:6:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1974:21:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 22059,
                            "name": "lp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21999,
                            "src": "1998:2:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1974:26:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 22061,
                        "nodeType": "ExpressionStatement",
                        "src": "1974:26:66"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 22068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 22062,
                                "name": "pairs",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21925,
                                "src": "2008:5:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                  "typeString": "mapping(address => mapping(address => address))"
                                }
                              },
                              "id": 22065,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 22063,
                                "name": "tokenB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21993,
                                "src": "2014:6:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2008:13:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 22066,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 22064,
                              "name": "tokenA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21991,
                              "src": "2022:6:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2008:21:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 22067,
                            "name": "lp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21999,
                            "src": "2032:2:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2008:26:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 22069,
                        "nodeType": "ExpressionStatement",
                        "src": "2008:26:66"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 22072,
                    "name": "lp",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21999,
                    "src": "2053:2:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 21997,
                  "id": 22073,
                  "nodeType": "Return",
                  "src": "2046:9:66"
                }
              ]
            },
            "documentation": {
              "id": 21989,
              "nodeType": "StructuredDocumentation",
              "src": "1427:158:66",
              "text": "@dev Return the LP token for the token pairs (can be in any order)\n @param tokenA Token A to get LP token\n @param tokenB Token B to get LP token"
            },
            "functionSelector": "2185059f",
            "id": 22075,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAndApprovePair",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 21994,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21991,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22075,
                  "src": "1615:14:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21990,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1615:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21993,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22075,
                  "src": "1631:14:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21992,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1631:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1614:32:66"
            },
            "returnParameters": {
              "id": 21997,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21996,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22075,
                  "src": "1663:7:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21995,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1663:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1662:9:66"
            },
            "scope": 23288,
            "src": "1588:472:66",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 22129,
              "nodeType": "Block",
              "src": "2452:235:66",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 22099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 22093,
                          "name": "resB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22084,
                          "src": "2471:4:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 22091,
                          "name": "amtA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22078,
                          "src": "2462:4:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 22092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mul",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 27449,
                        "src": "2462:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 22094,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2462:14:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 22097,
                          "name": "resA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22082,
                          "src": "2489:4:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 22095,
                          "name": "amtB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22080,
                          "src": "2480:4:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 22096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mul",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 27449,
                        "src": "2480:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 22098,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2480:14:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2462:32:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 22127,
                    "nodeType": "Block",
                    "src": "2593:90:66",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 22121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 22114,
                            "name": "swapAmt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22087,
                            "src": "2601:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 22116,
                                "name": "amtB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22080,
                                "src": "2628:4:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 22117,
                                "name": "amtA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22078,
                                "src": "2634:4:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 22118,
                                "name": "resB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22084,
                                "src": "2640:4:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 22119,
                                "name": "resA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22082,
                                "src": "2646:4:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 22115,
                              "name": "_optimalDepositA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22244,
                              "src": "2611:16:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256,uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 22120,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2611:40:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2601:50:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 22122,
                        "nodeType": "ExpressionStatement",
                        "src": "2601:50:66"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 22125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 22123,
                            "name": "isReversed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22089,
                            "src": "2659:10:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 22124,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2672:4:66",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2659:17:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 22126,
                        "nodeType": "ExpressionStatement",
                        "src": "2659:17:66"
                      }
                    ]
                  },
                  "id": 22128,
                  "nodeType": "IfStatement",
                  "src": "2458:225:66",
                  "trueBody": {
                    "id": 22113,
                    "nodeType": "Block",
                    "src": "2496:91:66",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 22107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 22100,
                            "name": "swapAmt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22087,
                            "src": "2504:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 22102,
                                "name": "amtA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22078,
                                "src": "2531:4:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 22103,
                                "name": "amtB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22080,
                                "src": "2537:4:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 22104,
                                "name": "resA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22082,
                                "src": "2543:4:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 22105,
                                "name": "resB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22084,
                                "src": "2549:4:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 22101,
                              "name": "_optimalDepositA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22244,
                              "src": "2514:16:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256,uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 22106,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2514:40:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2504:50:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 22108,
                        "nodeType": "ExpressionStatement",
                        "src": "2504:50:66"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 22111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 22109,
                            "name": "isReversed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22089,
                            "src": "2562:10:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 22110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2575:5:66",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2562:18:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 22112,
                        "nodeType": "ExpressionStatement",
                        "src": "2562:18:66"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 22076,
              "nodeType": "StructuredDocumentation",
              "src": "2064:243:66",
              "text": "@dev Compute optimal deposit amount\n @param amtA amount of token A desired to deposit\n @param amtB amount of token B desired to deposit\n @param resA amount of token A in reserve\n @param resB amount of token B in reserve"
            },
            "id": 22130,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "optimalDeposit",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 22085,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22078,
                  "mutability": "mutable",
                  "name": "amtA",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22130,
                  "src": "2339:9:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22077,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2339:4:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22080,
                  "mutability": "mutable",
                  "name": "amtB",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22130,
                  "src": "2354:9:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22079,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2354:4:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22082,
                  "mutability": "mutable",
                  "name": "resA",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22130,
                  "src": "2369:9:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22081,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2369:4:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22084,
                  "mutability": "mutable",
                  "name": "resB",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22130,
                  "src": "2384:9:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22083,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2384:4:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2333:64:66"
            },
            "returnParameters": {
              "id": 22090,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22087,
                  "mutability": "mutable",
                  "name": "swapAmt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22130,
                  "src": "2421:12:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22086,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2421:4:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22089,
                  "mutability": "mutable",
                  "name": "isReversed",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22130,
                  "src": "2435:15:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 22088,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2435:4:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2420:31:66"
            },
            "scope": 23288,
            "src": "2310:377:66",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 22243,
              "nodeType": "Block",
              "src": "3114:406:66",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 22153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 22147,
                              "name": "resB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22139,
                              "src": "3137:4:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 22145,
                              "name": "amtA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22133,
                              "src": "3128:4:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 22146,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27449,
                            "src": "3128:8:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 22148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3128:14:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 22151,
                              "name": "resA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22137,
                              "src": "3155:4:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 22149,
                              "name": "amtB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22135,
                              "src": "3146:4:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 22150,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27449,
                            "src": "3146:8:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 22152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3146:14:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3128:32:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5265766572736564",
                        "id": 22154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3162:10:66",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae550d2aef13556bbd59e653f8f1587c67039de6b3f08dcf11ed55f61e34b1aa",
                          "typeString": "literal_string \"Reversed\""
                        },
                        "value": "Reversed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae550d2aef13556bbd59e653f8f1587c67039de6b3f08dcf11ed55f61e34b1aa",
                          "typeString": "literal_string \"Reversed\""
                        }
                      ],
                      "id": 22144,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3120:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 22155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3120:53:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22156,
                  "nodeType": "ExpressionStatement",
                  "src": "3120:53:66"
                },
                {
                  "assignments": [
                    22158
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22158,
                      "mutability": "mutable",
                      "name": "a",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 22243,
                      "src": "3179:6:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 22157,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3179:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 22160,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "393937",
                    "id": 22159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3188:3:66",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_997_by_1",
                      "typeString": "int_const 997"
                    },
                    "value": "997"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3179:12:66"
                },
                {
                  "assignments": [
                    22162
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22162,
                      "mutability": "mutable",
                      "name": "b",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 22243,
                      "src": "3197:6:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 22161,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3197:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 22170,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 22168,
                        "name": "resA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22137,
                        "src": "3221:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "31393937",
                            "id": 22165,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3211:4:66",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1997_by_1",
                              "typeString": "int_const 1997"
                            },
                            "value": "1997"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1997_by_1",
                              "typeString": "int_const 1997"
                            }
                          ],
                          "id": 22164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3206:4:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 22163,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "3206:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 22166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3206:10:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 22167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27449,
                      "src": "3206:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 22169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3206:20:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3197:29:66"
                },
                {
                  "assignments": [
                    22172
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22172,
                      "mutability": "mutable",
                      "name": "_c",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 22243,
                      "src": "3232:7:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 22171,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3232:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 22184,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 22181,
                            "name": "resA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22137,
                            "src": "3272:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 22179,
                            "name": "amtB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22135,
                            "src": "3263:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 22180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27449,
                          "src": "3263:8:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 22182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3263:14:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 22175,
                                "name": "resB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22139,
                                "src": "3252:4:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 22173,
                                "name": "amtA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22133,
                                "src": "3243:4:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 22174,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 27449,
                              "src": "3243:8:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 22176,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3243:14:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 22177,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3242:16:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 22178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27415,
                      "src": "3242:20:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 22183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3242:36:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3232:46:66"
                },
                {
                  "assignments": [
                    22186
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22186,
                      "mutability": "mutable",
                      "name": "c",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 22243,
                      "src": "3284:6:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 22185,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3284:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 22200,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 22198,
                        "name": "resA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22137,
                        "src": "3330:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 22194,
                                "name": "resB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22139,
                                "src": "3319:4:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 22192,
                                "name": "amtB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22135,
                                "src": "3310:4:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 22193,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 27393,
                              "src": "3310:8:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 22195,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3310:14:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "31303030",
                                "id": 22189,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3300:4:66",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000_by_1",
                                  "typeString": "int_const 1000"
                                },
                                "value": "1000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1000_by_1",
                                  "typeString": "int_const 1000"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 22187,
                                "name": "_c",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22172,
                                "src": "3293:2:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 22188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 27449,
                              "src": "3293:6:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 22190,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3293:12:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 22191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27471,
                          "src": "3293:16:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 22196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3293:32:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 22197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27449,
                      "src": "3293:36:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 22199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3293:42:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3284:51:66"
                },
                {
                  "assignments": [
                    22202
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22202,
                      "mutability": "mutable",
                      "name": "d",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 22243,
                      "src": "3341:6:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 22201,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3341:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 22210,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "34",
                        "id": 22208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3363:1:66",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 22205,
                            "name": "c",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22186,
                            "src": "3356:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 22203,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22158,
                            "src": "3350:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 22204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27449,
                          "src": "3350:5:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 22206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3350:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 22207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27449,
                      "src": "3350:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 22209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3350:15:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3341:24:66"
                },
                {
                  "assignments": [
                    22212
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22212,
                      "mutability": "mutable",
                      "name": "e",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 22243,
                      "src": "3371:6:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 22211,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3371:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 22223,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 22220,
                            "name": "d",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22202,
                            "src": "3409:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 22217,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22162,
                                "src": "3402:1:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 22215,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22162,
                                "src": "3396:1:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 22216,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 27449,
                              "src": "3396:5:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 22218,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3396:8:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 22219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27393,
                          "src": "3396:12:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 22221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3396:15:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 22213,
                        "name": "HomoraMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25625,
                        "src": "3380:10:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_HomoraMath_$25625_$",
                          "typeString": "type(library HomoraMath)"
                        }
                      },
                      "id": 22214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sqrt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25624,
                      "src": "3380:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) pure returns (uint256)"
                      }
                    },
                    "id": 22222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3380:32:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3371:41:66"
                },
                {
                  "assignments": [
                    22225
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22225,
                      "mutability": "mutable",
                      "name": "numerator",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 22243,
                      "src": "3418:14:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 22224,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3418:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 22230,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 22228,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22162,
                        "src": "3441:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 22226,
                        "name": "e",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22212,
                        "src": "3435:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 22227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27415,
                      "src": "3435:5:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 22229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3435:8:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3418:25:66"
                },
                {
                  "assignments": [
                    22232
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22232,
                      "mutability": "mutable",
                      "name": "denominator",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 22243,
                      "src": "3449:16:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 22231,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3449:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 22237,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 22235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3474:1:66",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 22233,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22158,
                        "src": "3468:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 22234,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27449,
                      "src": "3468:5:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 22236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3468:8:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3449:27:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 22240,
                        "name": "denominator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22232,
                        "src": "3503:11:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 22238,
                        "name": "numerator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22225,
                        "src": "3489:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 22239,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27471,
                      "src": "3489:13:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 22241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3489:26:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 22143,
                  "id": 22242,
                  "nodeType": "Return",
                  "src": "3482:33:66"
                }
              ]
            },
            "documentation": {
              "id": 22131,
              "nodeType": "StructuredDocumentation",
              "src": "2691:301:66",
              "text": "@dev Compute optimal deposit amount helper.\n @param amtA amount of token A desired to deposit\n @param amtB amount of token B desired to deposit\n @param resA amount of token A in reserve\n @param resB amount of token B in reserve\n Formula: https://blog.alphafinance.io/byot/"
            },
            "id": 22244,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_optimalDepositA",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 22140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22133,
                  "mutability": "mutable",
                  "name": "amtA",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22244,
                  "src": "3026:9:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22132,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3026:4:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22135,
                  "mutability": "mutable",
                  "name": "amtB",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22244,
                  "src": "3041:9:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22134,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3041:4:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22137,
                  "mutability": "mutable",
                  "name": "resA",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22244,
                  "src": "3056:9:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22136,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3056:4:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22139,
                  "mutability": "mutable",
                  "name": "resB",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22244,
                  "src": "3071:9:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22138,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3071:4:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3020:64:66"
            },
            "returnParameters": {
              "id": 22143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22142,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22244,
                  "src": "3108:4:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22141,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3108:4:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3107:6:66"
            },
            "scope": 23288,
            "src": "2995:525:66",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "canonicalName": "SushiswapSpellV1.Amounts",
            "id": 22261,
            "members": [
              {
                "constant": false,
                "id": 22246,
                "mutability": "mutable",
                "name": "amtAUser",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 22261,
                "src": "3545:13:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 22245,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "3545:4:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 22248,
                "mutability": "mutable",
                "name": "amtBUser",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 22261,
                "src": "3590:13:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 22247,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "3590:4:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 22250,
                "mutability": "mutable",
                "name": "amtLPUser",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 22261,
                "src": "3635:14:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 22249,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "3635:4:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 22252,
                "mutability": "mutable",
                "name": "amtABorrow",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 22261,
                "src": "3683:15:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 22251,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "3683:4:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 22254,
                "mutability": "mutable",
                "name": "amtBBorrow",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 22261,
                "src": "3728:15:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 22253,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "3728:4:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 22256,
                "mutability": "mutable",
                "name": "amtLPBorrow",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 22261,
                "src": "3773:16:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 22255,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "3773:4:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 22258,
                "mutability": "mutable",
                "name": "amtAMin",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 22261,
                "src": "3821:12:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 22257,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "3821:4:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 22260,
                "mutability": "mutable",
                "name": "amtBMin",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 22261,
                "src": "3883:12:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 22259,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "3883:4:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Amounts",
            "nodeType": "StructDefinition",
            "scope": 23288,
            "src": "3524:420:66",
            "visibility": "public"
          },
          {
            "body": {
              "id": 22512,
              "nodeType": "Block",
              "src": "4261:1622:66",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 22274,
                          "name": "whitelistedLpTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24668,
                          "src": "4275:19:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 22276,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 22275,
                          "name": "lp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22270,
                          "src": "4295:2:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4275:23:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6c7020746f6b656e206e6f742077686974656c6973746564",
                        "id": 22277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4300:26:66",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_76fd3bc08be88f328f09320fa313b292032a5afbcfc99b8a4713537b5c013f5e",
                          "typeString": "literal_string \"lp token not whitelisted\""
                        },
                        "value": "lp token not whitelisted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_76fd3bc08be88f328f09320fa313b292032a5afbcfc99b8a4713537b5c013f5e",
                          "typeString": "literal_string \"lp token not whitelisted\""
                        }
                      ],
                      "id": 22273,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4267:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 22278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4267:60:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22279,
                  "nodeType": "ExpressionStatement",
                  "src": "4267:60:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 22280,
                      "name": "doTransmitETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19273,
                      "src": "4367:13:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 22281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4367:15:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22282,
                  "nodeType": "ExpressionStatement",
                  "src": "4367:15:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 22284,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22264,
                        "src": "4399:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 22285,
                          "name": "amt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22268,
                          "src": "4407:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Amounts_$22261_calldata_ptr",
                            "typeString": "struct SushiswapSpellV1.Amounts calldata"
                          }
                        },
                        "id": 22286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amtAUser",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 22246,
                        "src": "4407:12:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 22283,
                      "name": "doTransmit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19294,
                      "src": "4388:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 22287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4388:32:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22288,
                  "nodeType": "ExpressionStatement",
                  "src": "4388:32:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 22290,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22266,
                        "src": "4437:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 22291,
                          "name": "amt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22268,
                          "src": "4445:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Amounts_$22261_calldata_ptr",
                            "typeString": "struct SushiswapSpellV1.Amounts calldata"
                          }
                        },
                        "id": 22292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amtBUser",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 22248,
                        "src": "4445:12:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 22289,
                      "name": "doTransmit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19294,
                      "src": "4426:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 22293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4426:32:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22294,
                  "nodeType": "ExpressionStatement",
                  "src": "4426:32:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 22296,
                        "name": "lp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22270,
                        "src": "4475:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 22297,
                          "name": "amt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22268,
                          "src": "4479:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Amounts_$22261_calldata_ptr",
                            "typeString": "struct SushiswapSpellV1.Amounts calldata"
                          }
                        },
                        "id": 22298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amtLPUser",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 22250,
                        "src": "4479:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 22295,
                      "name": "doTransmit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19294,
                      "src": "4464:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 22299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4464:29:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22300,
                  "nodeType": "ExpressionStatement",
                  "src": "4464:29:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 22302,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22264,
                        "src": "4544:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 22303,
                          "name": "amt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22268,
                          "src": "4552:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Amounts_$22261_calldata_ptr",
                            "typeString": "struct SushiswapSpellV1.Amounts calldata"
                          }
                        },
                        "id": 22304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amtABorrow",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 22252,
                        "src": "4552:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 22301,
                      "name": "doBorrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19397,
                      "src": "4535:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 22305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4535:32:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22306,
                  "nodeType": "ExpressionStatement",
                  "src": "4535:32:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 22308,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22266,
                        "src": "4582:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 22309,
                          "name": "amt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22268,
                          "src": "4590:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Amounts_$22261_calldata_ptr",
                            "typeString": "struct SushiswapSpellV1.Amounts calldata"
                          }
                        },
                        "id": 22310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amtBBorrow",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 22254,
                        "src": "4590:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 22307,
                      "name": "doBorrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19397,
                      "src": "4573:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 22311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4573:32:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22312,
                  "nodeType": "ExpressionStatement",
                  "src": "4573:32:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 22314,
                        "name": "lp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22270,
                        "src": "4620:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 22315,
                          "name": "amt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22268,
                          "src": "4624:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Amounts_$22261_calldata_ptr",
                            "typeString": "struct SushiswapSpellV1.Amounts calldata"
                          }
                        },
                        "id": 22316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amtLPBorrow",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 22256,
                        "src": "4624:15:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 22313,
                      "name": "doBorrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19397,
                      "src": "4611:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 22317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4611:29:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22318,
                  "nodeType": "ExpressionStatement",
                  "src": "4611:29:66"
                },
                {
                  "assignments": [
                    22320
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22320,
                      "mutability": "mutable",
                      "name": "swapAmt",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 22512,
                      "src": "4687:12:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 22319,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4687:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 22321,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4687:12:66"
                },
                {
                  "assignments": [
                    22323
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22323,
                      "mutability": "mutable",
                      "name": "isReversed",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 22512,
                      "src": "4705:15:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 22322,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4705:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 22324,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4705:15:66"
                },
                {
                  "id": 22396,
                  "nodeType": "Block",
                  "src": "4726:421:66",
                  "statements": [
                    {
                      "assignments": [
                        22326
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 22326,
                          "mutability": "mutable",
                          "name": "amtA",
                          "nodeType": "VariableDeclaration",
                          "overrides": null,
                          "scope": 22396,
                          "src": "4734:9:66",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 22325,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "4734:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 22336,
                      "initialValue": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 22333,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4779:4:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SushiswapSpellV1_$23288",
                                  "typeString": "contract SushiswapSpellV1"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SushiswapSpellV1_$23288",
                                  "typeString": "contract SushiswapSpellV1"
                                }
                              ],
                              "id": 22332,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4771:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 22331,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4771:7:66",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 22334,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4771:13:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 22328,
                                "name": "tokenA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22264,
                                "src": "4753:6:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 22327,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27766,
                              "src": "4746:6:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$27766_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 22329,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4746:14:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$27766",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 22330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27705,
                          "src": "4746:24:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 22335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4746:39:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "4734:51:66"
                    },
                    {
                      "assignments": [
                        22338
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 22338,
                          "mutability": "mutable",
                          "name": "amtB",
                          "nodeType": "VariableDeclaration",
                          "overrides": null,
                          "scope": 22396,
                          "src": "4793:9:66",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 22337,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "4793:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 22348,
                      "initialValue": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 22345,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4838:4:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SushiswapSpellV1_$23288",
                                  "typeString": "contract SushiswapSpellV1"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SushiswapSpellV1_$23288",
                                  "typeString": "contract SushiswapSpellV1"
                                }
                              ],
                              "id": 22344,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4830:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 22343,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4830:7:66",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 22346,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4830:13:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 22340,
                                "name": "tokenB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22266,
                                "src": "4812:6:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 22339,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27766,
                              "src": "4805:6:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$27766_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 22341,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4805:14:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$27766",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 22342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27705,
                          "src": "4805:24:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 22347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4805:39:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "4793:51:66"
                    },
                    {
                      "assignments": [
                        22350
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 22350,
                          "mutability": "mutable",
                          "name": "resA",
                          "nodeType": "VariableDeclaration",
                          "overrides": null,
                          "scope": 22396,
                          "src": "4852:9:66",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 22349,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "4852:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 22351,
                      "initialValue": null,
                      "nodeType": "VariableDeclarationStatement",
                      "src": "4852:9:66"
                    },
                    {
                      "assignments": [
                        22353
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 22353,
                          "mutability": "mutable",
                          "name": "resB",
                          "nodeType": "VariableDeclaration",
                          "overrides": null,
                          "scope": 22396,
                          "src": "4869:9:66",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 22352,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "4869:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 22354,
                      "initialValue": null,
                      "nodeType": "VariableDeclarationStatement",
                      "src": "4869:9:66"
                    },
                    {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 22361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 22356,
                                  "name": "lp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22270,
                                  "src": "4905:2:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 22355,
                                "name": "IUniswapV2Pair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29792,
                                "src": "4890:14:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$29792_$",
                                  "typeString": "type(contract IUniswapV2Pair)"
                                }
                              },
                              "id": 22357,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4890:18:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV2Pair_$29792",
                                "typeString": "contract IUniswapV2Pair"
                              }
                            },
                            "id": 22358,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "token0",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29720,
                            "src": "4890:25:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 22359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4890:27:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 22360,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22264,
                          "src": "4921:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4890:37:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 22383,
                        "nodeType": "Block",
                        "src": "5003:68:66",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "id": 22381,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "id": 22373,
                                    "name": "resB",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22353,
                                    "src": "5014:4:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 22374,
                                    "name": "resA",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22350,
                                    "src": "5020:4:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  null
                                ],
                                "id": 22375,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "TupleExpression",
                                "src": "5013:14:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$__$",
                                  "typeString": "tuple(uint256,uint256,)"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 22377,
                                        "name": "lp",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 22270,
                                        "src": "5045:2:66",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 22376,
                                      "name": "IUniswapV2Pair",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 29792,
                                      "src": "5030:14:66",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$29792_$",
                                        "typeString": "type(contract IUniswapV2Pair)"
                                      }
                                    },
                                    "id": 22378,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5030:18:66",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IUniswapV2Pair_$29792",
                                      "typeString": "contract IUniswapV2Pair"
                                    }
                                  },
                                  "id": 22379,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "getReserves",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 29734,
                                  "src": "5030:30:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                                    "typeString": "function () view external returns (uint112,uint112,uint32)"
                                  }
                                },
                                "id": 22380,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5030:32:66",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                                  "typeString": "tuple(uint112,uint112,uint32)"
                                }
                              },
                              "src": "5013:49:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 22382,
                            "nodeType": "ExpressionStatement",
                            "src": "5013:49:66"
                          }
                        ]
                      },
                      "id": 22384,
                      "nodeType": "IfStatement",
                      "src": "4886:185:66",
                      "trueBody": {
                        "id": 22372,
                        "nodeType": "Block",
                        "src": "4929:68:66",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "id": 22370,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "id": 22362,
                                    "name": "resA",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22350,
                                    "src": "4940:4:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 22363,
                                    "name": "resB",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22353,
                                    "src": "4946:4:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  null
                                ],
                                "id": 22364,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "TupleExpression",
                                "src": "4939:14:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$__$",
                                  "typeString": "tuple(uint256,uint256,)"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 22366,
                                        "name": "lp",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 22270,
                                        "src": "4971:2:66",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 22365,
                                      "name": "IUniswapV2Pair",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 29792,
                                      "src": "4956:14:66",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$29792_$",
                                        "typeString": "type(contract IUniswapV2Pair)"
                                      }
                                    },
                                    "id": 22367,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4956:18:66",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IUniswapV2Pair_$29792",
                                      "typeString": "contract IUniswapV2Pair"
                                    }
                                  },
                                  "id": 22368,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "getReserves",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 29734,
                                  "src": "4956:30:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                                    "typeString": "function () view external returns (uint112,uint112,uint32)"
                                  }
                                },
                                "id": 22369,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4956:32:66",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                                  "typeString": "tuple(uint112,uint112,uint32)"
                                }
                              },
                              "src": "4939:49:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 22371,
                            "nodeType": "ExpressionStatement",
                            "src": "4939:49:66"
                          }
                        ]
                      }
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 22394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "id": 22385,
                              "name": "swapAmt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22320,
                              "src": "5079:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 22386,
                              "name": "isReversed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22323,
                              "src": "5088:10:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 22387,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "TupleExpression",
                          "src": "5078:21:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
                            "typeString": "tuple(uint256,bool)"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 22389,
                              "name": "amtA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22326,
                              "src": "5117:4:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 22390,
                              "name": "amtB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22338,
                              "src": "5123:4:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 22391,
                              "name": "resA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22350,
                              "src": "5129:4:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 22392,
                              "name": "resB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22353,
                              "src": "5135:4:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 22388,
                            "name": "optimalDeposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22130,
                            "src": "5102:14:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_bool_$",
                              "typeString": "function (uint256,uint256,uint256,uint256) pure returns (uint256,bool)"
                            }
                          },
                          "id": 22393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5102:38:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
                            "typeString": "tuple(uint256,bool)"
                          }
                        },
                        "src": "5078:62:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 22395,
                      "nodeType": "ExpressionStatement",
                      "src": "5078:62:66"
                    }
                  ]
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 22399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 22397,
                      "name": "swapAmt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22320,
                      "src": "5187:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 22398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5197:1:66",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5187:11:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 22443,
                  "nodeType": "IfStatement",
                  "src": "5183:238:66",
                  "trueBody": {
                    "id": 22442,
                    "nodeType": "Block",
                    "src": "5200:221:66",
                    "statements": [
                      {
                        "assignments": [
                          22404
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 22404,
                            "mutability": "mutable",
                            "name": "path",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 22442,
                            "src": "5208:21:66",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 22402,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5208:7:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 22403,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "5208:9:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 22410,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 22408,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5246:1:66",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "id": 22407,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "5232:13:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (address[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 22405,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5236:7:66",
                                "stateMutability": "nonpayable",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 22406,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "5236:9:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            }
                          },
                          "id": 22409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5232:16:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5208:40:66"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 22426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 22411,
                                  "name": "path",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22404,
                                  "src": "5257:4:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 22413,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 22412,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5262:1:66",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "5257:7:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 22414,
                                  "name": "path",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22404,
                                  "src": "5266:4:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 22416,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "31",
                                  "id": 22415,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5271:1:66",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "5266:7:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "id": 22417,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "5256:18:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                              "typeString": "tuple(address,address)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "condition": {
                              "argumentTypes": null,
                              "id": 22418,
                              "name": "isReversed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22323,
                              "src": "5277:10:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseExpression": {
                              "argumentTypes": null,
                              "components": [
                                {
                                  "argumentTypes": null,
                                  "id": 22422,
                                  "name": "tokenA",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22264,
                                  "src": "5310:6:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 22423,
                                  "name": "tokenB",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22266,
                                  "src": "5318:6:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "id": 22424,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5309:16:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                                "typeString": "tuple(address,address)"
                              }
                            },
                            "id": 22425,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "Conditional",
                            "src": "5277:48:66",
                            "trueExpression": {
                              "argumentTypes": null,
                              "components": [
                                {
                                  "argumentTypes": null,
                                  "id": 22419,
                                  "name": "tokenB",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22266,
                                  "src": "5291:6:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 22420,
                                  "name": "tokenA",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22264,
                                  "src": "5299:6:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "id": 22421,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5290:16:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                                "typeString": "tuple(address,address)"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                              "typeString": "tuple(address,address)"
                            }
                          },
                          "src": "5256:69:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 22427,
                        "nodeType": "ExpressionStatement",
                        "src": "5256:69:66"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 22431,
                              "name": "swapAmt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22320,
                              "src": "5365:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 22432,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5374:1:66",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "argumentTypes": null,
                              "id": 22433,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22404,
                              "src": "5377:4:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 22436,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "5391:4:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SushiswapSpellV1_$23288",
                                    "typeString": "contract SushiswapSpellV1"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SushiswapSpellV1_$23288",
                                    "typeString": "contract SushiswapSpellV1"
                                  }
                                ],
                                "id": 22435,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5383:7:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 22434,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5383:7:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 22437,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5383:13:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 22438,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "5398:5:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 22439,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5398:15:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 22428,
                              "name": "router",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21919,
                              "src": "5333:6:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV2Router02_$30814",
                                "typeString": "contract IUniswapV2Router02"
                              }
                            },
                            "id": 22430,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "swapExactTokensForTokens",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32721,
                            "src": "5333:31:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"
                            }
                          },
                          "id": 22440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5333:81:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 22441,
                        "nodeType": "ExpressionStatement",
                        "src": "5333:81:66"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    22445
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22445,
                      "mutability": "mutable",
                      "name": "balA",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 22512,
                      "src": "5451:9:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 22444,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5451:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 22455,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 22452,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5496:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SushiswapSpellV1_$23288",
                              "typeString": "contract SushiswapSpellV1"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SushiswapSpellV1_$23288",
                              "typeString": "contract SushiswapSpellV1"
                            }
                          ],
                          "id": 22451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5488:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 22450,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5488:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 22453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5488:13:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 22447,
                            "name": "tokenA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22264,
                            "src": "5470:6:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 22446,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27766,
                          "src": "5463:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$27766_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 22448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5463:14:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$27766",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 22449,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27705,
                      "src": "5463:24:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 22454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5463:39:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5451:51:66"
                },
                {
                  "assignments": [
                    22457
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22457,
                      "mutability": "mutable",
                      "name": "balB",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 22512,
                      "src": "5508:9:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 22456,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5508:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 22467,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 22464,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5553:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SushiswapSpellV1_$23288",
                              "typeString": "contract SushiswapSpellV1"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SushiswapSpellV1_$23288",
                              "typeString": "contract SushiswapSpellV1"
                            }
                          ],
                          "id": 22463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5545:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 22462,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5545:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 22465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5545:13:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 22459,
                            "name": "tokenB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22266,
                            "src": "5527:6:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 22458,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27766,
                          "src": "5520:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$27766_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 22460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5520:14:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$27766",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 22461,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27705,
                      "src": "5520:24:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 22466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5520:39:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5508:51:66"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 22474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 22470,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 22468,
                        "name": "balA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22445,
                        "src": "5569:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 22469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5576:1:66",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "5569:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 22473,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 22471,
                        "name": "balB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22457,
                        "src": "5581:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 22472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5588:1:66",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "5581:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5569:20:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 22511,
                  "nodeType": "IfStatement",
                  "src": "5565:314:66",
                  "trueBody": {
                    "id": 22510,
                    "nodeType": "Block",
                    "src": "5591:288:66",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 22479,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 22476,
                                "name": "balA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22445,
                                "src": "5607:4:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 22477,
                                  "name": "amt",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22268,
                                  "src": "5615:3:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Amounts_$22261_calldata_ptr",
                                    "typeString": "struct SushiswapSpellV1.Amounts calldata"
                                  }
                                },
                                "id": 22478,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amtAMin",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 22258,
                                "src": "5615:11:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5607:19:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "21616d74414d696e",
                              "id": 22480,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5628:10:66",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9d95460184509e92715d10112c6b14cb90f5eac140338ecbb884ea6b205bc610",
                                "typeString": "literal_string \"!amtAMin\""
                              },
                              "value": "!amtAMin"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9d95460184509e92715d10112c6b14cb90f5eac140338ecbb884ea6b205bc610",
                                "typeString": "literal_string \"!amtAMin\""
                              }
                            ],
                            "id": 22475,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5599:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 22481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5599:40:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 22482,
                        "nodeType": "ExpressionStatement",
                        "src": "5599:40:66"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 22487,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 22484,
                                "name": "balB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22457,
                                "src": "5655:4:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 22485,
                                  "name": "amt",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22268,
                                  "src": "5663:3:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Amounts_$22261_calldata_ptr",
                                    "typeString": "struct SushiswapSpellV1.Amounts calldata"
                                  }
                                },
                                "id": 22486,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amtBMin",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 22260,
                                "src": "5663:11:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5655:19:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "21616d74424d696e",
                              "id": 22488,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5676:10:66",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_10512d2d413d241da6a183e26d213f9eb1db44c58e70faf498b08cd3dc422e0a",
                                "typeString": "literal_string \"!amtBMin\""
                              },
                              "value": "!amtBMin"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_10512d2d413d241da6a183e26d213f9eb1db44c58e70faf498b08cd3dc422e0a",
                                "typeString": "literal_string \"!amtBMin\""
                              }
                            ],
                            "id": 22483,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5647:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 22489,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5647:40:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 22490,
                        "nodeType": "ExpressionStatement",
                        "src": "5647:40:66"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 22494,
                              "name": "tokenA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22264,
                              "src": "5724:6:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 22495,
                              "name": "tokenB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22266,
                              "src": "5740:6:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 22496,
                              "name": "balA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22445,
                              "src": "5756:4:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 22497,
                              "name": "balB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22457,
                              "src": "5770:4:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 22498,
                                "name": "amt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22268,
                                "src": "5784:3:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Amounts_$22261_calldata_ptr",
                                  "typeString": "struct SushiswapSpellV1.Amounts calldata"
                                }
                              },
                              "id": 22499,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amtAMin",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 22258,
                              "src": "5784:11:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 22500,
                                "name": "amt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22268,
                                "src": "5805:3:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Amounts_$22261_calldata_ptr",
                                  "typeString": "struct SushiswapSpellV1.Amounts calldata"
                                }
                              },
                              "id": 22501,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amtBMin",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 22260,
                              "src": "5805:11:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 22504,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "5834:4:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SushiswapSpellV1_$23288",
                                    "typeString": "contract SushiswapSpellV1"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SushiswapSpellV1_$23288",
                                    "typeString": "contract SushiswapSpellV1"
                                  }
                                ],
                                "id": 22503,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5826:7:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 22502,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5826:7:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 22505,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5826:13:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 22506,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "5849:5:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 22507,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5849:15:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 22491,
                              "name": "router",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21919,
                              "src": "5695:6:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV2Router02_$30814",
                                "typeString": "contract IUniswapV2Router02"
                              }
                            },
                            "id": 22493,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addLiquidity",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32587,
                            "src": "5695:19:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                              "typeString": "function (address,address,uint256,uint256,uint256,uint256,address,uint256) external returns (uint256,uint256,uint256)"
                            }
                          },
                          "id": 22508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5695:177:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256,uint256)"
                          }
                        },
                        "id": 22509,
                        "nodeType": "ExpressionStatement",
                        "src": "5695:177:66"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 22262,
              "nodeType": "StructuredDocumentation",
              "src": "3948:185:66",
              "text": "@dev Add liquidity to Sushiswap pool\n @param tokenA Token A for the pair\n @param tokenB Token B for the pair\n @param amt Amounts of tokens to supply, borrow, and get."
            },
            "id": 22513,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addLiquidityInternal",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 22271,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22264,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22513,
                  "src": "4171:14:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22263,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4171:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22266,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22513,
                  "src": "4191:14:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22265,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4191:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22268,
                  "mutability": "mutable",
                  "name": "amt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22513,
                  "src": "4211:20:66",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Amounts_$22261_calldata_ptr",
                    "typeString": "struct SushiswapSpellV1.Amounts"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 22267,
                    "name": "Amounts",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 22261,
                    "src": "4211:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Amounts_$22261_storage_ptr",
                      "typeString": "struct SushiswapSpellV1.Amounts"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22270,
                  "mutability": "mutable",
                  "name": "lp",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22513,
                  "src": "4237:10:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22269,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4237:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4165:86:66"
            },
            "returnParameters": {
              "id": 22272,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4261:0:66"
            },
            "scope": 23288,
            "src": "4136:1747:66",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 22561,
              "nodeType": "Block",
              "src": "6236:322:66",
              "statements": [
                {
                  "assignments": [
                    22524
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22524,
                      "mutability": "mutable",
                      "name": "lp",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 22561,
                      "src": "6242:10:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 22523,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6242:7:66",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 22529,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 22526,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22516,
                        "src": "6273:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 22527,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22518,
                        "src": "6281:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 22525,
                      "name": "getAndApprovePair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22075,
                      "src": "6255:17:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$_t_address_$",
                        "typeString": "function (address,address) returns (address)"
                      }
                    },
                    "id": 22528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6255:33:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6242:46:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 22531,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22516,
                        "src": "6341:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 22532,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22518,
                        "src": "6349:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 22533,
                        "name": "amt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22520,
                        "src": "6357:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Amounts_$22261_calldata_ptr",
                          "typeString": "struct SushiswapSpellV1.Amounts calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 22534,
                        "name": "lp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22524,
                        "src": "6362:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_Amounts_$22261_calldata_ptr",
                          "typeString": "struct SushiswapSpellV1.Amounts calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 22530,
                      "name": "addLiquidityInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22513,
                      "src": "6320:20:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_struct$_Amounts_$22261_calldata_ptr_$_t_address_$returns$__$",
                        "typeString": "function (address,address,struct SushiswapSpellV1.Amounts calldata,address)"
                      }
                    },
                    "id": 22535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6320:45:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22536,
                  "nodeType": "ExpressionStatement",
                  "src": "6320:45:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 22538,
                        "name": "lp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22524,
                        "src": "6413:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 22545,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "6446:4:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SushiswapSpellV1_$23288",
                                  "typeString": "contract SushiswapSpellV1"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SushiswapSpellV1_$23288",
                                  "typeString": "contract SushiswapSpellV1"
                                }
                              ],
                              "id": 22544,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6438:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 22543,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6438:7:66",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 22546,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6438:13:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 22540,
                                "name": "lp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22524,
                                "src": "6424:2:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 22539,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27766,
                              "src": "6417:6:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$27766_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 22541,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6417:10:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$27766",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 22542,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27705,
                          "src": "6417:20:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 22547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6417:35:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 22537,
                      "name": "doPutCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19469,
                      "src": "6397:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 22548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6397:56:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22549,
                  "nodeType": "ExpressionStatement",
                  "src": "6397:56:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 22550,
                      "name": "doRefundETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19376,
                      "src": "6496:11:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 22551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6496:13:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22552,
                  "nodeType": "ExpressionStatement",
                  "src": "6496:13:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 22554,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22516,
                        "src": "6524:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 22553,
                      "name": "doRefund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19328,
                      "src": "6515:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 22555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6515:16:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22556,
                  "nodeType": "ExpressionStatement",
                  "src": "6515:16:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 22558,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22518,
                        "src": "6546:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 22557,
                      "name": "doRefund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19328,
                      "src": "6537:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 22559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6537:16:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22560,
                  "nodeType": "ExpressionStatement",
                  "src": "6537:16:66"
                }
              ]
            },
            "documentation": {
              "id": 22514,
              "nodeType": "StructuredDocumentation",
              "src": "5887:231:66",
              "text": "@dev Add liquidity to Sushiswap pool, with no staking rewards (use WERC20 wrapper)\n @param tokenA Token A for the pair\n @param tokenB Token B for the pair\n @param amt Amounts of tokens to supply, borrow, and get."
            },
            "functionSelector": "cc9b1880",
            "id": 22562,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addLiquidityWERC20",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 22521,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22516,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22562,
                  "src": "6154:14:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22515,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6154:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22518,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22562,
                  "src": "6174:14:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22517,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6174:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22520,
                  "mutability": "mutable",
                  "name": "amt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22562,
                  "src": "6194:20:66",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Amounts_$22261_calldata_ptr",
                    "typeString": "struct SushiswapSpellV1.Amounts"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 22519,
                    "name": "Amounts",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 22261,
                    "src": "6194:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Amounts_$22261_storage_ptr",
                      "typeString": "struct SushiswapSpellV1.Amounts"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6148:70:66"
            },
            "returnParameters": {
              "id": 22522,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6236:0:66"
            },
            "scope": 23288,
            "src": "6121:437:66",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 22715,
              "nodeType": "Block",
              "src": "6937:1084:66",
              "statements": [
                {
                  "assignments": [
                    22575
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22575,
                      "mutability": "mutable",
                      "name": "lp",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 22715,
                      "src": "6943:10:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 22574,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6943:7:66",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 22580,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 22577,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22565,
                        "src": "6974:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 22578,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22567,
                        "src": "6982:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 22576,
                      "name": "getAndApprovePair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22075,
                      "src": "6956:17:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$_t_address_$",
                        "typeString": "function (address,address) returns (address)"
                      }
                    },
                    "id": 22579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6956:33:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6943:46:66"
                },
                {
                  "assignments": [
                    22582,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22582,
                      "mutability": "mutable",
                      "name": "lpToken",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 22715,
                      "src": "6996:15:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 22581,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6996:7:66",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 22589,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 22587,
                        "name": "pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22571,
                        "src": "7049:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 22583,
                            "name": "wmasterchef",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21927,
                            "src": "7021:11:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IWMasterChef_$30864",
                              "typeString": "contract IWMasterChef"
                            }
                          },
                          "id": 22584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "chef",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30863,
                          "src": "7021:16:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IMasterChef_$31981_$",
                            "typeString": "function () view external returns (contract IMasterChef)"
                          }
                        },
                        "id": 22585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7021:18:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMasterChef_$31981",
                          "typeString": "contract IMasterChef"
                        }
                      },
                      "id": 22586,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "poolInfo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31966,
                      "src": "7021:27:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (address,uint256,uint256,uint256)"
                      }
                    },
                    "id": 22588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7021:32:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(address,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6995:58:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 22593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 22591,
                          "name": "lpToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22582,
                          "src": "7067:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 22592,
                          "name": "lp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22575,
                          "src": "7078:2:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7067:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "696e636f7272656374206c7020746f6b656e",
                        "id": 22594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7082:20:66",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_752725b3c1bad77ca6cdeea3d996e503526eca8d5dfe83ddcf0ce73fde58a2fa",
                          "typeString": "literal_string \"incorrect lp token\""
                        },
                        "value": "incorrect lp token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_752725b3c1bad77ca6cdeea3d996e503526eca8d5dfe83ddcf0ce73fde58a2fa",
                          "typeString": "literal_string \"incorrect lp token\""
                        }
                      ],
                      "id": 22590,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7059:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 22595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7059:44:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22596,
                  "nodeType": "ExpressionStatement",
                  "src": "7059:44:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 22598,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22565,
                        "src": "7157:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 22599,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22567,
                        "src": "7165:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 22600,
                        "name": "amt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22569,
                        "src": "7173:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Amounts_$22261_calldata_ptr",
                          "typeString": "struct SushiswapSpellV1.Amounts calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 22601,
                        "name": "lp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22575,
                        "src": "7178:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_Amounts_$22261_calldata_ptr",
                          "typeString": "struct SushiswapSpellV1.Amounts calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 22597,
                      "name": "addLiquidityInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22513,
                      "src": "7136:20:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_struct$_Amounts_$22261_calldata_ptr_$_t_address_$returns$__$",
                        "typeString": "function (address,address,struct SushiswapSpellV1.Amounts calldata,address)"
                      }
                    },
                    "id": 22602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7136:45:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22603,
                  "nodeType": "ExpressionStatement",
                  "src": "7136:45:66"
                },
                {
                  "assignments": [
                    null,
                    22605,
                    22607,
                    22609
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 22605,
                      "mutability": "mutable",
                      "name": "collToken",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 22715,
                      "src": "7221:17:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 22604,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7221:7:66",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 22607,
                      "mutability": "mutable",
                      "name": "collId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 22715,
                      "src": "7240:11:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 22606,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7240:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 22609,
                      "mutability": "mutable",
                      "name": "collSize",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 22715,
                      "src": "7253:13:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 22608,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7253:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 22613,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 22610,
                        "name": "bank",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19163,
                        "src": "7270:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBank_$28233",
                          "typeString": "contract IBank"
                        }
                      },
                      "id": 22611,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getCurrentPositionInfo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28225,
                      "src": "7270:27:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$_t_address_$_t_uint256_$_t_uint256_$",
                        "typeString": "function () view external returns (address,address,uint256,uint256)"
                      }
                    },
                    "id": 22612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7270:29:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(address,address,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7218:81:66"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 22616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 22614,
                      "name": "collSize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22609,
                      "src": "7309:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 22615,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7320:1:66",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7309:12:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 22660,
                  "nodeType": "IfStatement",
                  "src": "7305:338:66",
                  "trueBody": {
                    "id": 22659,
                    "nodeType": "Block",
                    "src": "7323:320:66",
                    "statements": [
                      {
                        "assignments": [
                          22618,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 22618,
                            "mutability": "mutable",
                            "name": "decodedPid",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 22659,
                            "src": "7332:15:66",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 22617,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "7332:4:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 22623,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 22621,
                              "name": "collId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22607,
                              "src": "7374:6:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 22619,
                              "name": "wmasterchef",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21927,
                              "src": "7353:11:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IWMasterChef_$30864",
                                "typeString": "contract IWMasterChef"
                              }
                            },
                            "id": 22620,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "decodeId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30858,
                            "src": "7353:20:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                              "typeString": "function (uint256) pure external returns (uint256,uint256)"
                            }
                          },
                          "id": 22622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7353:28:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7331:50:66"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 22627,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 22625,
                                "name": "pid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22571,
                                "src": "7397:3:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 22626,
                                "name": "decodedPid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22618,
                                "src": "7404:10:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7397:17:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "696e636f727265637420706964",
                              "id": 22628,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7416:15:66",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ca0c1ceb752432346e095dd222afa161ac115fd06757fd4c03ddd37abda364ab",
                                "typeString": "literal_string \"incorrect pid\""
                              },
                              "value": "incorrect pid"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ca0c1ceb752432346e095dd222afa161ac115fd06757fd4c03ddd37abda364ab",
                                "typeString": "literal_string \"incorrect pid\""
                              }
                            ],
                            "id": 22624,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7389:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 22629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7389:43:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 22630,
                        "nodeType": "ExpressionStatement",
                        "src": "7389:43:66"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 22637,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 22632,
                                "name": "collToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22605,
                                "src": "7448:9:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 22635,
                                    "name": "wmasterchef",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 21927,
                                    "src": "7469:11:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IWMasterChef_$30864",
                                      "typeString": "contract IWMasterChef"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IWMasterChef_$30864",
                                      "typeString": "contract IWMasterChef"
                                    }
                                  ],
                                  "id": 22634,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7461:7:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 22633,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7461:7:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 22636,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7461:20:66",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "7448:33:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "636f6c6c61746572616c20746f6b656e202620776d617374657263686566206d69736d617463686564",
                              "id": 22638,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7483:43:66",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_aa3902542ce074189e7e1f3b2fb5635756df5da19f5a8ac77cb49d532b8c92c0",
                                "typeString": "literal_string \"collateral token & wmasterchef mismatched\""
                              },
                              "value": "collateral token & wmasterchef mismatched"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_aa3902542ce074189e7e1f3b2fb5635756df5da19f5a8ac77cb49d532b8c92c0",
                                "typeString": "literal_string \"collateral token & wmasterchef mismatched\""
                              }
                            ],
                            "id": 22631,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7440:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 22639,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7440:87:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 22640,
                        "nodeType": "ExpressionStatement",
                        "src": "7440:87:66"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 22646,
                                  "name": "wmasterchef",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21927,
                                  "src": "7563:11:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IWMasterChef_$30864",
                                    "typeString": "contract IWMasterChef"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IWMasterChef_$30864",
                                    "typeString": "contract IWMasterChef"
                                  }
                                ],
                                "id": 22645,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7555:7:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 22644,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7555:7:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 22647,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7555:20:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 22648,
                              "name": "collId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22607,
                              "src": "7577:6:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 22649,
                              "name": "collSize",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22609,
                              "src": "7585:8:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 22641,
                              "name": "bank",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19163,
                              "src": "7535:4:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IBank_$28233",
                                "typeString": "contract IBank"
                              }
                            },
                            "id": 22643,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "takeCollateral",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28186,
                            "src": "7535:19:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256) external"
                            }
                          },
                          "id": 22650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7535:59:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 22651,
                        "nodeType": "ExpressionStatement",
                        "src": "7535:59:66"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 22655,
                              "name": "collId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22607,
                              "src": "7619:6:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 22656,
                              "name": "collSize",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22609,
                              "src": "7627:8:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 22652,
                              "name": "wmasterchef",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21927,
                              "src": "7602:11:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IWMasterChef_$30864",
                                "typeString": "contract IWMasterChef"
                              }
                            },
                            "id": 22654,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "burn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30844,
                            "src": "7602:16:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) external returns (uint256)"
                            }
                          },
                          "id": 22657,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7602:34:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 22658,
                        "nodeType": "ExpressionStatement",
                        "src": "7602:34:66"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 22662,
                        "name": "lp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22575,
                        "src": "7688:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 22665,
                            "name": "wmasterchef",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21927,
                            "src": "7700:11:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IWMasterChef_$30864",
                              "typeString": "contract IWMasterChef"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IWMasterChef_$30864",
                              "typeString": "contract IWMasterChef"
                            }
                          ],
                          "id": 22664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7692:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 22663,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7692:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 22666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7692:20:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 22661,
                      "name": "ensureApprove",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19253,
                      "src": "7674:13:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 22667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7674:39:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22668,
                  "nodeType": "ExpressionStatement",
                  "src": "7674:39:66"
                },
                {
                  "assignments": [
                    22670
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22670,
                      "mutability": "mutable",
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 22715,
                      "src": "7719:11:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 22669,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7719:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 22680,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 22677,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7762:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SushiswapSpellV1_$23288",
                              "typeString": "contract SushiswapSpellV1"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SushiswapSpellV1_$23288",
                              "typeString": "contract SushiswapSpellV1"
                            }
                          ],
                          "id": 22676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7754:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 22675,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7754:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 22678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7754:13:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 22672,
                            "name": "lp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22575,
                            "src": "7740:2:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 22671,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27766,
                          "src": "7733:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$27766_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 22673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7733:10:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$27766",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 22674,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27705,
                      "src": "7733:20:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 22679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7733:35:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7719:49:66"
                },
                {
                  "assignments": [
                    22682
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22682,
                      "mutability": "mutable",
                      "name": "id",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 22715,
                      "src": "7774:7:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 22681,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7774:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 22688,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 22685,
                        "name": "pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22571,
                        "src": "7801:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 22686,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22670,
                        "src": "7806:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 22683,
                        "name": "wmasterchef",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21927,
                        "src": "7784:11:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IWMasterChef_$30864",
                          "typeString": "contract IWMasterChef"
                        }
                      },
                      "id": 22684,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30834,
                      "src": "7784:16:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 22687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7784:29:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7774:39:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 22694,
                            "name": "wmasterchef",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21927,
                            "src": "7846:11:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IWMasterChef_$30864",
                              "typeString": "contract IWMasterChef"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IWMasterChef_$30864",
                              "typeString": "contract IWMasterChef"
                            }
                          ],
                          "id": 22693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7838:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 22692,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7838:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 22695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7838:20:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 22696,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22682,
                        "src": "7860:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 22697,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22670,
                        "src": "7864:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 22689,
                        "name": "bank",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19163,
                        "src": "7819:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBank_$28233",
                          "typeString": "contract IBank"
                        }
                      },
                      "id": 22691,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "putCollateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28176,
                      "src": "7819:18:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256) external"
                      }
                    },
                    "id": 22698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7819:52:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22699,
                  "nodeType": "ExpressionStatement",
                  "src": "7819:52:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 22700,
                      "name": "doRefundETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19376,
                      "src": "7914:11:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 22701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7914:13:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22702,
                  "nodeType": "ExpressionStatement",
                  "src": "7914:13:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 22704,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22565,
                        "src": "7942:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 22703,
                      "name": "doRefund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19328,
                      "src": "7933:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 22705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7933:16:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22706,
                  "nodeType": "ExpressionStatement",
                  "src": "7933:16:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 22708,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22567,
                        "src": "7964:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 22707,
                      "name": "doRefund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19328,
                      "src": "7955:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 22709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7955:16:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22710,
                  "nodeType": "ExpressionStatement",
                  "src": "7955:16:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 22712,
                        "name": "sushi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21929,
                        "src": "8010:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 22711,
                      "name": "doRefund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19328,
                      "src": "8001:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 22713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8001:15:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22714,
                  "nodeType": "ExpressionStatement",
                  "src": "8001:15:66"
                }
              ]
            },
            "documentation": {
              "id": 22563,
              "nodeType": "StructuredDocumentation",
              "src": "6562:238:66",
              "text": "@dev Add liquidity to Sushiswap pool, with staking to masterChef\n @param tokenA Token A for the pair\n @param tokenB Token B for the pair\n @param amt Amounts of tokens to supply, borrow, and get.\n @param pid Pool id"
            },
            "functionSelector": "e07d904e",
            "id": 22716,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addLiquidityWMasterChef",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 22572,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22565,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22716,
                  "src": "6841:14:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22564,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6841:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22567,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22716,
                  "src": "6861:14:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22566,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6861:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22569,
                  "mutability": "mutable",
                  "name": "amt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22716,
                  "src": "6881:20:66",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Amounts_$22261_calldata_ptr",
                    "typeString": "struct SushiswapSpellV1.Amounts"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 22568,
                    "name": "Amounts",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 22261,
                    "src": "6881:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Amounts_$22261_storage_ptr",
                      "typeString": "struct SushiswapSpellV1.Amounts"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22571,
                  "mutability": "mutable",
                  "name": "pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22716,
                  "src": "6907:8:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22570,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6907:4:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6835:84:66"
            },
            "returnParameters": {
              "id": 22573,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6937:0:66"
            },
            "scope": 23288,
            "src": "6803:1218:66",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "canonicalName": "SushiswapSpellV1.RepayAmounts",
            "id": 22731,
            "members": [
              {
                "constant": false,
                "id": 22718,
                "mutability": "mutable",
                "name": "amtLPTake",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 22731,
                "src": "8051:14:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 22717,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "8051:4:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 22720,
                "mutability": "mutable",
                "name": "amtLPWithdraw",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 22731,
                "src": "8113:18:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 22719,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "8113:4:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 22722,
                "mutability": "mutable",
                "name": "amtARepay",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 22731,
                "src": "8182:14:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 22721,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "8182:4:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 22724,
                "mutability": "mutable",
                "name": "amtBRepay",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 22731,
                "src": "8225:14:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 22723,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "8225:4:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 22726,
                "mutability": "mutable",
                "name": "amtLPRepay",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 22731,
                "src": "8268:15:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 22725,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "8268:4:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 22728,
                "mutability": "mutable",
                "name": "amtAMin",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 22731,
                "src": "8314:12:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 22727,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "8314:4:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 22730,
                "mutability": "mutable",
                "name": "amtBMin",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 22731,
                "src": "8357:12:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 22729,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "8357:4:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "RepayAmounts",
            "nodeType": "StructDefinition",
            "scope": 23288,
            "src": "8025:374:66",
            "visibility": "public"
          },
          {
            "body": {
              "id": 23063,
              "nodeType": "Block",
              "src": "8740:2231:66",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 22744,
                          "name": "whitelistedLpTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24668,
                          "src": "8754:19:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 22746,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 22745,
                          "name": "lp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22740,
                          "src": "8774:2:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8754:23:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6c7020746f6b656e206e6f742077686974656c6973746564",
                        "id": 22747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8779:26:66",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_76fd3bc08be88f328f09320fa313b292032a5afbcfc99b8a4713537b5c013f5e",
                          "typeString": "literal_string \"lp token not whitelisted\""
                        },
                        "value": "lp token not whitelisted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_76fd3bc08be88f328f09320fa313b292032a5afbcfc99b8a4713537b5c013f5e",
                          "typeString": "literal_string \"lp token not whitelisted\""
                        }
                      ],
                      "id": 22743,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8746:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 22748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8746:60:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22749,
                  "nodeType": "ExpressionStatement",
                  "src": "8746:60:66"
                },
                {
                  "assignments": [
                    22751
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22751,
                      "mutability": "mutable",
                      "name": "positionId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 23063,
                      "src": "8812:15:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 22750,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8812:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 22755,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 22752,
                        "name": "bank",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19163,
                        "src": "8830:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBank_$28233",
                          "typeString": "contract IBank"
                        }
                      },
                      "id": 22753,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "POSITION_ID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28080,
                      "src": "8830:16:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 22754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8830:18:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8812:36:66"
                },
                {
                  "assignments": [
                    22757
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22757,
                      "mutability": "mutable",
                      "name": "amtARepay",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 23063,
                      "src": "8855:14:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 22756,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8855:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 22760,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 22758,
                      "name": "amt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22738,
                      "src": "8872:3:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RepayAmounts_$22731_calldata_ptr",
                        "typeString": "struct SushiswapSpellV1.RepayAmounts calldata"
                      }
                    },
                    "id": 22759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "amtARepay",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 22722,
                    "src": "8872:13:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8855:30:66"
                },
                {
                  "assignments": [
                    22762
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22762,
                      "mutability": "mutable",
                      "name": "amtBRepay",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 23063,
                      "src": "8891:14:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 22761,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8891:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 22765,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 22763,
                      "name": "amt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22738,
                      "src": "8908:3:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RepayAmounts_$22731_calldata_ptr",
                        "typeString": "struct SushiswapSpellV1.RepayAmounts calldata"
                      }
                    },
                    "id": 22764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "amtBRepay",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 22724,
                    "src": "8908:13:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8891:30:66"
                },
                {
                  "assignments": [
                    22767
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22767,
                      "mutability": "mutable",
                      "name": "amtLPRepay",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 23063,
                      "src": "8927:15:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 22766,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8927:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 22770,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 22768,
                      "name": "amt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22738,
                      "src": "8945:3:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RepayAmounts_$22731_calldata_ptr",
                        "typeString": "struct SushiswapSpellV1.RepayAmounts calldata"
                      }
                    },
                    "id": 22769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "amtLPRepay",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 22726,
                    "src": "8945:14:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8927:32:66"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 22777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 22771,
                      "name": "amtARepay",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22757,
                      "src": "9035:9:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 22775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "-",
                          "prefix": true,
                          "src": "9053:2:66",
                          "subExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 22774,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9054:1:66",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_minus_1_by_1",
                            "typeString": "int_const -1"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_minus_1_by_1",
                            "typeString": "int_const -1"
                          }
                        ],
                        "id": 22773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9048:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 22772,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "9048:4:66",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 22776,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9048:8:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9035:21:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 22787,
                  "nodeType": "IfStatement",
                  "src": "9031:99:66",
                  "trueBody": {
                    "id": 22786,
                    "nodeType": "Block",
                    "src": "9058:72:66",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 22784,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 22778,
                            "name": "amtARepay",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22757,
                            "src": "9066:9:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 22781,
                                "name": "positionId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22751,
                                "src": "9104:10:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 22782,
                                "name": "tokenA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22734,
                                "src": "9116:6:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 22779,
                                "name": "bank",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 19163,
                                "src": "9078:4:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IBank_$28233",
                                  "typeString": "contract IBank"
                                }
                              },
                              "id": 22780,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "borrowBalanceCurrent",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 28142,
                              "src": "9078:25:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (uint256,address) external returns (uint256)"
                              }
                            },
                            "id": 22783,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9078:45:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9066:57:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 22785,
                        "nodeType": "ExpressionStatement",
                        "src": "9066:57:66"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 22794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 22788,
                      "name": "amtBRepay",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22762,
                      "src": "9139:9:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 22792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "-",
                          "prefix": true,
                          "src": "9157:2:66",
                          "subExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 22791,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9158:1:66",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_minus_1_by_1",
                            "typeString": "int_const -1"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_minus_1_by_1",
                            "typeString": "int_const -1"
                          }
                        ],
                        "id": 22790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9152:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 22789,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "9152:4:66",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 22793,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9152:8:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9139:21:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 22804,
                  "nodeType": "IfStatement",
                  "src": "9135:99:66",
                  "trueBody": {
                    "id": 22803,
                    "nodeType": "Block",
                    "src": "9162:72:66",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 22801,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 22795,
                            "name": "amtBRepay",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22762,
                            "src": "9170:9:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 22798,
                                "name": "positionId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22751,
                                "src": "9208:10:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 22799,
                                "name": "tokenB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22736,
                                "src": "9220:6:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 22796,
                                "name": "bank",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 19163,
                                "src": "9182:4:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IBank_$28233",
                                  "typeString": "contract IBank"
                                }
                              },
                              "id": 22797,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "borrowBalanceCurrent",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 28142,
                              "src": "9182:25:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (uint256,address) external returns (uint256)"
                              }
                            },
                            "id": 22800,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9182:45:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9170:57:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 22802,
                        "nodeType": "ExpressionStatement",
                        "src": "9170:57:66"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 22811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 22805,
                      "name": "amtLPRepay",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22767,
                      "src": "9243:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 22809,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "-",
                          "prefix": true,
                          "src": "9262:2:66",
                          "subExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 22808,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9263:1:66",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_minus_1_by_1",
                            "typeString": "int_const -1"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_minus_1_by_1",
                            "typeString": "int_const -1"
                          }
                        ],
                        "id": 22807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9257:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 22806,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "9257:4:66",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 22810,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9257:8:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9243:22:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 22821,
                  "nodeType": "IfStatement",
                  "src": "9239:97:66",
                  "trueBody": {
                    "id": 22820,
                    "nodeType": "Block",
                    "src": "9267:69:66",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 22818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 22812,
                            "name": "amtLPRepay",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22767,
                            "src": "9275:10:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 22815,
                                "name": "positionId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22751,
                                "src": "9314:10:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 22816,
                                "name": "lp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22740,
                                "src": "9326:2:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 22813,
                                "name": "bank",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 19163,
                                "src": "9288:4:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IBank_$28233",
                                  "typeString": "contract IBank"
                                }
                              },
                              "id": 22814,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "borrowBalanceCurrent",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 28142,
                              "src": "9288:25:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (uint256,address) external returns (uint256)"
                              }
                            },
                            "id": 22817,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9288:41:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9275:54:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 22819,
                        "nodeType": "ExpressionStatement",
                        "src": "9275:54:66"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    22823
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22823,
                      "mutability": "mutable",
                      "name": "amtLPToRemove",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 23063,
                      "src": "9386:18:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 22822,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9386:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 22837,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 22834,
                          "name": "amt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22738,
                          "src": "9447:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RepayAmounts_$22731_calldata_ptr",
                            "typeString": "struct SushiswapSpellV1.RepayAmounts calldata"
                          }
                        },
                        "id": 22835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amtLPWithdraw",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 22720,
                        "src": "9447:17:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 22830,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "9436:4:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SushiswapSpellV1_$23288",
                                  "typeString": "contract SushiswapSpellV1"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SushiswapSpellV1_$23288",
                                  "typeString": "contract SushiswapSpellV1"
                                }
                              ],
                              "id": 22829,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9428:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 22828,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9428:7:66",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 22831,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9428:13:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 22825,
                                "name": "lp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22740,
                                "src": "9414:2:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 22824,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27766,
                              "src": "9407:6:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$27766_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 22826,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9407:10:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$27766",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 22827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27705,
                          "src": "9407:20:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 22832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9407:35:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 22833,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27415,
                      "src": "9407:39:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 22836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9407:58:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9386:79:66"
                },
                {
                  "assignments": [
                    22839
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22839,
                      "mutability": "mutable",
                      "name": "amtA",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 23063,
                      "src": "9499:9:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 22838,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9499:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 22840,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9499:9:66"
                },
                {
                  "assignments": [
                    22842
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22842,
                      "mutability": "mutable",
                      "name": "amtB",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 23063,
                      "src": "9514:9:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 22841,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9514:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 22843,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9514:9:66"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 22846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 22844,
                      "name": "amtLPToRemove",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22823,
                      "src": "9533:13:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 22845,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9549:1:66",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9533:17:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 22867,
                  "nodeType": "IfStatement",
                  "src": "9529:208:66",
                  "trueBody": {
                    "id": 22866,
                    "nodeType": "Block",
                    "src": "9552:185:66",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 22864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "id": 22847,
                                "name": "amtA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22839,
                                "src": "9561:4:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 22848,
                                "name": "amtB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22842,
                                "src": "9567:4:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 22849,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "9560:12:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 22852,
                                "name": "tokenA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22734,
                                "src": "9607:6:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 22853,
                                "name": "tokenB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22736,
                                "src": "9623:6:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 22854,
                                "name": "amtLPToRemove",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22823,
                                "src": "9639:13:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 22855,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9662:1:66",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 22856,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9673:1:66",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 22859,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "9692:4:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_SushiswapSpellV1_$23288",
                                      "typeString": "contract SushiswapSpellV1"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_SushiswapSpellV1_$23288",
                                      "typeString": "contract SushiswapSpellV1"
                                    }
                                  ],
                                  "id": 22858,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "9684:7:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 22857,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9684:7:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 22860,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9684:13:66",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 22861,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "9707:5:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 22862,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "9707:15:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 22850,
                                "name": "router",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21919,
                                "src": "9575:6:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IUniswapV2Router02_$30814",
                                  "typeString": "contract IUniswapV2Router02"
                                }
                              },
                              "id": 22851,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "removeLiquidity",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 32629,
                              "src": "9575:22:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                                "typeString": "function (address,address,uint256,uint256,uint256,address,uint256) external returns (uint256,uint256)"
                              }
                            },
                            "id": 22863,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9575:155:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "src": "9560:170:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 22865,
                        "nodeType": "ExpressionStatement",
                        "src": "9560:170:66"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    22869
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22869,
                      "mutability": "mutable",
                      "name": "amtADesired",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 23063,
                      "src": "9769:16:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 22868,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9769:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 22875,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 22872,
                          "name": "amt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22738,
                          "src": "9802:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RepayAmounts_$22731_calldata_ptr",
                            "typeString": "struct SushiswapSpellV1.RepayAmounts calldata"
                          }
                        },
                        "id": 22873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amtAMin",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 22728,
                        "src": "9802:11:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 22870,
                        "name": "amtARepay",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22757,
                        "src": "9788:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 22871,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27393,
                      "src": "9788:13:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 22874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9788:26:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9769:45:66"
                },
                {
                  "assignments": [
                    22877
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22877,
                      "mutability": "mutable",
                      "name": "amtBDesired",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 23063,
                      "src": "9820:16:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 22876,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9820:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 22883,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 22880,
                          "name": "amt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22738,
                          "src": "9853:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RepayAmounts_$22731_calldata_ptr",
                            "typeString": "struct SushiswapSpellV1.RepayAmounts calldata"
                          }
                        },
                        "id": 22881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amtBMin",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 22730,
                        "src": "9853:11:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 22878,
                        "name": "amtBRepay",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22762,
                        "src": "9839:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 22879,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27393,
                      "src": "9839:13:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 22882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9839:26:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9820:45:66"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 22890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 22886,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 22884,
                        "name": "amtA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22839,
                        "src": "9876:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 22885,
                        "name": "amtADesired",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22869,
                        "src": "9883:11:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9876:18:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 22889,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 22887,
                        "name": "amtB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22842,
                        "src": "9898:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 22888,
                        "name": "amtBDesired",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22877,
                        "src": "9905:11:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9898:18:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "9876:40:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 22941,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 22937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 22935,
                          "name": "amtA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22839,
                          "src": "10199:4:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 22936,
                          "name": "amtADesired",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22869,
                          "src": "10206:11:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10199:18:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 22940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 22938,
                          "name": "amtB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22842,
                          "src": "10221:4:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 22939,
                          "name": "amtBDesired",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22877,
                          "src": "10228:11:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10221:18:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "10199:40:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": null,
                    "id": 22986,
                    "nodeType": "IfStatement",
                    "src": "10195:317:66",
                    "trueBody": {
                      "id": 22985,
                      "nodeType": "Block",
                      "src": "10241:271:66",
                      "statements": [
                        {
                          "assignments": [
                            22946
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 22946,
                              "mutability": "mutable",
                              "name": "path",
                              "nodeType": "VariableDeclaration",
                              "overrides": null,
                              "scope": 22985,
                              "src": "10249:21:66",
                              "stateVariable": false,
                              "storageLocation": "memory",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[]"
                              },
                              "typeName": {
                                "baseType": {
                                  "id": 22944,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10249:7:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 22945,
                                "length": null,
                                "nodeType": "ArrayTypeName",
                                "src": "10249:9:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                  "typeString": "address[]"
                                }
                              },
                              "value": null,
                              "visibility": "internal"
                            }
                          ],
                          "id": 22952,
                          "initialValue": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "32",
                                "id": 22950,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10287:1:66",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                }
                              ],
                              "id": 22949,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "10273:13:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (address[] memory)"
                              },
                              "typeName": {
                                "baseType": {
                                  "id": 22947,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10277:7:66",
                                  "stateMutability": "nonpayable",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 22948,
                                "length": null,
                                "nodeType": "ArrayTypeName",
                                "src": "10277:9:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                  "typeString": "address[]"
                                }
                              }
                            },
                            "id": 22951,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10273:16:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "10249:40:66"
                        },
                        {
                          "expression": {
                            "argumentTypes": null,
                            "id": 22963,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "argumentTypes": null,
                              "components": [
                                {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 22953,
                                    "name": "path",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22946,
                                    "src": "10298:4:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 22955,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 22954,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10303:1:66",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "10298:7:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 22956,
                                    "name": "path",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22946,
                                    "src": "10307:4:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 22958,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "31",
                                    "id": 22957,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10312:1:66",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "10307:7:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "id": 22959,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "nodeType": "TupleExpression",
                              "src": "10297:18:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                                "typeString": "tuple(address,address)"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "argumentTypes": null,
                              "components": [
                                {
                                  "argumentTypes": null,
                                  "id": 22960,
                                  "name": "tokenA",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22734,
                                  "src": "10319:6:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 22961,
                                  "name": "tokenB",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22736,
                                  "src": "10327:6:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "id": 22962,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "10318:16:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                                "typeString": "tuple(address,address)"
                              }
                            },
                            "src": "10297:37:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 22964,
                          "nodeType": "ExpressionStatement",
                          "src": "10297:37:66"
                        },
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 22970,
                                    "name": "amtB",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22842,
                                    "src": "10399:4:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 22968,
                                    "name": "amtBDesired",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22877,
                                    "src": "10383:11:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 22969,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 27415,
                                  "src": "10383:15:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 22971,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10383:21:66",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 22974,
                                    "name": "amtADesired",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22869,
                                    "src": "10423:11:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 22972,
                                    "name": "amtA",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22839,
                                    "src": "10414:4:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 22973,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 27415,
                                  "src": "10414:8:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 22975,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10414:21:66",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 22976,
                                "name": "path",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22946,
                                "src": "10445:4:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 22979,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "10467:4:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_SushiswapSpellV1_$23288",
                                      "typeString": "contract SushiswapSpellV1"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_SushiswapSpellV1_$23288",
                                      "typeString": "contract SushiswapSpellV1"
                                    }
                                  ],
                                  "id": 22978,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10459:7:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 22977,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10459:7:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 22980,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10459:13:66",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 22981,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "10482:5:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 22982,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "10482:15:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 22965,
                                "name": "router",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21919,
                                "src": "10342:6:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IUniswapV2Router02_$30814",
                                  "typeString": "contract IUniswapV2Router02"
                                }
                              },
                              "id": 22967,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "swapTokensForExactTokens",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 32738,
                              "src": "10342:31:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                "typeString": "function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"
                              }
                            },
                            "id": 22983,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10342:163:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 22984,
                          "nodeType": "ExpressionStatement",
                          "src": "10342:163:66"
                        }
                      ]
                    }
                  },
                  "id": 22987,
                  "nodeType": "IfStatement",
                  "src": "9872:640:66",
                  "trueBody": {
                    "id": 22934,
                    "nodeType": "Block",
                    "src": "9918:271:66",
                    "statements": [
                      {
                        "assignments": [
                          22895
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 22895,
                            "mutability": "mutable",
                            "name": "path",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 22934,
                            "src": "9926:21:66",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 22893,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9926:7:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 22894,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "9926:9:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 22901,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 22899,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9964:1:66",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "id": 22898,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "9950:13:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (address[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 22896,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9954:7:66",
                                "stateMutability": "nonpayable",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 22897,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "9954:9:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            }
                          },
                          "id": 22900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9950:16:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9926:40:66"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 22912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 22902,
                                  "name": "path",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22895,
                                  "src": "9975:4:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 22904,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 22903,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9980:1:66",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "9975:7:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 22905,
                                  "name": "path",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22895,
                                  "src": "9984:4:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 22907,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "31",
                                  "id": 22906,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9989:1:66",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "9984:7:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "id": 22908,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "9974:18:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                              "typeString": "tuple(address,address)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "id": 22909,
                                "name": "tokenB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22736,
                                "src": "9996:6:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 22910,
                                "name": "tokenA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22734,
                                "src": "10004:6:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "id": 22911,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "9995:16:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                              "typeString": "tuple(address,address)"
                            }
                          },
                          "src": "9974:37:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 22913,
                        "nodeType": "ExpressionStatement",
                        "src": "9974:37:66"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 22919,
                                  "name": "amtA",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22839,
                                  "src": "10076:4:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 22917,
                                  "name": "amtADesired",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22869,
                                  "src": "10060:11:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 22918,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sub",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 27415,
                                "src": "10060:15:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 22920,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10060:21:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 22923,
                                  "name": "amtBDesired",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22877,
                                  "src": "10100:11:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 22921,
                                  "name": "amtB",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22842,
                                  "src": "10091:4:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 22922,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sub",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 27415,
                                "src": "10091:8:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 22924,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10091:21:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 22925,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22895,
                              "src": "10122:4:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 22928,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "10144:4:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SushiswapSpellV1_$23288",
                                    "typeString": "contract SushiswapSpellV1"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SushiswapSpellV1_$23288",
                                    "typeString": "contract SushiswapSpellV1"
                                  }
                                ],
                                "id": 22927,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10136:7:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 22926,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10136:7:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 22929,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10136:13:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 22930,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "10159:5:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 22931,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "10159:15:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 22914,
                              "name": "router",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21919,
                              "src": "10019:6:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV2Router02_$30814",
                                "typeString": "contract IUniswapV2Router02"
                              }
                            },
                            "id": 22916,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "swapTokensForExactTokens",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32738,
                            "src": "10019:31:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"
                            }
                          },
                          "id": 22932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10019:163:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 22933,
                        "nodeType": "ExpressionStatement",
                        "src": "10019:163:66"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 22989,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22734,
                        "src": "10542:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 22990,
                        "name": "amtARepay",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22757,
                        "src": "10550:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 22988,
                      "name": "doRepay",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19426,
                      "src": "10534:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 22991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10534:26:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22992,
                  "nodeType": "ExpressionStatement",
                  "src": "10534:26:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 22994,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22736,
                        "src": "10574:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 22995,
                        "name": "amtBRepay",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22762,
                        "src": "10582:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 22993,
                      "name": "doRepay",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19426,
                      "src": "10566:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 22996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10566:26:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22997,
                  "nodeType": "ExpressionStatement",
                  "src": "10566:26:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 22999,
                        "name": "lp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22740,
                        "src": "10606:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 23000,
                        "name": "amtLPRepay",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22767,
                        "src": "10610:10:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 22998,
                      "name": "doRepay",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19426,
                      "src": "10598:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 23001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10598:23:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23002,
                  "nodeType": "ExpressionStatement",
                  "src": "10598:23:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 23015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 23010,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "10696:4:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SushiswapSpellV1_$23288",
                                    "typeString": "contract SushiswapSpellV1"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SushiswapSpellV1_$23288",
                                    "typeString": "contract SushiswapSpellV1"
                                  }
                                ],
                                "id": 23009,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10688:7:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 23008,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10688:7:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 23011,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10688:13:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 23005,
                                  "name": "tokenA",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22734,
                                  "src": "10670:6:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 23004,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27766,
                                "src": "10663:6:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$27766_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 23006,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10663:14:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$27766",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 23007,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27705,
                            "src": "10663:24:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 23012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10663:39:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 23013,
                            "name": "amt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22738,
                            "src": "10706:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RepayAmounts_$22731_calldata_ptr",
                              "typeString": "struct SushiswapSpellV1.RepayAmounts calldata"
                            }
                          },
                          "id": 23014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amtAMin",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 22728,
                          "src": "10706:11:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10663:54:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 23003,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10655:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 23016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10655:63:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23017,
                  "nodeType": "ExpressionStatement",
                  "src": "10655:63:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 23030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 23025,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "10765:4:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SushiswapSpellV1_$23288",
                                    "typeString": "contract SushiswapSpellV1"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SushiswapSpellV1_$23288",
                                    "typeString": "contract SushiswapSpellV1"
                                  }
                                ],
                                "id": 23024,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10757:7:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 23023,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10757:7:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 23026,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10757:13:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 23020,
                                  "name": "tokenB",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22736,
                                  "src": "10739:6:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 23019,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27766,
                                "src": "10732:6:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$27766_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 23021,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10732:14:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$27766",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 23022,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27705,
                            "src": "10732:24:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 23027,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10732:39:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 23028,
                            "name": "amt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22738,
                            "src": "10775:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RepayAmounts_$22731_calldata_ptr",
                              "typeString": "struct SushiswapSpellV1.RepayAmounts calldata"
                            }
                          },
                          "id": 23029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amtBMin",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 22730,
                          "src": "10775:11:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10732:54:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 23018,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10724:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 23031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10724:63:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23032,
                  "nodeType": "ExpressionStatement",
                  "src": "10724:63:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 23045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 23040,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "10830:4:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SushiswapSpellV1_$23288",
                                    "typeString": "contract SushiswapSpellV1"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SushiswapSpellV1_$23288",
                                    "typeString": "contract SushiswapSpellV1"
                                  }
                                ],
                                "id": 23039,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10822:7:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 23038,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10822:7:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 23041,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10822:13:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 23035,
                                  "name": "lp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22740,
                                  "src": "10808:2:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 23034,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27766,
                                "src": "10801:6:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$27766_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 23036,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10801:10:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$27766",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 23037,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27705,
                            "src": "10801:20:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 23042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10801:35:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 23043,
                            "name": "amt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22738,
                            "src": "10840:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RepayAmounts_$22731_calldata_ptr",
                              "typeString": "struct SushiswapSpellV1.RepayAmounts calldata"
                            }
                          },
                          "id": 23044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amtLPWithdraw",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 22720,
                          "src": "10840:17:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10801:56:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 23033,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10793:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 23046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10793:65:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23047,
                  "nodeType": "ExpressionStatement",
                  "src": "10793:65:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 23048,
                      "name": "doRefundETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19376,
                      "src": "10891:11:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 23049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10891:13:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23050,
                  "nodeType": "ExpressionStatement",
                  "src": "10891:13:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 23052,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22734,
                        "src": "10919:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 23051,
                      "name": "doRefund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19328,
                      "src": "10910:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 23053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10910:16:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23054,
                  "nodeType": "ExpressionStatement",
                  "src": "10910:16:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 23056,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22736,
                        "src": "10941:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 23055,
                      "name": "doRefund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19328,
                      "src": "10932:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 23057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10932:16:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23058,
                  "nodeType": "ExpressionStatement",
                  "src": "10932:16:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 23060,
                        "name": "lp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22740,
                        "src": "10963:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 23059,
                      "name": "doRefund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19328,
                      "src": "10954:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 23061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10954:12:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23062,
                  "nodeType": "ExpressionStatement",
                  "src": "10954:12:66"
                }
              ]
            },
            "documentation": {
              "id": 22732,
              "nodeType": "StructuredDocumentation",
              "src": "8403:201:66",
              "text": "@dev Remove liquidity from Sushiswap pool\n @param tokenA Token A for the pair\n @param tokenB Token B for the pair\n @param amt Amounts of tokens to take out, withdraw, repay, and get."
            },
            "id": 23064,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeLiquidityInternal",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 22741,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22734,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 23064,
                  "src": "8645:14:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22733,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8645:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22736,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 23064,
                  "src": "8665:14:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22735,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8665:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22738,
                  "mutability": "mutable",
                  "name": "amt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 23064,
                  "src": "8685:25:66",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RepayAmounts_$22731_calldata_ptr",
                    "typeString": "struct SushiswapSpellV1.RepayAmounts"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 22737,
                    "name": "RepayAmounts",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 22731,
                    "src": "8685:12:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RepayAmounts_$22731_storage_ptr",
                      "typeString": "struct SushiswapSpellV1.RepayAmounts"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22740,
                  "mutability": "mutable",
                  "name": "lp",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 23064,
                  "src": "8716:10:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22739,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8716:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8639:91:66"
            },
            "returnParameters": {
              "id": 22742,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8740:0:66"
            },
            "scope": 23288,
            "src": "8607:2364:66",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 23094,
              "nodeType": "Block",
              "src": "11340:213:66",
              "statements": [
                {
                  "assignments": [
                    23075
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23075,
                      "mutability": "mutable",
                      "name": "lp",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 23094,
                      "src": "11346:10:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 23074,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11346:7:66",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23080,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 23077,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23067,
                        "src": "11377:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 23078,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23069,
                        "src": "11385:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 23076,
                      "name": "getAndApprovePair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22075,
                      "src": "11359:17:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$_t_address_$",
                        "typeString": "function (address,address) returns (address)"
                      }
                    },
                    "id": 23079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11359:33:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11346:46:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 23082,
                        "name": "lp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23075,
                        "src": "11446:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 23083,
                          "name": "amt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23071,
                          "src": "11450:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RepayAmounts_$22731_calldata_ptr",
                            "typeString": "struct SushiswapSpellV1.RepayAmounts calldata"
                          }
                        },
                        "id": 23084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amtLPTake",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 22718,
                        "src": "11450:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 23081,
                      "name": "doTakeCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19520,
                      "src": "11429:16:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 23085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11429:35:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23086,
                  "nodeType": "ExpressionStatement",
                  "src": "11429:35:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 23088,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23067,
                        "src": "11524:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 23089,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23069,
                        "src": "11532:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 23090,
                        "name": "amt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23071,
                        "src": "11540:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RepayAmounts_$22731_calldata_ptr",
                          "typeString": "struct SushiswapSpellV1.RepayAmounts calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 23091,
                        "name": "lp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23075,
                        "src": "11545:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_RepayAmounts_$22731_calldata_ptr",
                          "typeString": "struct SushiswapSpellV1.RepayAmounts calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 23087,
                      "name": "removeLiquidityInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23064,
                      "src": "11500:23:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_struct$_RepayAmounts_$22731_calldata_ptr_$_t_address_$returns$__$",
                        "typeString": "function (address,address,struct SushiswapSpellV1.RepayAmounts calldata,address)"
                      }
                    },
                    "id": 23092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11500:48:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23093,
                  "nodeType": "ExpressionStatement",
                  "src": "11500:48:66"
                }
              ]
            },
            "documentation": {
              "id": 23065,
              "nodeType": "StructuredDocumentation",
              "src": "10975:247:66",
              "text": "@dev Remove liquidity from Sushiswap pool, with no staking rewards (use WERC20 wrapper)\n @param tokenA Token A for the pair\n @param tokenB Token B for the pair\n @param amt Amounts of tokens to take out, withdraw, repay, and get."
            },
            "functionSelector": "1387d96d",
            "id": 23095,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeLiquidityWERC20",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 23072,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23067,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 23095,
                  "src": "11261:14:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23066,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11261:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23069,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 23095,
                  "src": "11281:14:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23068,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11281:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23071,
                  "mutability": "mutable",
                  "name": "amt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 23095,
                  "src": "11301:25:66",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RepayAmounts_$22731_calldata_ptr",
                    "typeString": "struct SushiswapSpellV1.RepayAmounts"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23070,
                    "name": "RepayAmounts",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 22731,
                    "src": "11301:12:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RepayAmounts_$22731_storage_ptr",
                      "typeString": "struct SushiswapSpellV1.RepayAmounts"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11255:75:66"
            },
            "returnParameters": {
              "id": 23073,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11340:0:66"
            },
            "scope": 23288,
            "src": "11225:328:66",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 23173,
              "nodeType": "Block",
              "src": "11906:594:66",
              "statements": [
                {
                  "assignments": [
                    23106
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23106,
                      "mutability": "mutable",
                      "name": "lp",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 23173,
                      "src": "11912:10:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 23105,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11912:7:66",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23111,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 23108,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23098,
                        "src": "11943:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 23109,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23100,
                        "src": "11951:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 23107,
                      "name": "getAndApprovePair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22075,
                      "src": "11925:17:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$_t_address_$",
                        "typeString": "function (address,address) returns (address)"
                      }
                    },
                    "id": 23110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11925:33:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11912:46:66"
                },
                {
                  "assignments": [
                    null,
                    23113,
                    23115,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 23113,
                      "mutability": "mutable",
                      "name": "collToken",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 23173,
                      "src": "11967:17:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 23112,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11967:7:66",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 23115,
                      "mutability": "mutable",
                      "name": "collId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 23173,
                      "src": "11986:11:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 23114,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11986:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 23119,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 23116,
                        "name": "bank",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19163,
                        "src": "12003:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBank_$28233",
                          "typeString": "contract IBank"
                        }
                      },
                      "id": 23117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getCurrentPositionInfo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28225,
                      "src": "12003:27:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$_t_address_$_t_uint256_$_t_uint256_$",
                        "typeString": "function () view external returns (address,address,uint256,uint256)"
                      }
                    },
                    "id": 23118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12003:29:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(address,address,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11964:68:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 23128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 23125,
                              "name": "collId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23115,
                              "src": "12089:6:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 23122,
                                  "name": "collToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 23113,
                                  "src": "12059:9:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 23121,
                                "name": "IWMasterChef",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30864,
                                "src": "12046:12:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IWMasterChef_$30864_$",
                                  "typeString": "type(contract IWMasterChef)"
                                }
                              },
                              "id": 23123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12046:23:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IWMasterChef_$30864",
                                "typeString": "contract IWMasterChef"
                              }
                            },
                            "id": 23124,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getUnderlyingToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30527,
                            "src": "12046:42:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 23126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12046:50:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 23127,
                          "name": "lp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23106,
                          "src": "12100:2:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12046:56:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "696e636f727265637420756e6465726c79696e67",
                        "id": 23129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12104:22:66",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ce16acb2587e4e9fe6a6da15fb74270074dc10798c229be13e31273addbbac1e",
                          "typeString": "literal_string \"incorrect underlying\""
                        },
                        "value": "incorrect underlying"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ce16acb2587e4e9fe6a6da15fb74270074dc10798c229be13e31273addbbac1e",
                          "typeString": "literal_string \"incorrect underlying\""
                        }
                      ],
                      "id": 23120,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12038:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12038:89:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23131,
                  "nodeType": "ExpressionStatement",
                  "src": "12038:89:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 23138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 23133,
                          "name": "collToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23113,
                          "src": "12141:9:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 23136,
                              "name": "wmasterchef",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21927,
                              "src": "12162:11:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IWMasterChef_$30864",
                                "typeString": "contract IWMasterChef"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IWMasterChef_$30864",
                                "typeString": "contract IWMasterChef"
                              }
                            ],
                            "id": 23135,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12154:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 23134,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12154:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 23137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12154:20:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12141:33:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "636f6c6c61746572616c20746f6b656e202620776d617374657263686566206d69736d617463686564",
                        "id": 23139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12176:43:66",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aa3902542ce074189e7e1f3b2fb5635756df5da19f5a8ac77cb49d532b8c92c0",
                          "typeString": "literal_string \"collateral token & wmasterchef mismatched\""
                        },
                        "value": "collateral token & wmasterchef mismatched"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aa3902542ce074189e7e1f3b2fb5635756df5da19f5a8ac77cb49d532b8c92c0",
                          "typeString": "literal_string \"collateral token & wmasterchef mismatched\""
                        }
                      ],
                      "id": 23132,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12133:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12133:87:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23141,
                  "nodeType": "ExpressionStatement",
                  "src": "12133:87:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 23147,
                            "name": "wmasterchef",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21927,
                            "src": "12285:11:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IWMasterChef_$30864",
                              "typeString": "contract IWMasterChef"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IWMasterChef_$30864",
                              "typeString": "contract IWMasterChef"
                            }
                          ],
                          "id": 23146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12277:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 23145,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12277:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 23148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12277:20:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 23149,
                        "name": "collId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23115,
                        "src": "12299:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 23150,
                          "name": "amt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23102,
                          "src": "12307:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RepayAmounts_$22731_calldata_ptr",
                            "typeString": "struct SushiswapSpellV1.RepayAmounts calldata"
                          }
                        },
                        "id": 23151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amtLPTake",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 22718,
                        "src": "12307:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 23142,
                        "name": "bank",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19163,
                        "src": "12257:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBank_$28233",
                          "typeString": "contract IBank"
                        }
                      },
                      "id": 23144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "takeCollateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28186,
                      "src": "12257:19:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256) external"
                      }
                    },
                    "id": 23152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12257:64:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23153,
                  "nodeType": "ExpressionStatement",
                  "src": "12257:64:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 23157,
                        "name": "collId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23115,
                        "src": "12344:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 23158,
                          "name": "amt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23102,
                          "src": "12352:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RepayAmounts_$22731_calldata_ptr",
                            "typeString": "struct SushiswapSpellV1.RepayAmounts calldata"
                          }
                        },
                        "id": 23159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amtLPTake",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 22718,
                        "src": "12352:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 23154,
                        "name": "wmasterchef",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21927,
                        "src": "12327:11:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IWMasterChef_$30864",
                          "typeString": "contract IWMasterChef"
                        }
                      },
                      "id": 23156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30844,
                      "src": "12327:16:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 23160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12327:39:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 23161,
                  "nodeType": "ExpressionStatement",
                  "src": "12327:39:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 23163,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23098,
                        "src": "12426:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 23164,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23100,
                        "src": "12434:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 23165,
                        "name": "amt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23102,
                        "src": "12442:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RepayAmounts_$22731_calldata_ptr",
                          "typeString": "struct SushiswapSpellV1.RepayAmounts calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 23166,
                        "name": "lp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23106,
                        "src": "12447:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_RepayAmounts_$22731_calldata_ptr",
                          "typeString": "struct SushiswapSpellV1.RepayAmounts calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 23162,
                      "name": "removeLiquidityInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23064,
                      "src": "12402:23:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_struct$_RepayAmounts_$22731_calldata_ptr_$_t_address_$returns$__$",
                        "typeString": "function (address,address,struct SushiswapSpellV1.RepayAmounts calldata,address)"
                      }
                    },
                    "id": 23167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12402:48:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23168,
                  "nodeType": "ExpressionStatement",
                  "src": "12402:48:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 23170,
                        "name": "sushi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21929,
                        "src": "12489:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 23169,
                      "name": "doRefund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19328,
                      "src": "12480:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 23171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12480:15:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23172,
                  "nodeType": "ExpressionStatement",
                  "src": "12480:15:66"
                }
              ]
            },
            "documentation": {
              "id": 23096,
              "nodeType": "StructuredDocumentation",
              "src": "11557:226:66",
              "text": "@dev Remove liquidity from Sushiswap pool, from masterChef staking\n @param tokenA Token A for the pair\n @param tokenB Token B for the pair\n @param amt Amounts of tokens to take out, withdraw, repay, and get."
            },
            "functionSelector": "95723b1c",
            "id": 23174,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeLiquidityWMasterChef",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 23103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23098,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 23174,
                  "src": "11827:14:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23097,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11827:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23100,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 23174,
                  "src": "11847:14:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23099,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11847:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23102,
                  "mutability": "mutable",
                  "name": "amt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 23174,
                  "src": "11867:25:66",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RepayAmounts_$22731_calldata_ptr",
                    "typeString": "struct SushiswapSpellV1.RepayAmounts"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23101,
                    "name": "RepayAmounts",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 22731,
                    "src": "11867:12:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RepayAmounts_$22731_storage_ptr",
                      "typeString": "struct SushiswapSpellV1.RepayAmounts"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11821:75:66"
            },
            "returnParameters": {
              "id": 23104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11906:0:66"
            },
            "scope": 23288,
            "src": "11786:714:66",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 23286,
              "nodeType": "Block",
              "src": "12610:754:66",
              "statements": [
                {
                  "assignments": [
                    null,
                    23179,
                    23181,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 23179,
                      "mutability": "mutable",
                      "name": "collToken",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 23286,
                      "src": "12619:17:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 23178,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "12619:7:66",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 23181,
                      "mutability": "mutable",
                      "name": "collId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 23286,
                      "src": "12638:11:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 23180,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12638:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 23185,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 23182,
                        "name": "bank",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19163,
                        "src": "12655:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBank_$28233",
                          "typeString": "contract IBank"
                        }
                      },
                      "id": 23183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getCurrentPositionInfo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28225,
                      "src": "12655:27:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$_t_address_$_t_uint256_$_t_uint256_$",
                        "typeString": "function () view external returns (address,address,uint256,uint256)"
                      }
                    },
                    "id": 23184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12655:29:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(address,address,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12616:68:66"
                },
                {
                  "assignments": [
                    23187,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23187,
                      "mutability": "mutable",
                      "name": "pid",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 23286,
                      "src": "12691:8:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 23186,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12691:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 23192,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 23190,
                        "name": "collId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23181,
                        "src": "12726:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 23188,
                        "name": "wmasterchef",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21927,
                        "src": "12705:11:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IWMasterChef_$30864",
                          "typeString": "contract IWMasterChef"
                        }
                      },
                      "id": 23189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decodeId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30858,
                      "src": "12705:20:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) pure external returns (uint256,uint256)"
                      }
                    },
                    "id": 23191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12705:28:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12690:43:66"
                },
                {
                  "assignments": [
                    23194
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23194,
                      "mutability": "mutable",
                      "name": "lp",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 23286,
                      "src": "12739:10:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 23193,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "12739:7:66",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23199,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 23197,
                        "name": "collId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23181,
                        "src": "12783:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 23195,
                        "name": "wmasterchef",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21927,
                        "src": "12752:11:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IWMasterChef_$30864",
                          "typeString": "contract IWMasterChef"
                        }
                      },
                      "id": 23196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getUnderlyingToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30527,
                      "src": "12752:30:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view external returns (address)"
                      }
                    },
                    "id": 23198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12752:38:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12739:51:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 23201,
                          "name": "whitelistedLpTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24668,
                          "src": "12804:19:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 23203,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 23202,
                          "name": "lp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23194,
                          "src": "12824:2:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12804:23:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6c7020746f6b656e206e6f742077686974656c6973746564",
                        "id": 23204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12829:26:66",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_76fd3bc08be88f328f09320fa313b292032a5afbcfc99b8a4713537b5c013f5e",
                          "typeString": "literal_string \"lp token not whitelisted\""
                        },
                        "value": "lp token not whitelisted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_76fd3bc08be88f328f09320fa313b292032a5afbcfc99b8a4713537b5c013f5e",
                          "typeString": "literal_string \"lp token not whitelisted\""
                        }
                      ],
                      "id": 23200,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12796:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12796:60:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23206,
                  "nodeType": "ExpressionStatement",
                  "src": "12796:60:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 23213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 23208,
                          "name": "collToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23179,
                          "src": "12870:9:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 23211,
                              "name": "wmasterchef",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21927,
                              "src": "12891:11:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IWMasterChef_$30864",
                                "typeString": "contract IWMasterChef"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IWMasterChef_$30864",
                                "typeString": "contract IWMasterChef"
                              }
                            ],
                            "id": 23210,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12883:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 23209,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12883:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 23212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12883:20:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12870:33:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "636f6c6c61746572616c20746f6b656e202620776d617374657263686566206d69736d617463686564",
                        "id": 23214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12905:43:66",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aa3902542ce074189e7e1f3b2fb5635756df5da19f5a8ac77cb49d532b8c92c0",
                          "typeString": "literal_string \"collateral token & wmasterchef mismatched\""
                        },
                        "value": "collateral token & wmasterchef mismatched"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aa3902542ce074189e7e1f3b2fb5635756df5da19f5a8ac77cb49d532b8c92c0",
                          "typeString": "literal_string \"collateral token & wmasterchef mismatched\""
                        }
                      ],
                      "id": 23207,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12862:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12862:87:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23216,
                  "nodeType": "ExpressionStatement",
                  "src": "12862:87:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 23222,
                            "name": "wmasterchef",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21927,
                            "src": "13014:11:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IWMasterChef_$30864",
                              "typeString": "contract IWMasterChef"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IWMasterChef_$30864",
                              "typeString": "contract IWMasterChef"
                            }
                          ],
                          "id": 23221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13006:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 23220,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13006:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 23223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13006:20:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 23224,
                        "name": "collId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23181,
                        "src": "13028:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 23228,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "-",
                            "prefix": true,
                            "src": "13041:2:66",
                            "subExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 23227,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13042:1:66",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_minus_1_by_1",
                              "typeString": "int_const -1"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_minus_1_by_1",
                              "typeString": "int_const -1"
                            }
                          ],
                          "id": 23226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13036:4:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 23225,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "13036:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 23229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13036:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 23217,
                        "name": "bank",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19163,
                        "src": "12986:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBank_$28233",
                          "typeString": "contract IBank"
                        }
                      },
                      "id": 23219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "takeCollateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28186,
                      "src": "12986:19:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256) external"
                      }
                    },
                    "id": 23230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12986:59:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23231,
                  "nodeType": "ExpressionStatement",
                  "src": "12986:59:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 23235,
                        "name": "collId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23181,
                        "src": "13068:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 23239,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "-",
                            "prefix": true,
                            "src": "13081:2:66",
                            "subExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 23238,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13082:1:66",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_minus_1_by_1",
                              "typeString": "int_const -1"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_minus_1_by_1",
                              "typeString": "int_const -1"
                            }
                          ],
                          "id": 23237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13076:4:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 23236,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "13076:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 23240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13076:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 23232,
                        "name": "wmasterchef",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21927,
                        "src": "13051:11:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IWMasterChef_$30864",
                          "typeString": "contract IWMasterChef"
                        }
                      },
                      "id": 23234,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30844,
                      "src": "13051:16:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 23241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13051:34:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 23242,
                  "nodeType": "ExpressionStatement",
                  "src": "13051:34:66"
                },
                {
                  "assignments": [
                    23244
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23244,
                      "mutability": "mutable",
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 23286,
                      "src": "13117:11:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 23243,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13117:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23254,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 23251,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "13160:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SushiswapSpellV1_$23288",
                              "typeString": "contract SushiswapSpellV1"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SushiswapSpellV1_$23288",
                              "typeString": "contract SushiswapSpellV1"
                            }
                          ],
                          "id": 23250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13152:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 23249,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13152:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 23252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13152:13:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 23246,
                            "name": "lp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23194,
                            "src": "13138:2:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 23245,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27766,
                          "src": "13131:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$27766_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 23247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13131:10:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$27766",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 23248,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27705,
                      "src": "13131:20:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 23253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13131:35:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13117:49:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 23256,
                        "name": "lp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23194,
                        "src": "13186:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 23259,
                            "name": "wmasterchef",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21927,
                            "src": "13198:11:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IWMasterChef_$30864",
                              "typeString": "contract IWMasterChef"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IWMasterChef_$30864",
                              "typeString": "contract IWMasterChef"
                            }
                          ],
                          "id": 23258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13190:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 23257,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13190:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 23260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13190:20:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 23255,
                      "name": "ensureApprove",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19253,
                      "src": "13172:13:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 23261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13172:39:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23262,
                  "nodeType": "ExpressionStatement",
                  "src": "13172:39:66"
                },
                {
                  "assignments": [
                    23264
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23264,
                      "mutability": "mutable",
                      "name": "id",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 23286,
                      "src": "13217:7:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 23263,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13217:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23270,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 23267,
                        "name": "pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23187,
                        "src": "13244:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 23268,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23244,
                        "src": "13249:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 23265,
                        "name": "wmasterchef",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21927,
                        "src": "13227:11:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IWMasterChef_$30864",
                          "typeString": "contract IWMasterChef"
                        }
                      },
                      "id": 23266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30834,
                      "src": "13227:16:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 23269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13227:29:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13217:39:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 23276,
                            "name": "wmasterchef",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21927,
                            "src": "13289:11:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IWMasterChef_$30864",
                              "typeString": "contract IWMasterChef"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IWMasterChef_$30864",
                              "typeString": "contract IWMasterChef"
                            }
                          ],
                          "id": 23275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13281:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 23274,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13281:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 23277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13281:20:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 23278,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23264,
                        "src": "13303:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 23279,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23244,
                        "src": "13307:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 23271,
                        "name": "bank",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19163,
                        "src": "13262:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBank_$28233",
                          "typeString": "contract IBank"
                        }
                      },
                      "id": 23273,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "putCollateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28176,
                      "src": "13262:18:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256) external"
                      }
                    },
                    "id": 23280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13262:52:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23281,
                  "nodeType": "ExpressionStatement",
                  "src": "13262:52:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 23283,
                        "name": "sushi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21929,
                        "src": "13353:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 23282,
                      "name": "doRefund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19328,
                      "src": "13344:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 23284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13344:15:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23285,
                  "nodeType": "ExpressionStatement",
                  "src": "13344:15:66"
                }
              ]
            },
            "documentation": {
              "id": 23175,
              "nodeType": "StructuredDocumentation",
              "src": "12504:64:66",
              "text": "@dev Harvest SUSHI reward tokens to in-exec position's owner"
            },
            "functionSelector": "40a65ad2",
            "id": 23287,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "harvestWMasterChef",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 23176,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12598:2:66"
            },
            "returnParameters": {
              "id": 23177,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12610:0:66"
            },
            "scope": 23288,
            "src": "12571:793:66",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 23289,
        "src": "513:12853:66"
      }
    ],
    "src": "33:13334:66"
  },
  "bytecode": "6101606040523480156200001257600080fd5b506040516200534d3803806200534d833981016040819052620000359162000832565b8383836001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b1580156200007157600080fd5b505afa15801562000086573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000ac9190620007f1565b828282620000c16301ffc9a760e01b62000323565b620000d3630271189760e51b62000323565b6001600160601b0319606084811b821660805283811b821660a05282901b1660c0526200010181846200037e565b60405163a22cb46560e01b81526001600160a01b0383169063a22cb4659062000132908690600190600401620008fe565b600060405180830381600087803b1580156200014d57600080fd5b505af115801562000162573d6000803e3d6000fd5b50505050505050620001796200040860201b60201c565b505050816001600160a01b0316610100816001600160a01b031660601b81525050816001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b158015620001d457600080fd5b505afa158015620001e9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200020f9190620007f1565b6001600160601b0319606091821b811660e0529082901b166101205260405163a22cb46560e01b81526001600160a01b0382169063a22cb465906200025c908790600190600401620008fe565b600060405180830381600087803b1580156200027757600080fd5b505af11580156200028c573d6000803e3d6000fd5b50505050806001600160a01b0316630a0879036040518163ffffffff1660e01b8152600401602060405180830381600087803b158015620002cc57600080fd5b505af1158015620002e1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003079190620007f1565b60601b6001600160601b031916610140525062000b5992505050565b6001600160e01b03198082161415620003595760405162461bcd60e51b8152600401620003509062000967565b60405180910390fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b6001600160a01b0380831660009081526041602090815260408083209385168352929052205460ff166200040457620003d381600019846001600160a01b0316620004fa60201b62001b34179092919060201c565b6001600160a01b038083166000908152604160209081526040808320938516835292905220805460ff191660011790555b5050565b604254610100900460ff16806200042457506200042462000608565b8062000433575060425460ff16155b620004525760405162461bcd60e51b81526004016200035090620009e4565b604254610100900460ff161580156200047e576042805460ff1961ff0019909116610100171660011790555b6042805462010000600160b01b0319163362010000810291909117909155604380546001600160a01b03191690556040517fbce074c8369e26e70e1ae2f14fc944da352cfe6f52e2de9572f0c9942a24b7fc91620004dc91620008d0565b60405180910390a18015620004f7576042805461ff00191690555b50565b801580620005895750604051636eb1769f60e11b81526001600160a01b0384169063dd62ed3e90620005339030908690600401620008e4565b60206040518083038186803b1580156200054c57600080fd5b505afa15801562000561573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000587919062000899565b155b620005a85760405162461bcd60e51b8152600401620003509062000ab3565b620006038363095ea7b360e01b8484604051602401620005ca92919062000919565b60408051808303601f190181529190526020810180516001600160e01b0319939093166001600160e01b03938416179052906200062616565b505050565b60006200062030620006c260201b62001c331760201c565b15905090565b606062000682826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316620006c860201b62001c39179092919060201c565b805190915015620006035780806020019051810190620006a3919062000810565b620006035760405162461bcd60e51b8152600401620003509062000a69565b3b151590565b6060620006d98484600085620006e3565b90505b9392505050565b606082471015620007085760405162461bcd60e51b815260040162000350906200099e565b6200071385620006c2565b620007325760405162461bcd60e51b8152600401620003509062000a32565b60006060866001600160a01b03168587604051620007519190620008b2565b60006040518083038185875af1925050503d806000811462000790576040519150601f19603f3d011682016040523d82523d6000602084013e62000795565b606091505b509092509050620007a8828286620007b3565b979650505050505050565b60608315620007c4575081620006dc565b825115620007d55782518084602001fd5b8160405162461bcd60e51b815260040162000350919062000932565b60006020828403121562000803578081fd5b8151620006dc8162000b43565b60006020828403121562000822578081fd5b81518015158114620006dc578182fd5b6000806000806080858703121562000848578283fd5b8451620008558162000b43565b6020860151909450620008688162000b43565b60408601519093506200087b8162000b43565b60608601519092506200088e8162000b43565b939692955090935050565b600060208284031215620008ab578081fd5b5051919050565b60008251620008c681846020870162000b10565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039290921682521515602082015260400190565b6001600160a01b03929092168252602082015260400190565b60006020825282518060208401526200095381604085016020870162000b10565b601f01601f19169190910160400192915050565b6020808252601c908201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604082015260600190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b60208082526036908201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60408201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000606082015260800190565b60005b8381101562000b2d57818101518382015260200162000b13565b8381111562000b3d576000848401525b50505050565b6001600160a01b0381168114620004f757600080fd5b60805160601c60a05160601c60c05160601c60e05160601c6101005160601c6101205160601c6101405160601c61465562000cf86000398061046e5280610c67528061103552806117b3525080610762528061080252806108d9528061096c52806109e15280610af65280610b345280610c045280610d185280610e905280610f235280610f97528061115c5280611366528061140e52806114a1528061151452806115a8528061165152806117365250806105cb52806105f5528061061f5280611b1252806121ae52806122df528061240c5280612c1e5280612e2a525080610516528061106f52508061015f52806106a2528061300d52806130b3528061347e525080610caa5280611d3e5280611db25280612edd5280612f185280612fc65250806106c9528061093f5280610bd75280610cf45280610d4d5280610ef652806112af5280611474528061170952806119055280611c645280611d105280611e595280611f1a5280611fc7528061207452806127bb5280612f96528061311e52806133e55280613420528061350a528061355e52506146556000f3fe60806040526004361061014f5760003560e01c806395723b1c116100b6578063e58bb6391161006f578063e58bb6391461039f578063ee42c6f4146103b4578063f235757f146103d4578063f23a6e61146103f4578063f4b1604514610414578063f887ea4014610434576101a7565b806395723b1c14610302578063bc197c8114610322578063c45a01551461034f578063cc9b188014610364578063e07d904e14610377578063e3056a341461038a576101a7565b806340a65ad21161010857806340a65ad21461026e5780634bab09f6146102835780635741229c146102a357806369454b86146102b857806376cdb03b146102d857806386adcc79146102ed576101a7565b806301ffc9a7146101ac5780630a087903146101e25780630c340a24146102045780631387d96d146102195780632185059f146102395780633fc8cef314610259576101a7565b366101a757336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101a55760405162461bcd60e51b815260040161019c906142d9565b60405180910390fd5b005b600080fd5b3480156101b857600080fd5b506101cc6101c7366004613db5565b610449565b6040516101d99190613fe9565b60405180910390f35b3480156101ee57600080fd5b506101f761046c565b6040516101d99190613ef8565b34801561021057600080fd5b506101f7610490565b34801561022557600080fd5b506101a5610234366004613b2e565b6104a5565b34801561024557600080fd5b506101f76102543660046139a2565b6104d0565b34801561026557600080fd5b506101f76106a0565b34801561027a57600080fd5b506101a56106c4565b34801561028f57600080fd5b506101cc61029e36600461396a565b610c93565b3480156102af57600080fd5b506101f7610ca8565b3480156102c457600080fd5b506101f76102d33660046139a2565b610ccc565b3480156102e457600080fd5b506101f7610cf2565b3480156102f957600080fd5b506101f7610d16565b34801561030e57600080fd5b506101a561031d366004613b2e565b610d3a565b34801561032e57600080fd5b5061034261033d3660046139da565b611059565b6040516101d99190613ff4565b34801561035b57600080fd5b506101f761106d565b6101a5610372366004613a95565b611091565b6101a5610385366004613add565b61114a565b34801561039657600080fd5b506101f76117e4565b3480156103ab57600080fd5b506101a56117f3565b3480156103c057600080fd5b506101a56103cf366004613c7f565b611883565b3480156103e057600080fd5b506101a56103ef36600461396a565b611a58565b34801561040057600080fd5b5061034261040f366004613bc7565b611ade565b34801561042057600080fd5b506101cc61042f3660046139a2565b611af0565b34801561044057600080fd5b506101f7611b10565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6042546201000090046001600160a01b031681565b60006104b184846104d0565b90506104be818335611c52565b6104ca84848484611e1d565b50505050565b6001600160a01b0380831660009081526085602090815260408083208585168452909152812054909116806106975760405163e6a4390560e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063e6a439059061054d9087908790600401613f0c565b60206040518083038186803b15801561056557600080fd5b505afa158015610579573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059d9190613986565b90506001600160a01b0381166105c55760405162461bcd60e51b815260040161019c90614251565b6105ef847f00000000000000000000000000000000000000000000000000000000000000006126b8565b610619837f00000000000000000000000000000000000000000000000000000000000000006126b8565b610643817f00000000000000000000000000000000000000000000000000000000000000006126b8565b6001600160a01b0380851660008181526085602081815260408084208987168552825280842080549688166001600160a01b0319978816811790915592825280842094845293905291902080549092161790555b90505b92915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f70aedd96040518163ffffffff1660e01b815260040160806040518083038186803b15801561072057600080fd5b505afa158015610734573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107589190613b80565b50925092505060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663dc20c6fa836040518263ffffffff1660e01b81526004016107ac919061450a565b604080518083038186803b1580156107c357600080fd5b505afa1580156107d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107fb9190613e49565b50905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a4775772846040518263ffffffff1660e01b815260040161084c919061450a565b60206040518083038186803b15801561086457600080fd5b505afa158015610878573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089c9190613986565b6001600160a01b03811660009081526084602052604090205490915060ff166108d75760405162461bcd60e51b815260040161019c906142a2565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b0316146109285760405162461bcd60e51b815260040161019c90614373565b604051630d1d697560e31b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906368eb4ba89061099a907f000000000000000000000000000000000000000000000000000000000000000090879060001990600401613fc8565b600060405180830381600087803b1580156109b457600080fd5b505af11580156109c8573d6000803e3d6000fd5b505060405163b390c0ab60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016925063b390c0ab9150610a1c90869060001990600401614566565b602060405180830381600087803b158015610a3657600080fd5b505af1158015610a4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6e9190613e31565b506040516370a0823160e01b81526000906001600160a01b038316906370a0823190610a9e903090600401613ef8565b60206040518083038186803b158015610ab657600080fd5b505afa158015610aca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aee9190613e31565b9050610b1a827f00000000000000000000000000000000000000000000000000000000000000006126b8565b604051630d9778e560e11b81526000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631b2ef1ca90610b6b9087908690600401614566565b602060405180830381600087803b158015610b8557600080fd5b505af1158015610b99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bbd9190613e31565b60405163314568d960e01b81529091506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063314568d990610c30907f00000000000000000000000000000000000000000000000000000000000000009085908790600401613fc8565b600060405180830381600087803b158015610c4a57600080fd5b505af1158015610c5e573d6000803e3d6000fd5b50505050610c8b7f000000000000000000000000000000000000000000000000000000000000000061272f565b505050505050565b60846020526000908152604090205460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60856020908152600092835260408084209091529082529020546001600160a01b031681565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000610d4684846104d0565b90506000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f70aedd96040518163ffffffff1660e01b815260040160806040518083038186803b158015610da457600080fd5b505afa158015610db8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ddc9190613b80565b509250925050826001600160a01b0316826001600160a01b031663a4775772836040518263ffffffff1660e01b8152600401610e18919061450a565b60206040518083038186803b158015610e3057600080fd5b505afa158015610e44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e689190613986565b6001600160a01b031614610e8e5760405162461bcd60e51b815260040161019c9061443c565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b031614610edf5760405162461bcd60e51b815260040161019c90614373565b604051630d1d697560e31b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906368eb4ba890610f50907f0000000000000000000000000000000000000000000000000000000000000000908590893590600401613fc8565b600060405180830381600087803b158015610f6a57600080fd5b505af1158015610f7e573d6000803e3d6000fd5b505060405163b390c0ab60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016925063b390c0ab9150610fd1908490883590600401614566565b602060405180830381600087803b158015610feb57600080fd5b505af1158015610fff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110239190613e31565b5061103086868686611e1d565b610c8b7f000000000000000000000000000000000000000000000000000000000000000061272f565b63bc197c8160e01b98975050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600061109d84846104d0565b90506110ab8484848461285b565b61113081826001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016110db9190613ef8565b60206040518083038186803b1580156110f357600080fd5b505afa158015611107573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061112b9190613e31565b612ed1565b611138612ff3565b6111418461272f565b6104ca8361272f565b600061115685856104d0565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631fc8bc5d6040518163ffffffff1660e01b815260040160206040518083038186803b1580156111b357600080fd5b505afa1580156111c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111eb9190613986565b6001600160a01b0316631526fe27846040518263ffffffff1660e01b8152600401611216919061450a565b60806040518083038186803b15801561122e57600080fd5b505afa158015611242573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112669190613c41565b5050509050816001600160a01b0316816001600160a01b03161461129c5760405162461bcd60e51b815260040161019c90614276565b6112a88686868561285b565b60008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f70aedd96040518163ffffffff1660e01b815260040160806040518083038186803b15801561130657600080fd5b505afa15801561131a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061133e9190613b80565b919550935091505080156115a257604051636e10637d60e11b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063dc20c6fa9061139b90869060040161450a565b604080518083038186803b1580156113b257600080fd5b505afa1580156113c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113ea9190613e49565b50905080871461140c5760405162461bcd60e51b815260040161019c906143de565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b03161461145d5760405162461bcd60e51b815260040161019c90614373565b604051630d1d697560e31b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906368eb4ba8906114cd907f00000000000000000000000000000000000000000000000000000000000000009087908790600401613fc8565b600060405180830381600087803b1580156114e757600080fd5b505af11580156114fb573d6000803e3d6000fd5b505060405163b390c0ab60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016925063b390c0ab915061154d9086908690600401614566565b602060405180830381600087803b15801561156757600080fd5b505af115801561157b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061159f9190613e31565b50505b6115cc857f00000000000000000000000000000000000000000000000000000000000000006126b8565b6040516370a0823160e01b81526000906001600160a01b038716906370a08231906115fb903090600401613ef8565b60206040518083038186803b15801561161357600080fd5b505afa158015611627573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061164b9190613e31565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631b2ef1ca89846040518363ffffffff1660e01b815260040161169d929190614566565b602060405180830381600087803b1580156116b757600080fd5b505af11580156116cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ef9190613e31565b60405163314568d960e01b81529091506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063314568d990611762907f00000000000000000000000000000000000000000000000000000000000000009085908790600401613fc8565b600060405180830381600087803b15801561177c57600080fd5b505af1158015611790573d6000803e3d6000fd5b5050505061179c612ff3565b6117a58b61272f565b6117ae8a61272f565b6117d77f000000000000000000000000000000000000000000000000000000000000000061272f565b5050505050505050505050565b6043546001600160a01b031681565b6043546001600160a01b0316331461181d5760405162461bcd60e51b815260040161019c90614089565b604380546001600160a01b03191690556042805462010000600160b01b03191633620100008102919091179091556040517fd345d81ce68c70b119a17eee79dc1421700bd9cb21ca148a62dc90983964e82f9161187991613ef8565b60405180910390a1565b6042546201000090046001600160a01b031633146118b35760405162461bcd60e51b815260040161019c906141e2565b8281146118d25760405162461bcd60e51b815260040161019c9061420c565b60005b83811015611a51578282828181106118e957fe5b90506020020160208101906118fe9190613d7d565b156119db577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e660cc0886868481811061193e57fe5b9050602002016020810190611953919061396a565b6040518263ffffffff1660e01b815260040161196f9190613ef8565b60206040518083038186803b15801561198757600080fd5b505afa15801561199b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119bf9190613d99565b6119db5760405162461bcd60e51b815260040161019c906140f7565b8282828181106119e757fe5b90506020020160208101906119fc9190613d7d565b60846000878785818110611a0c57fe5b9050602002016020810190611a21919061396a565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790556001016118d5565b5050505050565b6042546201000090046001600160a01b03163314611a885760405162461bcd60e51b815260040161019c906141e2565b604380546001600160a01b0319166001600160a01b0383161790556040517f964dea888b00b2ab53f13dfe7ca334b46e99338c222ae232d98547a1da019f6090611ad3908390613ef8565b60405180910390a150565b63f23a6e6160e01b9695505050505050565b604160209081526000928352604080842090915290825290205460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b801580611bbc5750604051636eb1769f60e11b81526001600160a01b0384169063dd62ed3e90611b6a9030908690600401613f0c565b60206040518083038186803b158015611b8257600080fd5b505afa158015611b96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bba9190613e31565b155b611bd85760405162461bcd60e51b815260040161019c906144b4565b611c2e8363095ea7b360e01b8484604051602401611bf7929190613faf565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261323c565b505050565b3b151590565b6060611c4884846000856132cb565b90505b9392505050565b8015611e1957600019811415611cf9577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f70aedd96040518163ffffffff1660e01b815260040160806040518083038186803b158015611cbb57600080fd5b505afa158015611ccf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cf39190613b80565b93505050505b604051630d1d697560e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116916368eb4ba891611d6b917f0000000000000000000000000000000000000000000000000000000000000000918716908690600401613fc8565b600060405180830381600087803b158015611d8557600080fd5b505af1158015611d99573d6000803e3d6000fd5b5050604051632770a7eb60e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169250639dc29fac9150611deb9085908590600401613faf565b600060405180830381600087803b158015611e0557600080fd5b505af1158015610c8b573d6000803e3d6000fd5b5050565b6001600160a01b03811660009081526084602052604090205460ff16611e555760405162461bcd60e51b815260040161019c906142a2565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d7ac71ff6040518163ffffffff1660e01b815260040160206040518083038186803b158015611eb057600080fd5b505afa158015611ec4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ee89190613e31565b9050604083013560608401356080850135600019831415611fa6576040516320a8bee760e21b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906382a2fb9c90611f519087908c90600401614513565b602060405180830381600087803b158015611f6b57600080fd5b505af1158015611f7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fa39190613e31565b92505b600019821415612053576040516320a8bee760e21b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906382a2fb9c90611ffe9087908b90600401614513565b602060405180830381600087803b15801561201857600080fd5b505af115801561202c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120509190613e31565b91505b600019811415612100576040516320a8bee760e21b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906382a2fb9c906120ab9087908990600401614513565b602060405180830381600087803b1580156120c557600080fd5b505af11580156120d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120fd9190613e31565b90505b600061218c8760200135876001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016121369190613ef8565b60206040518083038186803b15801561214e57600080fd5b505afa158015612162573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121869190613e31565b9061338c565b9050600080821561224757604051635d5155ef60e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063baa2abde906121f0908e908e908890600090819030904290600401613f26565b6040805180830381600087803b15801561220957600080fd5b505af115801561221d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122419190613e49565b90925090505b60006122578760a08c01356133b4565b905060006122698760c08d01356133b4565b9050818410801561227957508083115b156123985760408051600280825260608083018452926020830190803683370190505090508c8e826000815181106122ad57fe5b60200260200101836001815181106122c157fe5b6001600160a01b0393841660209182029290920101529181169091527f000000000000000000000000000000000000000000000000000000000000000016638803dbee61230e858861338c565b612318878661338c565b8430426040518663ffffffff1660e01b815260040161233b95949392919061452a565b600060405180830381600087803b15801561235557600080fd5b505af1158015612369573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526123919190810190613ce8565b50506124c1565b81841180156123a657508083105b156124c15760408051600280825260608083018452926020830190803683370190505090508d8d826000815181106123da57fe5b60200260200101836001815181106123ee57fe5b6001600160a01b0393841660209182029290920101529181169091527f000000000000000000000000000000000000000000000000000000000000000016638803dbee61243b848761338c565b612445888761338c565b8430426040518663ffffffff1660e01b815260040161246895949392919061452a565b600060405180830381600087803b15801561248257600080fd5b505af1158015612496573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526124be9190810190613ce8565b50505b6124cb8d896133d9565b6124d58c886133d9565b6124df8a876133d9565b6040516370a0823160e01b815260a08c0135906001600160a01b038f16906370a0823190612511903090600401613ef8565b60206040518083038186803b15801561252957600080fd5b505afa15801561253d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125619190613e31565b101561256c57600080fd5b6040516370a0823160e01b815260c08c0135906001600160a01b038e16906370a082319061259e903090600401613ef8565b60206040518083038186803b1580156125b657600080fd5b505afa1580156125ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125ee9190613e31565b10156125f957600080fd5b6040516370a0823160e01b815260208c0135906001600160a01b038c16906370a082319061262b903090600401613ef8565b60206040518083038186803b15801561264357600080fd5b505afa158015612657573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061267b9190613e31565b101561268657600080fd5b61268e612ff3565b6126978d61272f565b6126a08c61272f565b6126a98a61272f565b50505050505050505050505050565b6001600160a01b0380831660009081526041602090815260408083209385168352929052205460ff16611e19576126fb6001600160a01b03831682600019611b34565b6001600160a01b038083166000908152604160209081526040808320938516835292905220805460ff191660011790555050565b6040516370a0823160e01b81526000906001600160a01b038316906370a082319061275e903090600401613ef8565b60206040518083038186803b15801561277657600080fd5b505afa15801561278a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127ae9190613e31565b90508015611e1957611e197f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663630dc7cb6040518163ffffffff1660e01b815260040160206040518083038186803b15801561281257600080fd5b505afa158015612826573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061284a9190613986565b6001600160a01b0384169083613457565b6001600160a01b03811660009081526084602052604090205460ff166128935760405162461bcd60e51b815260040161019c906142a2565b61289b613476565b6128a68483356134ed565b6128b48383602001356134ed565b6128c28183604001356134ed565b6128d0848360600135613541565b6128de838360800135613541565b6128ec818360a00135613541565b6000806000866001600160a01b03166370a08231306040518263ffffffff1660e01b815260040161291d9190613ef8565b60206040518083038186803b15801561293557600080fd5b505afa158015612949573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061296d9190613e31565b90506000866001600160a01b03166370a08231306040518263ffffffff1660e01b815260040161299d9190613ef8565b60206040518083038186803b1580156129b557600080fd5b505afa1580156129c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129ed9190613e31565b9050600080896001600160a01b0316876001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b158015612a3557600080fd5b505afa158015612a49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a6d9190613986565b6001600160a01b03161415612b0357866001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b158015612ab557600080fd5b505afa158015612ac9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612aed9190613ddd565b506001600160701b039182169350169050612b86565b866001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b158015612b3c57600080fd5b505afa158015612b50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b749190613ddd565b506001600160701b0390811693501690505b612b9284848484613595565b90965094505084159250612cb791505057604080516002808252606080830184529260208301908036833701905050905081612bcf578686612bd2565b85875b82600081518110612bdf57fe5b6020026020010183600181518110612bf357fe5b6001600160a01b0393841660209182029290920101529181169091526040516338ed173960e01b81527f0000000000000000000000000000000000000000000000000000000000000000909116906338ed173990612c5e90869060009086903090429060040161452a565b600060405180830381600087803b158015612c7857600080fd5b505af1158015612c8c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052612cb49190810190613ce8565b50505b6040516370a0823160e01b81526000906001600160a01b038816906370a0823190612ce6903090600401613ef8565b60206040518083038186803b158015612cfe57600080fd5b505afa158015612d12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d369190613e31565b90506000866001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401612d669190613ef8565b60206040518083038186803b158015612d7e57600080fd5b505afa158015612d92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612db69190613e31565b90506000821180612dc75750600081115b15612ec7578560c00135821015612df05760405162461bcd60e51b815260040161019c90614351565b8560e00135811015612e145760405162461bcd60e51b815260040161019c90614067565b60405162e8e33760e81b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063e8e3370090612e75908b908b908790879060c08e01359060e08f01359030904290600401613f66565b606060405180830381600087803b158015612e8f57600080fd5b505af1158015612ea3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117d79190613e6c565b5050505050505050565b8015611e1957612f01827f00000000000000000000000000000000000000000000000000000000000000006126b8565b6040516340c10f1960e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906340c10f1990612f4f9085908590600401613faf565b600060405180830381600087803b158015612f6957600080fd5b505af1158015612f7d573d6000803e3d6000fd5b505060405163314568d960e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116935063314568d99250611deb917f0000000000000000000000000000000000000000000000000000000000000000918716908690600401613fc8565b6040516370a0823160e01b81526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190613042903090600401613ef8565b602060405180830381600087803b15801561305c57600080fd5b505af1158015613070573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130949190613e31565b9050801561323957604051632e1a7d4d60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632e1a7d4d906130e890849060040161450a565b600060405180830381600087803b15801561310257600080fd5b505af1158015613116573d6000803e3d6000fd5b5050505060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663630dc7cb6040518163ffffffff1660e01b815260040160206040518083038186803b15801561317557600080fd5b505afa158015613189573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131ad9190613986565b604080516000815260208101918290526001600160a01b03929092169184916131d69190613edc565b60006040518083038185875af1925050503d8060008114613213576040519150601f19603f3d011682016040523d82523d6000602084013e613218565b606091505b5050905080611e195760405162461bcd60e51b815260040161019c9061403c565b50565b6060613291826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611c399092919063ffffffff16565b805190915015611c2e57808060200190518101906132af9190613d99565b611c2e5760405162461bcd60e51b815260040161019c9061446a565b6060824710156132ed5760405162461bcd60e51b815260040161019c90614165565b6132f685611c33565b6133125760405162461bcd60e51b815260040161019c90614405565b60006060866001600160a01b0316858760405161332f9190613edc565b60006040518083038185875af1925050503d806000811461336c576040519150601f19603f3d011682016040523d82523d6000602084013e613371565b606091505b50915091506133818282866135e4565b979650505050505050565b6000828211156133ae5760405162461bcd60e51b815260040161019c9061412e565b50900390565b6000828201838110156106975760405162461bcd60e51b815260040161019c906140c0565b8015611e1957613409827f00000000000000000000000000000000000000000000000000000000000000006126b8565b604051630450cfaf60e31b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906322867d7890611deb9085908590600401613faf565b611c2e8363a9059cbb60e01b8484604051602401611bf7929190613faf565b34156134eb577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b1580156134d757600080fd5b505af1158015611a51573d6000803e3d6000fd5b565b8015611e195760405163246b5de160e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906348d6bbc290611deb9085908590600401613faf565b8015611e1957604051634b8a352960e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690634b8a352990611deb9085908590600401613faf565b6000806135a2858561361d565b6135ac878561361d565b106135c8576135bd86868686613657565b9150600090506135db565b6135d485878587613657565b9150600190505b94509492505050565b606083156135f3575081611c4b565b8251156136035782518084602001fd5b8160405162461bcd60e51b815260040161019c9190614009565b60008261362c5750600061069a565b8282028284828161363957fe5b04146106975760405162461bcd60e51b815260040161019c90614310565b6000613663848461361d565b61366d868461361d565b101561368b5760405162461bcd60e51b815260040161019c906143bc565b6103e5600061369c6107cd8661361d565b905060006136b76136ad888861361d565b6121868a8861361d565b905060006136e4876136de6136cc8b8a6133b4565b6136d8866103e861361d565b90613751565b9061361d565b905060006136f760046136de878561361d565b905060006137176137128361370c888061361d565b906133b4565b613783565b90506000613725828761338c565b9050600061373488600261361d565b90506137408282613751565b9d9c50505050505050505050505050565b60008082116137725760405162461bcd60e51b815260040161019c906141ab565b81838161377b57fe5b049392505050565b60008161379257506000610467565b816001600160801b82106137ab5760809190911c9060401b5b6801000000000000000082106137c65760409190911c9060201b5b64010000000082106137dd5760209190911c9060101b5b6201000082106137f25760109190911c9060081b5b61010082106138065760089190911c9060041b5b601082106138195760049190911c9060021b5b600882106138255760011b5b600181858161383057fe5b048201901c9050600181858161384257fe5b048201901c9050600181858161385457fe5b048201901c9050600181858161386657fe5b048201901c9050600181858161387857fe5b048201901c9050600181858161388a57fe5b048201901c9050600181858161389c57fe5b048201901c905060008185816138ae57fe5b0490508082106138be57806138c0565b815b95945050505050565b60008083601f8401126138da578182fd5b50813567ffffffffffffffff8111156138f1578182fd5b602083019150836020808302850101111561390b57600080fd5b9250929050565b60008083601f840112613923578182fd5b50813567ffffffffffffffff81111561393a578182fd5b60208301915083602082850101111561390b57600080fd5b60006101008284031215613964578081fd5b50919050565b60006020828403121561397b578081fd5b8135610697816145e7565b600060208284031215613997578081fd5b8151610697816145e7565b600080604083850312156139b4578081fd5b82356139bf816145e7565b915060208301356139cf816145e7565b809150509250929050565b60008060008060008060008060a0898b0312156139f5578384fd5b8835613a00816145e7565b97506020890135613a10816145e7565b9650604089013567ffffffffffffffff80821115613a2c578586fd5b613a388c838d016138c9565b909850965060608b0135915080821115613a50578586fd5b613a5c8c838d016138c9565b909650945060808b0135915080821115613a74578384fd5b50613a818b828c01613912565b999c989b5096995094979396929594505050565b60008060006101408486031215613aaa578283fd5b8335613ab5816145e7565b92506020840135613ac5816145e7565b9150613ad48560408601613952565b90509250925092565b6000806000806101608587031215613af3578384fd5b8435613afe816145e7565b93506020850135613b0e816145e7565b9250613b1d8660408701613952565b939692955092936101400135925050565b6000806000838503610120811215613b44578384fd5b8435613b4f816145e7565b93506020850135613b5f816145e7565b925060e0603f1982011215613b72578182fd5b506040840190509250925092565b60008060008060808587031215613b95578182fd5b8451613ba0816145e7565b6020860151909450613bb1816145e7565b6040860151606090960151949790965092505050565b60008060008060008060a08789031215613bdf578384fd5b8635613bea816145e7565b95506020870135613bfa816145e7565b94506040870135935060608701359250608087013567ffffffffffffffff811115613c23578283fd5b613c2f89828a01613912565b979a9699509497509295939492505050565b60008060008060808587031215613c56578182fd5b8451613c61816145e7565b60208601516040870151606090970151919890975090945092505050565b60008060008060408587031215613c94578182fd5b843567ffffffffffffffff80821115613cab578384fd5b613cb7888389016138c9565b90965094506020870135915080821115613ccf578384fd5b50613cdc878288016138c9565b95989497509550505050565b60006020808385031215613cfa578182fd5b825167ffffffffffffffff811115613d10578283fd5b8301601f81018513613d20578283fd5b8051613d33613d2e8261459b565b614574565b8181528381019083850185840285018601891015613d4f578687fd5b8694505b83851015613d71578051835260019490940193918501918501613d53565b50979650505050505050565b600060208284031215613d8e578081fd5b8135610697816145fc565b600060208284031215613daa578081fd5b8151610697816145fc565b600060208284031215613dc6578081fd5b81356001600160e01b031981168114610697578182fd5b600080600060608486031215613df1578081fd5b8351613dfc8161460a565b6020850151909350613e0d8161460a565b604085015190925063ffffffff81168114613e26578182fd5b809150509250925092565b600060208284031215613e42578081fd5b5051919050565b60008060408385031215613e5b578182fd5b505080516020909101519092909150565b600080600060608486031215613e80578081fd5b8351925060208401519150604084015190509250925092565b6000815180845260208085019450808401835b83811015613ed15781516001600160a01b031687529582019590820190600101613eac565b509495945050505050565b60008251613eee8184602087016145bb565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039788168152958716602087015260408601949094526060850192909252608084015290921660a082015260c081019190915260e00190565b6001600160a01b039889168152968816602088015260408701959095526060860193909352608085019190915260a084015290921660c082015260e08101919091526101000190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039390931683526020830191909152604082015260600190565b901515815260200190565b6001600160e01b031991909116815260200190565b60006020825282518060208401526140288160408501602087016145bb565b601f01601f19169190910160400192915050565b6020808252601190820152701c99599d5b99081155120819985a5b1959607a1b604082015260600190565b60208082526008908201526710b0b6ba2126b4b760c11b604082015260600190565b60208082526018908201527f6e6f74207468652070656e64696e6720676f7665726e6f720000000000000000604082015260600190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b6020808252601b908201527f6f7261636c65206e6f7420737570706f7274206c7020746f6b656e0000000000604082015260600190565b6020808252601e908201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604082015260600190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b6020808252601a908201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604082015260600190565b60208082526010908201526f3737ba103a34329033b7bb32b93737b960811b604082015260600190565b60208082526025908201527f6c70546f6b656e732026207374617475736573206c656e677468206d69736d616040820152641d18da195960da1b606082015260800190565b6020808252600b908201526a3737903638103a37b5b2b760a91b604082015260600190565b60208082526012908201527134b731b7b93932b1ba103638103a37b5b2b760711b604082015260600190565b60208082526018908201527f6c7020746f6b656e206e6f742077686974656c69737465640000000000000000604082015260600190565b60208082526017908201527f455448206d75737420636f6d652066726f6d2057455448000000000000000000604082015260600190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6040820152607760f81b606082015260800190565b60208082526008908201526710b0b6ba20a6b4b760c11b604082015260600190565b60208082526029908201527f636f6c6c61746572616c20746f6b656e202620776d617374657263686566206d6040820152681a5cdb585d18da195960ba1b606082015260800190565b60208082526008908201526714995d995c9cd95960c21b604082015260600190565b6020808252600d908201526c1a5b98dbdc9c9958dd081c1a59609a1b604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b602080825260149082015273696e636f727265637420756e6465726c79696e6760601b604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b60208082526036908201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60408201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b606082015260800190565b90815260200190565b9182526001600160a01b0316602082015260400190565b600086825285602083015260a0604083015261454960a0830186613e99565b6001600160a01b0394909416606083015250608001529392505050565b918252602082015260400190565b60405181810167ffffffffffffffff8111828210171561459357600080fd5b604052919050565b600067ffffffffffffffff8211156145b1578081fd5b5060209081020190565b60005b838110156145d65781810151838201526020016145be565b838111156104ca5750506000910152565b6001600160a01b038116811461323957600080fd5b801515811461323957600080fd5b6001600160701b038116811461323957600080fdfea26469706673582212203f8ad90c1fe45e01da91d60e7b7dcd4ddfa21ae0e615518b4cce1c714ba3f8d164736f6c634300060c0033",
  "bytecodeSha1": "1848b4e5f833f8d8a2fcb42e6e24c24e43b461a8",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "SushiswapSpellV1",
  "coverageMap": {
    "branches": {
      "101": {},
      "14": {},
      "15": {},
      "17": {},
      "19": {},
      "20": {
        "SafeERC20._callOptionalReturn": {
          "207": [
            3495,
            3516,
            false
          ],
          "208": [
            3624,
            3654,
            true
          ]
        }
      },
      "21": {
        "Address._verifyCallResult": {
          "183": [
            7234,
            7241,
            false
          ],
          "184": [
            7375,
            7396,
            false
          ]
        },
        "Address.functionCallWithValue": {
          "181": [
            4767,
            4797,
            true
          ],
          "182": [
            4858,
            4876,
            true
          ]
        }
      },
      "24": {
        "Governable.acceptGovernor": {
          "197": [
            1283,
            1312,
            true
          ]
        }
      },
      "4": {},
      "5": {},
      "63": {
        "BasicSpell.<receive>": {
          "185": [
            4438,
            4456,
            true
          ]
        },
        "BasicSpell.doBorrow": {
          "196": [
            3064,
            3074,
            false
          ]
        },
        "BasicSpell.doPutCollateral": {
          "190": [
            3707,
            3717,
            false
          ]
        },
        "BasicSpell.doRefund": {
          "189": [
            2275,
            2286,
            false
          ]
        },
        "BasicSpell.doRefundETH": {
          "191": [
            2545,
            2556,
            false
          ],
          "192": [
            2688,
            2695,
            true
          ]
        },
        "BasicSpell.doRepay": {
          "193": [
            3369,
            3379,
            false
          ]
        },
        "BasicSpell.doTakeCollateral": {
          "186": [
            4104,
            4114,
            false
          ],
          "187": [
            4128,
            4146,
            false
          ]
        },
        "BasicSpell.doTransmit": {
          "195": [
            1970,
            1980,
            false
          ]
        },
        "BasicSpell.doTransmitETH": {
          "194": [
            1560,
            1573,
            false
          ]
        },
        "BasicSpell.ensureApprove": {
          "188": [
            1305,
            1329,
            false
          ]
        }
      },
      "66": {
        "SushiswapSpellV1._optimalDepositA": {
          "180": [
            3128,
            3160,
            true
          ]
        },
        "SushiswapSpellV1.addLiquidityInternal": {
          "171": [
            4275,
            4298,
            true
          ],
          "172": [
            4890,
            4927,
            false
          ],
          "173": [
            5187,
            5198,
            false
          ],
          "174": [
            5277,
            5287,
            true
          ],
          "175": [
            5569,
            5577,
            true
          ],
          "176": [
            5581,
            5589,
            false
          ],
          "177": [
            5607,
            5626,
            true
          ],
          "178": [
            5655,
            5674,
            true
          ]
        },
        "SushiswapSpellV1.addLiquidityWMasterChef": {
          "155": [
            7067,
            7080,
            true
          ],
          "156": [
            7309,
            7321,
            false
          ],
          "157": [
            7397,
            7414,
            true
          ],
          "158": [
            7448,
            7481,
            true
          ]
        },
        "SushiswapSpellV1.getAndApprovePair": {
          "149": [
            1722,
            1738,
            false
          ],
          "150": [
            1800,
            1816,
            true
          ]
        },
        "SushiswapSpellV1.harvestWMasterChef": {
          "151": [
            12804,
            12827,
            true
          ],
          "152": [
            12870,
            12903,
            true
          ]
        },
        "SushiswapSpellV1.optimalDeposit": {
          "179": [
            2462,
            2494,
            false
          ]
        },
        "SushiswapSpellV1.removeLiquidityInternal": {
          "159": [
            8754,
            8777,
            true
          ],
          "160": [
            9035,
            9056,
            false
          ],
          "161": [
            9139,
            9160,
            false
          ],
          "162": [
            9243,
            9265,
            false
          ],
          "163": [
            9533,
            9550,
            false
          ],
          "164": [
            9876,
            9894,
            false
          ],
          "165": [
            9898,
            9916,
            false
          ],
          "166": [
            10199,
            10217,
            false
          ],
          "167": [
            10221,
            10239,
            false
          ],
          "168": [
            10663,
            10717,
            true
          ],
          "169": [
            10732,
            10786,
            true
          ],
          "170": [
            10801,
            10857,
            true
          ]
        },
        "SushiswapSpellV1.removeLiquidityWMasterChef": {
          "153": [
            12046,
            12102,
            true
          ],
          "154": [
            12141,
            12174,
            true
          ]
        }
      },
      "68": {
        "WhitelistSpell.setWhitelistLPTokens": {
          "214": [
            696,
            730,
            true
          ],
          "215": [
            839,
            852,
            false
          ],
          "216": [
            872,
            899,
            true
          ]
        }
      },
      "7": {
        "SafeMath.add": {
          "210": [
            2802,
            2808,
            true
          ]
        },
        "SafeMath.div": {
          "213": [
            4302,
            4307,
            true
          ]
        },
        "SafeMath.mul": {
          "211": [
            3619,
            3625,
            false
          ],
          "212": [
            3680,
            3690,
            true
          ]
        },
        "SafeMath.sub": {
          "209": [
            3221,
            3227,
            true
          ]
        }
      },
      "71": {},
      "72": {
        "HomoraMath.sqrt": {
          "198": [
            814,
            820,
            false
          ],
          "199": [
            874,
            915,
            false
          ],
          "200": [
            968,
            993,
            false
          ],
          "201": [
            1044,
            1061,
            false
          ],
          "202": [
            1112,
            1125,
            false
          ],
          "203": [
            1175,
            1186,
            false
          ],
          "204": [
            1235,
            1245,
            false
          ],
          "205": [
            1294,
            1303,
            false
          ],
          "206": [
            1581,
            1587,
            true
          ]
        }
      },
      "8": {},
      "80": {},
      "87": {},
      "90": {},
      "94": {},
      "95": {},
      "96": {},
      "97": {},
      "98": {},
      "99": {}
    },
    "statements": {
      "101": {},
      "14": {},
      "15": {},
      "17": {},
      "19": {},
      "20": {
        "SafeERC20._callOptionalReturn": {
          "102": [
            3616,
            3701
          ]
        },
        "SafeERC20.safeApprove": {
          "52": [
            1704,
            1854
          ],
          "53": [
            1864,
            1954
          ]
        },
        "SafeERC20.safeTransfer": {
          "111": [
            786,
            872
          ]
        }
      },
      "21": {
        "Address._verifyCallResult": {
          "119": [
            7257,
            7274
          ],
          "120": [
            7765,
            7785
          ]
        },
        "Address.functionCall": {
          "55": [
            3708,
            3767
          ]
        },
        "Address.functionCallWithValue": {
          "103": [
            4759,
            4840
          ],
          "104": [
            4850,
            4910
          ],
          "105": [
            5065,
            5124
          ]
        },
        "Address.isContract": {
          "54": [
            1117,
            1132
          ]
        }
      },
      "24": {
        "Governable.acceptGovernor": {
          "42": [
            1275,
            1341
          ],
          "43": [
            1347,
            1375
          ],
          "44": [
            1381,
            1402
          ],
          "45": [
            1408,
            1439
          ]
        },
        "Governable.setPendingGovernor": {
          "50": [
            1058,
            1092
          ],
          "51": [
            1098,
            1139
          ]
        }
      },
      "4": {
        "ERC165.supportsInterface": {
          "1": [
            1066,
            1106
          ]
        }
      },
      "5": {},
      "63": {
        "BasicSpell.<receive>": {
          "0": [
            4430,
            4484
          ]
        },
        "BasicSpell.doBorrow": {
          "114": [
            3084,
            3110
          ]
        },
        "BasicSpell.doPutCollateral": {
          "97": [
            3727,
            3764
          ],
          "98": [
            3772,
            3798
          ],
          "99": [
            3806,
            3862
          ]
        },
        "BasicSpell.doRefund": {
          "80": [
            2296,
            2348
          ]
        },
        "BasicSpell.doRefundETH": {
          "100": [
            2566,
            2595
          ],
          "101": [
            2680,
            2717
          ]
        },
        "BasicSpell.doRepay": {
          "109": [
            3389,
            3424
          ],
          "110": [
            3432,
            3457
          ]
        },
        "BasicSpell.doTakeCollateral": {
          "56": [
            4158,
            4204
          ],
          "57": [
            4220,
            4277
          ],
          "58": [
            4285,
            4311
          ]
        },
        "BasicSpell.doTransmit": {
          "113": [
            1990,
            2018
          ]
        },
        "BasicSpell.doTransmitETH": {
          "112": [
            1583,
            1622
          ]
        },
        "BasicSpell.ensureApprove": {
          "78": [
            1339,
            1383
          ],
          "79": [
            1391,
            1422
          ]
        }
      },
      "66": {
        "SushiswapSpellV1._optimalDepositA": {
          "123": [
            3120,
            3173
          ],
          "124": [
            3482,
            3515
          ]
        },
        "SushiswapSpellV1.addLiquidityInternal": {
          "81": [
            4267,
            4327
          ],
          "82": [
            4367,
            4382
          ],
          "83": [
            4388,
            4420
          ],
          "84": [
            4426,
            4458
          ],
          "85": [
            4464,
            4493
          ],
          "86": [
            4535,
            4567
          ],
          "87": [
            4573,
            4605
          ],
          "88": [
            4611,
            4640
          ],
          "89": [
            4939,
            4988
          ],
          "90": [
            5013,
            5062
          ],
          "91": [
            5078,
            5140
          ],
          "92": [
            5256,
            5325
          ],
          "93": [
            5333,
            5414
          ],
          "94": [
            5599,
            5639
          ],
          "95": [
            5647,
            5687
          ],
          "96": [
            5695,
            5872
          ]
        },
        "SushiswapSpellV1.addLiquidityWERC20": {
          "25": [
            6320,
            6365
          ],
          "26": [
            6397,
            6453
          ],
          "27": [
            6496,
            6509
          ],
          "28": [
            6515,
            6531
          ],
          "29": [
            6537,
            6553
          ]
        },
        "SushiswapSpellV1.addLiquidityWMasterChef": {
          "30": [
            7059,
            7103
          ],
          "31": [
            7136,
            7181
          ],
          "32": [
            7389,
            7432
          ],
          "33": [
            7440,
            7527
          ],
          "34": [
            7535,
            7594
          ],
          "35": [
            7602,
            7636
          ],
          "36": [
            7674,
            7713
          ],
          "37": [
            7819,
            7871
          ],
          "38": [
            7914,
            7927
          ],
          "39": [
            7933,
            7949
          ],
          "40": [
            7955,
            7971
          ],
          "41": [
            8001,
            8016
          ]
        },
        "SushiswapSpellV1.getAndApprovePair": {
          "4": [
            1748,
            1784
          ],
          "5": [
            1792,
            1832
          ],
          "6": [
            1840,
            1878
          ],
          "7": [
            1886,
            1924
          ],
          "8": [
            1932,
            1966
          ],
          "9": [
            1974,
            2000
          ],
          "10": [
            2008,
            2034
          ],
          "11": [
            2046,
            2055
          ]
        },
        "SushiswapSpellV1.harvestWMasterChef": {
          "12": [
            12796,
            12856
          ],
          "13": [
            12862,
            12949
          ],
          "14": [
            12986,
            13045
          ],
          "15": [
            13051,
            13085
          ],
          "16": [
            13172,
            13211
          ],
          "17": [
            13262,
            13314
          ],
          "18": [
            13344,
            13359
          ]
        },
        "SushiswapSpellV1.optimalDeposit": {
          "115": [
            2504,
            2554
          ],
          "116": [
            2562,
            2580
          ],
          "117": [
            2601,
            2651
          ],
          "118": [
            2659,
            2676
          ]
        },
        "SushiswapSpellV1.removeLiquidityInternal": {
          "59": [
            8746,
            8806
          ],
          "60": [
            9066,
            9123
          ],
          "61": [
            9170,
            9227
          ],
          "62": [
            9275,
            9329
          ],
          "63": [
            9560,
            9730
          ],
          "64": [
            9974,
            10011
          ],
          "65": [
            10019,
            10182
          ],
          "66": [
            10297,
            10334
          ],
          "67": [
            10342,
            10505
          ],
          "68": [
            10534,
            10560
          ],
          "69": [
            10566,
            10592
          ],
          "70": [
            10598,
            10621
          ],
          "71": [
            10655,
            10718
          ],
          "72": [
            10724,
            10787
          ],
          "73": [
            10793,
            10858
          ],
          "74": [
            10891,
            10904
          ],
          "75": [
            10910,
            10926
          ],
          "76": [
            10932,
            10948
          ],
          "77": [
            10954,
            10966
          ]
        },
        "SushiswapSpellV1.removeLiquidityWERC20": {
          "2": [
            11429,
            11464
          ],
          "3": [
            11500,
            11548
          ]
        },
        "SushiswapSpellV1.removeLiquidityWMasterChef": {
          "19": [
            12038,
            12127
          ],
          "20": [
            12133,
            12220
          ],
          "21": [
            12257,
            12321
          ],
          "22": [
            12327,
            12366
          ],
          "23": [
            12402,
            12450
          ],
          "24": [
            12480,
            12495
          ]
        }
      },
      "68": {
        "WhitelistSpell.setWhitelistLPTokens": {
          "46": [
            688,
            772
          ],
          "47": [
            864,
            931
          ],
          "48": [
            947,
            997
          ],
          "49": [
            820,
            825
          ]
        }
      },
      "7": {
        "SafeMath.add": {
          "108": [
            2794,
            2840
          ]
        },
        "SafeMath.div": {
          "125": [
            4294,
            4338
          ],
          "126": [
            4348,
            4360
          ]
        },
        "SafeMath.mul": {
          "121": [
            3627,
            3635
          ],
          "122": [
            3672,
            3728
          ]
        },
        "SafeMath.sub": {
          "106": [
            3213,
            3262
          ],
          "107": [
            3272,
            3284
          ]
        }
      },
      "71": {},
      "72": {
        "HomoraMath.sqrt": {
          "127": [
            822,
            830
          ],
          "128": [
            925,
            935
          ],
          "129": [
            943,
            951
          ],
          "130": [
            1003,
            1012
          ],
          "131": [
            1020,
            1028
          ],
          "132": [
            1071,
            1080
          ],
          "133": [
            1088,
            1096
          ],
          "134": [
            1135,
            1144
          ],
          "135": [
            1152,
            1159
          ],
          "136": [
            1196,
            1204
          ],
          "137": [
            1212,
            1219
          ],
          "138": [
            1255,
            1263
          ],
          "139": [
            1271,
            1278
          ],
          "140": [
            1313,
            1320
          ],
          "141": [
            1333,
            1353
          ],
          "142": [
            1359,
            1379
          ],
          "143": [
            1385,
            1405
          ],
          "144": [
            1411,
            1431
          ],
          "145": [
            1437,
            1457
          ],
          "146": [
            1463,
            1483
          ],
          "147": [
            1489,
            1509
          ],
          "148": [
            1573,
            1597
          ]
        }
      },
      "8": {},
      "80": {},
      "87": {},
      "90": {},
      "94": {},
      "95": {},
      "96": {},
      "97": {},
      "98": {},
      "99": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Address",
    "BasicSpell",
    "ERC1155NaiveReceiver",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/ERC1155Receiver",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/ERC165",
    "Governable",
    "HomoraMath",
    "IBank",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/IERC1155",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/IERC1155Receiver",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/IERC165",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/IERC20",
    "IERC20Wrapper",
    "IMasterChef",
    "IUniswapV2Factory",
    "IUniswapV2Pair",
    "IUniswapV2Router01",
    "IUniswapV2Router02",
    "IWERC20",
    "IWETH",
    "IWMasterChef",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Initializable",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/SafeERC20",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/SafeMath",
    "WhitelistSpell"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "513:12853:66:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4438:10:63;-1:-1:-1;;;;;4452:4:63;4438:18;;4430:54;;;;-1:-1:-1;;;4430:54:63;;;;;;;:::i;:::-;;;;;;;;;513:12853:66;;;;;965:148:4;;;;;;;;;;-1:-1:-1;965:148:4;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;945:30:66;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;321:23:24:-;;;;;;;;;;;;;:::i;11225:328:66:-;;;;;;;;;;-1:-1:-1;11225:328:66;;;;;:::i;:::-;;:::i;1588:472::-;;;;;;;;;;-1:-1:-1;1588:472:66;;;;;:::i;:::-;;:::i;544:29:63:-;;;;;;;;;;;;;:::i;12571:793:66:-;;;;;;;;;;;;;:::i;168:51:68:-;;;;;;;;;;-1:-1:-1;168:51:68;;;;;:::i;:::-;;:::i;509:31:63:-;;;;;;;;;;;;;:::i;752:60:66:-;;;;;;;;;;-1:-1:-1;752:60:66;;;;;:::i;:::-;;:::i;478:27:63:-;;;;;;;;;;;;;:::i;877:41:66:-;;;;;;;;;;;;;:::i;11786:714::-;;;;;;;;;;-1:-1:-1;11786:714:66;;;;;:::i;:::-;;:::i;502:273:71:-;;;;;;;;;;-1:-1:-1;502:273:71;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;618:42:66:-;;;;;;;;;;;;;:::i;6121:437::-;;;;;;:::i;:::-;;:::i;6803:1218::-;;;;;;:::i;:::-;;:::i;373:30:24:-;;;;;;;;;;;;;:::i;1234:210::-;;;;;;;;;;;;;:::i;570:438:68:-;;;;;;;;;;-1:-1:-1;570:438:68;;;;;:::i;:::-;;:::i;981:163:24:-;;;;;;;;;;-1:-1:-1;981:163:24;;;;;:::i;:::-;;:::i;259:239:71:-;;;;;;;;;;-1:-1:-1;259:239:71;;;;;:::i;:::-;;:::i;578:60:63:-;;;;;;;;;;-1:-1:-1;578:60:63;;;;;:::i;:::-;;:::i;685:42:66:-;;;;;;;;;;;;;:::i;965:148:4:-;-1:-1:-1;;;;;;1073:33:4;;1050:4;1073:33;;;;;;;;;;;;;965:148;;;;:::o;945:30:66:-;;;:::o;321:23:24:-;;;;;;-1:-1:-1;;;;;321:23:24;;:::o;11225:328:66:-;11346:10;11359:33;11377:6;11385;11359:17;:33::i;:::-;11346:46;-1:-1:-1;11429:35:66;11346:46;11450:13;;11429:16;:35::i;:::-;11500:48;11524:6;11532;11540:3;11545:2;11500:23;:48::i;:::-;11225:328;;;;:::o;1588:472::-;-1:-1:-1;;;;;1691:13:66;;;1663:7;1691:13;;;:5;:13;;;;;;;;:21;;;;;;;;;;;1663:7;;1691:21;1722:16;1718:323;;1753:31;;-1:-1:-1;;;1753:31:66;;-1:-1:-1;;;;;1753:7:66;:15;;;;:31;;1769:6;;1777;;1753:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1748:36;-1:-1:-1;;;;;;1800:16:66;;1792:40;;;;-1:-1:-1;;;1792:40:66;;;;;;;:::i;:::-;1840:38;1854:6;1870;1840:13;:38::i;:::-;1886;1900:6;1916;1886:13;:38::i;:::-;1932:34;1946:2;1958:6;1932:13;:34::i;:::-;-1:-1:-1;;;;;1974:13:66;;;;;;;:5;:13;;;;;;;;:21;;;;;;;;;;:26;;;;;-1:-1:-1;;;;;;1974:26:66;;;;;;;;2008:13;;;;;;:21;;;;;;;;;:26;;;;;;;;1718:323;2053:2;-1:-1:-1;1588:472:66;;;;;:::o;544:29:63:-;;;:::o;12571:793:66:-;12619:17;12638:11;12655:4;-1:-1:-1;;;;;12655:27:66;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12616:68;;;;;;12691:8;12705:11;-1:-1:-1;;;;;12705:20:66;;12726:6;12705:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12690:43;;;12739:10;12752:11;-1:-1:-1;;;;;12752:30:66;;12783:6;12752:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;12804:23:66;;;;;;:19;:23;;;;;;12739:51;;-1:-1:-1;12804:23:66;;12796:60;;;;-1:-1:-1;;;12796:60:66;;;;;;;:::i;:::-;12891:11;-1:-1:-1;;;;;12870:33:66;:9;-1:-1:-1;;;;;12870:33:66;;12862:87;;;;-1:-1:-1;;;12862:87:66;;;;;;;:::i;:::-;12986:59;;-1:-1:-1;;;12986:59:66;;-1:-1:-1;;;;;12986:4:66;:19;;;;:59;;13014:11;;13028:6;;-1:-1:-1;;13041:2:66;12986:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13051:34:66;;-1:-1:-1;;;13051:34:66;;-1:-1:-1;;;;;13051:11:66;:16;;-1:-1:-1;13051:16:66;;-1:-1:-1;13051:34:66;;13068:6;;-1:-1:-1;;13081:2:66;13051:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;13131:35:66;;-1:-1:-1;;;13131:35:66;;13117:11;;-1:-1:-1;;;;;13131:20:66;;;;;:35;;13160:4;;13131:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13117:49;;13172:39;13186:2;13198:11;13172:13;:39::i;:::-;13227:29;;-1:-1:-1;;;13227:29:66;;13217:7;;-1:-1:-1;;;;;13227:11:66;:16;;;;:29;;13244:3;;13249:6;;13227:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13262:52;;-1:-1:-1;;;13262:52:66;;13217:39;;-1:-1:-1;;;;;;13262:4:66;:18;;;;:52;;13289:11;;13217:39;;13307:6;;13262:52;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13344:15;13353:5;13344:8;:15::i;:::-;12571:793;;;;;;:::o;168:51:68:-;;;;;;;;;;;;;;;:::o;509:31:63:-;;;:::o;752:60:66:-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;752:60:66;;:::o;478:27:63:-;;;:::o;877:41:66:-;;;:::o;11786:714::-;11912:10;11925:33;11943:6;11951;11925:17;:33::i;:::-;11912:46;;11967:17;11986:11;12003:4;-1:-1:-1;;;;;12003:27:66;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11964:68;;;;;;12100:2;-1:-1:-1;;;;;12046:56:66;12059:9;-1:-1:-1;;;;;12046:42:66;;12089:6;12046:50;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;12046:56:66;;12038:89;;;;-1:-1:-1;;;12038:89:66;;;;;;;:::i;:::-;12162:11;-1:-1:-1;;;;;12141:33:66;:9;-1:-1:-1;;;;;12141:33:66;;12133:87;;;;-1:-1:-1;;;12133:87:66;;;;;;;:::i;:::-;12257:64;;-1:-1:-1;;;12257:64:66;;-1:-1:-1;;;;;12257:4:66;:19;;;;:64;;12285:11;;12299:6;;12307:13;;;12257:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12327:39:66;;-1:-1:-1;;;12327:39:66;;-1:-1:-1;;;;;12327:11:66;:16;;-1:-1:-1;12327:16:66;;-1:-1:-1;12327:39:66;;12344:6;;12352:13;;;12327:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;12402:48;12426:6;12434;12442:3;12447:2;12402:23;:48::i;:::-;12480:15;12489:5;12480:8;:15::i;502:273:71:-;-1:-1:-1;;;502:273:71;;;;;;;;;;:::o;618:42:66:-;;;:::o;6121:437::-;6242:10;6255:33;6273:6;6281;6255:17;:33::i;:::-;6242:46;;6320:45;6341:6;6349;6357:3;6362:2;6320:20;:45::i;:::-;6397:56;6413:2;6424;-1:-1:-1;;;;;6417:20:66;;6446:4;6417:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6397:15;:56::i;:::-;6496:13;:11;:13::i;:::-;6515:16;6524:6;6515:8;:16::i;:::-;6537;6546:6;6537:8;:16::i;6803:1218::-;6943:10;6956:33;6974:6;6982;6956:17;:33::i;:::-;6943:46;;6996:15;7021:11;-1:-1:-1;;;;;7021:16:66;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;7021:27:66;;7049:3;7021:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6995:58;;;;;7078:2;-1:-1:-1;;;;;7067:13:66;:7;-1:-1:-1;;;;;7067:13:66;;7059:44;;;;-1:-1:-1;;;7059:44:66;;;;;;;:::i;:::-;7136:45;7157:6;7165;7173:3;7178:2;7136:20;:45::i;:::-;7221:17;7240:11;7253:13;7270:4;-1:-1:-1;;;;;7270:27:66;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7218:81;;-1:-1:-1;7218:81:66;-1:-1:-1;7218:81:66;-1:-1:-1;;7309:12:66;;7305:338;;7353:28;;-1:-1:-1;;;7353:28:66;;7332:15;;-1:-1:-1;;;;;7353:11:66;:20;;;;:28;;7374:6;;7353:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7331:50;;;7404:10;7397:3;:17;7389:43;;;;-1:-1:-1;;;7389:43:66;;;;;;;:::i;:::-;7469:11;-1:-1:-1;;;;;7448:33:66;:9;-1:-1:-1;;;;;7448:33:66;;7440:87;;;;-1:-1:-1;;;7440:87:66;;;;;;;:::i;:::-;7535:59;;-1:-1:-1;;;7535:59:66;;-1:-1:-1;;;;;7535:4:66;:19;;;;:59;;7563:11;;7577:6;;7585:8;;7535:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7602:34:66;;-1:-1:-1;;;7602:34:66;;-1:-1:-1;;;;;7602:11:66;:16;;-1:-1:-1;7602:16:66;;-1:-1:-1;7602:34:66;;7619:6;;7627:8;;7602:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7305:338;;7674:39;7688:2;7700:11;7674:13;:39::i;:::-;7733:35;;-1:-1:-1;;;7733:35:66;;7719:11;;-1:-1:-1;;;;;7733:20:66;;;;;:35;;7762:4;;7733:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7719:49;;7774:7;7784:11;-1:-1:-1;;;;;7784:16:66;;7801:3;7806:6;7784:29;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7819:52;;-1:-1:-1;;;7819:52:66;;7774:39;;-1:-1:-1;;;;;;7819:4:66;:18;;;;:52;;7846:11;;7774:39;;7864:6;;7819:52;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7914:13;:11;:13::i;:::-;7933:16;7942:6;7933:8;:16::i;:::-;7955;7964:6;7955:8;:16::i;:::-;8001:15;8010:5;8001:8;:15::i;:::-;6803:1218;;;;;;;;;;;:::o;373:30:24:-;;;-1:-1:-1;;;;;373:30:24;;:::o;1234:210::-;1297:15;;-1:-1:-1;;;;;1297:15:24;1283:10;:29;1275:66;;;;-1:-1:-1;;;1275:66:24;;;;;;;:::i;:::-;1347:15;:28;;-1:-1:-1;;;;;;1347:28:24;;;1381:8;:21;;-1:-1:-1;;;;;;1381:21:24;1392:10;1381:21;;;;;;;;;;1413:26;;;;;;;:::i;:::-;;;;;;;;1234:210::o;570:438:68:-;566:8:24;;;;;-1:-1:-1;;;;;566:8:24;552:10;:22;544:51;;;;-1:-1:-1;;;544:51:24;;;;;;;:::i;:::-;696:34:68;;::::1;688:84;;;;-1:-1:-1::0;;;688:84:68::1;;;;;;;:::i;:::-;783:8;778:226;797:21:::0;;::::1;778:226;;;839:8;;848:3;839:13;;;;;;;;;;;;;;;;;;;;:::i;:::-;835:105;;;872:4;-1:-1:-1::0;;;;;872:12:68::1;;885:8;;894:3;885:13;;;;;;;;;;;;;;;;;;;;:::i;:::-;872:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;864:67;;;;-1:-1:-1::0;;;864:67:68::1;;;;;;;:::i;:::-;984:8;;993:3;984:13;;;;;;;;;;;;;;;;;;;;:::i;:::-;947:19;:34;967:8;;976:3;967:13;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;947:34:68::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;947:34:68;:50;;-1:-1:-1;;947:50:68::1;::::0;::::1;;::::0;;;::::1;::::0;;-1:-1:-1;820:5:68::1;778:226;;;;570:438:::0;;;;:::o;981:163:24:-;566:8;;;;;-1:-1:-1;;;;;566:8:24;552:10;:22;544:51;;;;-1:-1:-1;;;544:51:24;;;;;;;:::i;:::-;1058:15:::1;:34:::0;;-1:-1:-1;;;;;;1058:34:24::1;-1:-1:-1::0;;;;;1058:34:24;::::1;;::::0;;1103:36:::1;::::0;::::1;::::0;::::1;::::0;1058:34;;1103:36:::1;:::i;:::-;;;;;;;;981:163:::0;:::o;259:239:71:-;-1:-1:-1;;;259:239:71;;;;;;;;:::o;578:60:63:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;685:42:66:-;;;:::o;1348:613:20:-;1713:10;;;1712:62;;-1:-1:-1;1729:39:20;;-1:-1:-1;;;1729:39:20;;-1:-1:-1;;;;;1729:15:20;;;;;:39;;1753:4;;1760:7;;1729:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;1712:62;1704:150;;;;-1:-1:-1;;;1704:150:20;;;;;;;:::i;:::-;1864:90;1884:5;1914:22;;;1938:7;1947:5;1891:62;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1891:62:20;;;;;;;;;;;;;;-1:-1:-1;;;;;1891:62:20;-1:-1:-1;;;;;;1891:62:20;;;;;;;;;;1864:19;:90::i;:::-;1348:613;;;:::o;726:413:21:-;1086:20;1124:8;;;726:413::o;3581:193::-;3684:12;3715:52;3737:6;3745:4;3751:1;3754:12;3715:21;:52::i;:::-;3708:59;;3581:193;;;;;;:::o;4031:291:63:-;4104:10;;4100:218;;-1:-1:-1;;4128:6:63;:18;4124:89;;;4175:4;-1:-1:-1;;;;;4175:27:63;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4158:46;-1:-1:-1;;;;4124:89:63;4220:57;;-1:-1:-1;;;4220:57:63;;-1:-1:-1;;;;;4220:4:63;:19;;;;;:57;;4248:6;;4257:11;;;4270:6;;4220:57;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4285:26:63;;-1:-1:-1;;;4285:26:63;;-1:-1:-1;;;;;4285:6:63;:11;;-1:-1:-1;4285:11:63;;-1:-1:-1;4285:26:63;;4297:5;;4304:6;;4285:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4100:218;4031:291;;:::o;8607:2364:66:-;-1:-1:-1;;;;;8754:23:66;;;;;;:19;:23;;;;;;;;8746:60;;;;-1:-1:-1;;;8746:60:66;;;;;;;:::i;:::-;8812:15;8830:4;-1:-1:-1;;;;;8830:16:66;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8812:36;-1:-1:-1;8872:13:66;;;;8908;;;;8945:14;;;;-1:-1:-1;;9035:21:66;;9031:99;;;9078:45;;-1:-1:-1;;;9078:45:66;;-1:-1:-1;;;;;9078:4:66;:25;;;;:45;;9104:10;;9116:6;;9078:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9066:57;;9031:99;-1:-1:-1;;9139:9:66;:21;9135:99;;;9182:45;;-1:-1:-1;;;9182:45:66;;-1:-1:-1;;;;;9182:4:66;:25;;;;:45;;9208:10;;9220:6;;9182:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9170:57;;9135:99;-1:-1:-1;;9243:10:66;:22;9239:97;;;9288:41;;-1:-1:-1;;;9288:41:66;;-1:-1:-1;;;;;9288:4:66;:25;;;;:41;;9314:10;;9326:2;;9288:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9275:54;;9239:97;9386:18;9407:58;9447:3;:17;;;9414:2;-1:-1:-1;;;;;9407:20:66;;9436:4;9407:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:39;;:58::i;:::-;9386:79;-1:-1:-1;9499:9:66;;9533:17;;9529:208;;9575:155;;-1:-1:-1;;;9575:155:66;;-1:-1:-1;;;;;9575:6:66;:22;;;;:155;;9607:6;;9623;;9639:13;;9662:1;;;;9692:4;;9707:15;;9575:155;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9560:170;;-1:-1:-1;9560:170:66;-1:-1:-1;9529:208:66;9769:16;9788:26;:9;9802:11;;;;9788:13;:26::i;:::-;9769:45;-1:-1:-1;9820:16:66;9839:26;:9;9853:11;;;;9839:13;:26::i;:::-;9820:45;;9883:11;9876:4;:18;:40;;;;;9905:11;9898:4;:18;9876:40;9872:640;;;9950:16;;;9964:1;9950:16;;;9926:21;9950:16;;;;;9926:21;9950:16;;;;;;;;;;-1:-1:-1;9950:16:66;9926:40;;9996:6;10004;9975:4;9980:1;9975:7;;;;;;;;;;;;;9984:4;9989:1;9984:7;;;;;;;;-1:-1:-1;;;;;9974:37:66;;;9984:7;;;;;;;;;9974:37;;;;;;;10019:6;:31;;10060:21;:11;10076:4;10060:15;:21::i;:::-;10091;:4;10100:11;10091:8;:21::i;:::-;10122:4;10144;10159:15;10019:163;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10019:163:66;;;;;;;;;;;;:::i;:::-;;9872:640;;;;10206:11;10199:4;:18;:40;;;;;10228:11;10221:4;:18;10199:40;10195:317;;;10273:16;;;10287:1;10273:16;;;10249:21;10273:16;;;;;10249:21;10273:16;;;;;;;;;;-1:-1:-1;10273:16:66;10249:40;;10319:6;10327;10298:4;10303:1;10298:7;;;;;;;;;;;;;10307:4;10312:1;10307:7;;;;;;;;-1:-1:-1;;;;;10297:37:66;;;10307:7;;;;;;;;;10297:37;;;;;;;10342:6;:31;;10383:21;:11;10399:4;10383:15;:21::i;:::-;10414;:4;10423:11;10414:8;:21::i;:::-;10445:4;10467;10482:15;10342:163;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10342:163:66;;;;;;;;;;;;:::i;:::-;;10195:317;;10534:26;10542:6;10550:9;10534:7;:26::i;:::-;10566;10574:6;10582:9;10566:7;:26::i;:::-;10598:23;10606:2;10610:10;10598:7;:23::i;:::-;10663:39;;-1:-1:-1;;;10663:39:66;;10706:11;;;;;-1:-1:-1;;;;;10663:24:66;;;;;:39;;10696:4;;10663:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:54;;10655:63;;;;;;10732:39;;-1:-1:-1;;;10732:39:66;;10775:11;;;;;-1:-1:-1;;;;;10732:24:66;;;;;:39;;10765:4;;10732:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:54;;10724:63;;;;;;10801:35;;-1:-1:-1;;;10801:35:66;;10840:17;;;;;-1:-1:-1;;;;;10801:20:66;;;;;:35;;10830:4;;10801:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:56;;10793:65;;;;;;10891:13;:11;:13::i;:::-;10910:16;10919:6;10910:8;:16::i;:::-;10932;10941:6;10932:8;:16::i;:::-;10954:12;10963:2;10954:8;:12::i;:::-;8607:2364;;;;;;;;;;;;;:::o;1230:203:63:-;-1:-1:-1;;;;;1305:15:63;;;;;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;1300:129;;1339:44;-1:-1:-1;;;;;1339:25:63;;1365:7;-1:-1:-1;;1339:25:63;:44::i;:::-;-1:-1:-1;;;;;1391:15:63;;;;;;;:8;:15;;;;;;;;:24;;;;;;;;;:31;;-1:-1:-1;;1391:31:63;1418:4;1391:31;;;1230:203;;:::o;2164:195::-;2227:38;;-1:-1:-1;;;2227:38:63;;2212:12;;-1:-1:-1;;;;;2227:23:63;;;;;:38;;2259:4;;2227:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2212:53;-1:-1:-1;2275:11:63;;2271:84;;2296:52;2323:4;-1:-1:-1;;;;;2323:13:63;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2296:26:63;;;2340:7;2296:26;:52::i;4136:1747:66:-;-1:-1:-1;;;;;4275:23:66;;;;;;:19;:23;;;;;;;;4267:60;;;;-1:-1:-1;;;4267:60:66;;;;;;;:::i;:::-;4367:15;:13;:15::i;:::-;4388:32;4399:6;4407:12;;4388:10;:32::i;:::-;4426;4437:6;4445:3;:12;;;4426:10;:32::i;:::-;4464:29;4475:2;4479:3;:13;;;4464:10;:29::i;:::-;4535:32;4544:6;4552:3;:14;;;4535:8;:32::i;:::-;4573;4582:6;4590:3;:14;;;4573:8;:32::i;:::-;4611:29;4620:2;4624:3;:15;;;4611:8;:29::i;:::-;4687:12;4705:15;4734:9;4753:6;-1:-1:-1;;;;;4746:24:66;;4779:4;4746:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4734:51;;4793:9;4812:6;-1:-1:-1;;;;;4805:24:66;;4838:4;4805:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4793:51;;4852:9;4869;4921:6;-1:-1:-1;;;;;4890:37:66;4905:2;-1:-1:-1;;;;;4890:25:66;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4890:37:66;;4886:185;;;4971:2;-1:-1:-1;;;;;4956:30:66;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;4939:49:66;;;;-1:-1:-1;4939:49:66;;-1:-1:-1;4886:185:66;;;5045:2;-1:-1:-1;;;;;5030:30:66;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;5013:49:66;;;;-1:-1:-1;5013:49:66;;-1:-1:-1;4886:185:66;5102:38;5117:4;5123;5129;5135;5102:14;:38::i;:::-;5078:62;;-1:-1:-1;5078:62:66;-1:-1:-1;;5187:11:66;;;-1:-1:-1;5183:238:66;;-1:-1:-1;;5183:238:66;5232:16;;;5246:1;5232:16;;;5208:21;5232:16;;;;;5208:21;5232:16;;;;;;;;;;-1:-1:-1;5232:16:66;5208:40;;5277:10;:48;;5310:6;5318;5277:48;;;5291:6;5299;5277:48;5257:4;5262:1;5257:7;;;;;;;;;;;;;5266:4;5271:1;5266:7;;;;;;;;-1:-1:-1;;;;;5256:69:66;;;5266:7;;;;;;;;;5256:69;;;;;;;5333:81;;-1:-1:-1;;;5333:81:66;;:6;:31;;;;;;:81;;5365:7;;5374:1;;5377:4;;5391;;5398:15;;5333:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5333:81:66;;;;;;;;;;;;:::i;:::-;;5183:238;;5463:39;;-1:-1:-1;;;5463:39:66;;5451:9;;-1:-1:-1;;;;;5463:24:66;;;;;:39;;5496:4;;5463:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5451:51;;5508:9;5527:6;-1:-1:-1;;;;;5520:24:66;;5553:4;5520:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5508:51;;5576:1;5569:4;:8;:20;;;;5588:1;5581:4;:8;5569:20;5565:314;;;5615:3;:11;;;5607:4;:19;;5599:40;;;;-1:-1:-1;;;5599:40:66;;;;;;;:::i;:::-;5663:3;:11;;;5655:4;:19;;5647:40;;;;-1:-1:-1;;;5647:40:66;;;;;;;:::i;:::-;5695:177;;-1:-1:-1;;;5695:177:66;;-1:-1:-1;;;;;5695:6:66;:19;;;;:177;;5724:6;;5740;;5756:4;;5770;;5784:11;;;;;5805;;;;;5834:4;;5849:15;;5695:177;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5565:314::-;4136:1747;;;;;;;;:::o;3635:238:63:-;3707:10;;3703:166;;3727:37;3741:5;3756:6;3727:13;:37::i;:::-;3772:26;;-1:-1:-1;;;3772:26:63;;-1:-1:-1;;;;;3772:6:63;:11;;;;:26;;3784:5;;3791:6;;3772:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3806:56:63;;-1:-1:-1;;;3806:56:63;;-1:-1:-1;;;;;3806:4:63;:18;;;-1:-1:-1;3806:18:63;;-1:-1:-1;3806:56:63;;3833:6;;3842:11;;;3855:6;;3806:56;;;:::i;2446:282::-;2499:36;;-1:-1:-1;;;2499:36:63;;2484:12;;-1:-1:-1;;;;;2505:4:63;2499:21;;;;:36;;2529:4;;2499:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2484:51;-1:-1:-1;2545:11:63;;2541:183;;2566:29;;-1:-1:-1;;;2566:29:63;;-1:-1:-1;;;;;2572:4:63;2566:20;;;;:29;;2587:7;;2566:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2604:12;2622:4;-1:-1:-1;;;;;2622:13:63;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2659:12;;;2669:1;2659:12;;;;;;;;;-1:-1:-1;;;;;2622:20:63;;;;;2650:7;;2622:50;;2659:12;2622:50;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2603:69;;;2688:7;2680:37;;;;-1:-1:-1;;;2680:37:63;;;;;;;:::i;2541:183::-;2446:282;:::o;2967:751:20:-;3386:23;3412:69;3440:4;3412:69;;;;;;;;;;;;;;;;;3420:5;-1:-1:-1;;;;;3412:27:20;;;:69;;;;;:::i;:::-;3495:17;;3386:95;;-1:-1:-1;3495:21:20;3491:221;;3635:10;3624:30;;;;;;;;;;;;:::i;:::-;3616:85;;;;-1:-1:-1;;;3616:85:20;;;;;;;:::i;4608:523:21:-;4735:12;4792:5;4767:21;:30;;4759:81;;;;-1:-1:-1;;;4759:81:21;;;;;;;:::i;:::-;4858:18;4869:6;4858:10;:18::i;:::-;4850:60;;;;-1:-1:-1;;;4850:60:21;;;;;;;:::i;:::-;4981:12;4995:23;5022:6;-1:-1:-1;;;;;5022:11:21;5042:5;5050:4;5022:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4980:75;;;;5072:52;5090:7;5099:10;5111:12;5072:17;:52::i;:::-;5065:59;4608:523;-1:-1:-1;;;;;;;4608:523:21:o;3136:155:7:-;3194:7;3226:1;3221;:6;;3213:49;;;;-1:-1:-1;;;3213:49:7;;;;;;;:::i;:::-;-1:-1:-1;3279:5:7;;;3136:155::o;2690:175::-;2748:7;2779:5;;;2802:6;;;;2794:46;;;;-1:-1:-1;;;2794:46:7;;;;;;;:::i;3305:163:63:-;3369:10;;3365:99;;3389:35;3403:5;3418:4;3389:13;:35::i;:::-;3432:25;;-1:-1:-1;;;3432:25:63;;-1:-1:-1;;;;;3432:4:63;:10;;;;:25;;3443:5;;3450:6;;3432:25;;;:::i;704:175:20:-;786:86;806:5;836:23;;;861:2;865:5;813:58;;;;;;;;;:::i;1516:117:63:-;1560:9;:13;1556:73;;1589:4;-1:-1:-1;;;;;1583:19:63;;1610:9;1583:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1556:73;1516:117::o;1903:126::-;1970:10;;1966:59;;1990:28;;-1:-1:-1;;;1990:28:63;;-1:-1:-1;;;;;1990:4:63;:13;;;;:28;;2004:5;;2011:6;;1990:28;;;:::i;2999:122::-;3064:10;;3060:57;;3084:26;;-1:-1:-1;;;3084:26:63;;-1:-1:-1;;;;;3084:4:63;:11;;;;:26;;3096:5;;3103:6;;3084:26;;;:::i;2310:377:66:-;2421:12;;2480:14;:4;2489;2480:8;:14::i;:::-;2462;:4;2471;2462:8;:14::i;:::-;:32;2458:225;;2514:40;2531:4;2537;2543;2549;2514:16;:40::i;:::-;2504:50;;2575:5;2562:18;;2458:225;;;2611:40;2628:4;2634;2640;2646;2611:16;:40::i;:::-;2601:50;;2672:4;2659:17;;2458:225;2310:377;;;;;;;:::o;7091:725:21:-;7206:12;7234:7;7230:580;;;-1:-1:-1;7264:10:21;7257:17;;7230:580;7375:17;;:21;7371:429;;7633:10;7627:17;7693:15;7680:10;7676:2;7672:19;7665:44;7582:145;7772:12;7765:20;;-1:-1:-1;;;7765:20:21;;;;;;;;:::i;3538:215:7:-;3596:7;3619:6;3615:20;;-1:-1:-1;3634:1:7;3627:8;;3615:20;3657:5;;;3661:1;3657;:5;:1;3680:5;;;;;:10;3672:56;;;;-1:-1:-1;;;3672:56:7;;;;;;;:::i;2995:525:66:-;3108:4;3146:14;:4;3155;3146:8;:14::i;:::-;3128;:4;3137;3128:8;:14::i;:::-;:32;;3120:53;;;;-1:-1:-1;;;3120:53:66;;;;;;;:::i;:::-;3188:3;3179:6;3206:20;3211:4;3221;3206:14;:20::i;:::-;3197:29;-1:-1:-1;3232:7:66;3242:36;3263:14;:4;3272;3263:8;:14::i;:::-;3243;:4;3252;3243:8;:14::i;3242:36::-;3232:46;-1:-1:-1;3284:6:66;3293:42;3330:4;3293:32;3310:14;:4;3319;3310:8;:14::i;:::-;3293:12;:2;3300:4;3293:6;:12::i;:::-;:16;;:32::i;:::-;:36;;:42::i;:::-;3284:51;-1:-1:-1;3341:6:66;3350:15;3363:1;3350:8;:1;3284:51;3350:5;:8::i;:15::-;3341:24;-1:-1:-1;3371:6:66;3380:32;3396:15;3341:24;3396:8;3402:1;;3396:5;:8::i;:::-;:12;;:15::i;:::-;3380;:32::i;:::-;3371:41;-1:-1:-1;3418:14:66;3435:8;3371:41;3441:1;3435:5;:8::i;:::-;3418:25;-1:-1:-1;3449:16:66;3468:8;:1;3474;3468:5;:8::i;:::-;3449:27;-1:-1:-1;3489:26:66;:9;3449:27;3489:13;:26::i;:::-;3482:33;2995:525;-1:-1:-1;;;;;;;;;;;;;2995:525:66:o;4217:150:7:-;4275:7;4306:1;4302;:5;4294:44;;;;-1:-1:-1;;;4294:44:7;;;;;;;:::i;:::-;4359:1;4355;:5;;;;;;;4217:150;-1:-1:-1;;;4217:150:7:o;753:849:72:-;798:4;814:6;810:20;;-1:-1:-1;829:1:72;822:8;;810:20;846:1;862;-1:-1:-1;;;874:41:72;;870:88;;932:3;925:10;;;;;949:2;943:8;870:88;974:19;968:2;:25;964:71;;1010:2;1003:9;;;;;1026:2;1020:8;964:71;1050:11;1044:2;:17;1040:63;;1078:2;1071:9;;;;;1094:2;1088:8;1040:63;1118:7;1112:2;:13;1108:58;;1142:2;1135:9;;;;;1158:1;1152:7;1108:58;1181:5;1175:2;:11;1171:55;;1203:1;1196:8;;;;;1218:1;1212:7;1171:55;1241:4;1235:2;:10;1231:54;;1262:1;1255:8;;;;;1277:1;1271:7;1231:54;1300:3;1294:2;:9;1290:37;;1319:1;1313:7;1290:37;1352:1;1346;1342;:5;;;;;;1338:1;:9;1337:16;;1333:20;;1378:1;1372;1368;:5;;;;;;1364:1;:9;1363:16;;1359:20;;1404:1;1398;1394;:5;;;;;;1390:1;:9;1389:16;;1385:20;;1430:1;1424;1420;:5;;;;;;1416:1;:9;1415:16;;1411:20;;1456:1;1450;1446;:5;;;;;;1442:1;:9;1441:16;;1437:20;;1482:1;1476;1472;:5;;;;;;1468:1;:9;1467:16;;1463:20;;1508:1;1502;1498;:5;;;;;;1494:1;:9;1493:16;;1489:20;;1552:7;1566:1;1562;:5;;;;;;1552:15;;1585:2;1581:1;:6;:15;;1594:2;1581:15;;;1590:1;1581:15;1573:24;753:849;-1:-1:-1;;;;;753:849:72:o;301:352:-1:-;;;431:3;424:4;416:6;412:17;408:27;398:2;;-1:-1;;439:12;398:2;-1:-1;469:20;;509:18;498:30;;495:2;;;-1:-1;;531:12;495:2;575:4;567:6;563:17;551:29;;626:3;575:4;;610:6;606:17;567:6;592:32;;589:41;586:2;;;643:1;;633:12;586:2;391:262;;;;;:::o;2574:336::-;;;2688:3;2681:4;2673:6;2669:17;2665:27;2655:2;;-1:-1;;2696:12;2655:2;-1:-1;2726:20;;2766:18;2755:30;;2752:2;;;-1:-1;;2788:12;2752:2;2832:4;2824:6;2820:17;2808:29;;2883:3;2832:4;2863:17;2824:6;2849:32;;2846:41;2843:2;;;2900:1;;2890:12;3141:160;;3253:3;3244:6;3239:3;3235:16;3231:26;3228:2;;;-1:-1;;3260:12;3228:2;-1:-1;3280:15;3221:80;-1:-1;3221:80::o;4083:241::-;;4187:2;4175:9;4166:7;4162:23;4158:32;4155:2;;;-1:-1;;4193:12;4155:2;85:6;72:20;97:33;124:5;97:33;:::i;4331:263::-;;4446:2;4434:9;4425:7;4421:23;4417:32;4414:2;;;-1:-1;;4452:12;4414:2;226:6;220:13;238:33;265:5;238:33;:::i;4601:366::-;;;4722:2;4710:9;4701:7;4697:23;4693:32;4690:2;;;-1:-1;;4728:12;4690:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;4780:63;-1:-1;4880:2;4919:22;;72:20;97:33;72:20;97:33;:::i;:::-;4888:63;;;;4684:283;;;;;:::o;4974:1179::-;;;;;;;;;5235:3;5223:9;5214:7;5210:23;5206:33;5203:2;;;-1:-1;;5242:12;5203:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;5294:63;-1:-1;5394:2;5433:22;;72:20;97:33;72:20;97:33;:::i;:::-;5402:63;-1:-1;5530:2;5515:18;;5502:32;5554:18;5543:30;;;5540:2;;;-1:-1;;5576:12;5540:2;5614:80;5686:7;5677:6;5666:9;5662:22;5614:80;:::i;:::-;5596:98;;-1:-1;5596:98;-1:-1;5759:2;5744:18;;5731:32;;-1:-1;5772:30;;;5769:2;;;-1:-1;;5805:12;5769:2;5843:80;5915:7;5906:6;5895:9;5891:22;5843:80;:::i;:::-;5825:98;;-1:-1;5825:98;-1:-1;5988:3;5973:19;;5960:33;;-1:-1;6002:30;;;5999:2;;;-1:-1;;6035:12;5999:2;;6073:64;6129:7;6120:6;6109:9;6105:22;6073:64;:::i;:::-;5197:956;;;;-1:-1;5197:956;;-1:-1;5197:956;;;;;;6055:82;-1:-1;;;5197:956::o;6160:548::-;;;;6326:3;6314:9;6305:7;6301:23;6297:33;6294:2;;;-1:-1;;6333:12;6294:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;6385:63;-1:-1;6485:2;6524:22;;72:20;97:33;72:20;97:33;:::i;:::-;6493:63;-1:-1;6611:81;6684:7;6593:2;6660:22;;6611:81;:::i;:::-;6601:91;;6288:420;;;;;:::o;6715:674::-;;;;;6898:3;6886:9;6877:7;6873:23;6869:33;6866:2;;;-1:-1;;6905:12;6866:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;6957:63;-1:-1;7057:2;7096:22;;72:20;97:33;72:20;97:33;:::i;:::-;7065:63;-1:-1;7183:81;7256:7;7165:2;7232:22;;7183:81;:::i;:::-;6860:529;;;;-1:-1;7173:91;;7301:3;7341:22;3733:20;;-1:-1;;6860:529::o;7396:558::-;;;;7555:9;7546:7;7542:23;7567:3;7542:23;7538:33;7535:2;;;-1:-1;;7574:12;7535:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;7626:63;-1:-1;7726:2;7765:22;;72:20;97:33;72:20;97:33;:::i;:::-;7734:63;-1:-1;3470:3;-1:-1;;3452:16;;3448:26;3445:2;;;-1:-1;;3477:12;3445:2;;7834;7910:9;7906:22;7842:96;;7529:425;;;;;:::o;7961:672::-;;;;;8127:3;8115:9;8106:7;8102:23;8098:33;8095:2;;;-1:-1;;8134:12;8095:2;226:6;220:13;238:33;265:5;238:33;:::i;:::-;8297:2;8347:22;;220:13;8186:74;;-1:-1;238:33;220:13;238:33;:::i;:::-;8416:2;8466:22;;3881:13;8535:2;8585:22;;;3881:13;8089:544;;8305:74;;-1:-1;8089:544;-1:-1;;;8089:544::o;8640:867::-;;;;;;;8831:3;8819:9;8810:7;8806:23;8802:33;8799:2;;;-1:-1;;8838:12;8799:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;8890:63;-1:-1;8990:2;9029:22;;72:20;97:33;72:20;97:33;:::i;:::-;8998:63;-1:-1;9098:2;9137:22;;3733:20;;-1:-1;9206:2;9245:22;;3733:20;;-1:-1;9342:3;9327:19;;9314:33;9367:18;9356:30;;9353:2;;;-1:-1;;9389:12;9353:2;9427:64;9483:7;9474:6;9463:9;9459:22;9427:64;:::i;:::-;8793:714;;;;-1:-1;8793:714;;-1:-1;8793:714;;9409:82;;8793:714;-1:-1;;;8793:714::o;9514:672::-;;;;;9680:3;9668:9;9659:7;9655:23;9651:33;9648:2;;;-1:-1;;9687:12;9648:2;226:6;220:13;238:33;265:5;238:33;:::i;:::-;9850:2;9900:22;;3881:13;9969:2;10019:22;;3881:13;10088:2;10138:22;;;3881:13;9739:74;;3881:13;;-1:-1;3881:13;;-1:-1;9642:544;-1:-1;;;9642:544::o;10193:672::-;;;;;10381:2;10369:9;10360:7;10356:23;10352:32;10349:2;;;-1:-1;;10387:12;10349:2;10445:17;10432:31;10483:18;;10475:6;10472:30;10469:2;;;-1:-1;;10505:12;10469:2;10543:80;10615:7;10606:6;10595:9;10591:22;10543:80;:::i;:::-;10525:98;;-1:-1;10525:98;-1:-1;10688:2;10673:18;;10660:32;;-1:-1;10701:30;;;10698:2;;;-1:-1;;10734:12;10698:2;;10772:77;10841:7;10832:6;10821:9;10817:22;10772:77;:::i;:::-;10343:522;;;;-1:-1;10754:95;-1:-1;;;;10343:522::o;10872:392::-;;11012:2;;11000:9;10991:7;10987:23;10983:32;10980:2;;;-1:-1;;11018:12;10980:2;11069:17;11063:24;11107:18;11099:6;11096:30;11093:2;;;-1:-1;;11129:12;11093:2;11216:22;;1550:4;1538:17;;1534:27;-1:-1;1524:2;;-1:-1;;1565:12;1524:2;1605:6;1599:13;1627:80;1642:64;1699:6;1642:64;:::i;:::-;1627:80;:::i;:::-;1735:21;;;1792:14;;;;1767:17;;;1881;;;1872:27;;;;1869:36;-1:-1;1866:2;;;-1:-1;;1908:12;1866:2;-1:-1;1934:10;;1928:217;1953:6;1950:1;1947:13;1928:217;;;3881:13;;2021:61;;1975:1;1968:9;;;;;2096:14;;;;2124;;1928:217;;;-1:-1;11149:99;10974:290;-1:-1;;;;;;;10974:290::o;11271:235::-;;11372:2;11360:9;11351:7;11347:23;11343:32;11340:2;;;-1:-1;;11378:12;11340:2;2236:6;2223:20;2248:30;2272:5;2248:30;:::i;11513:257::-;;11625:2;11613:9;11604:7;11600:23;11596:32;11593:2;;;-1:-1;;11631:12;11593:2;2371:6;2365:13;2383:30;2407:5;2383:30;:::i;11777:239::-;;11880:2;11868:9;11859:7;11855:23;11851:32;11848:2;;;-1:-1;;11886:12;11848:2;2491:20;;-1:-1;;;;;;45702:78;;49055:34;;49045:2;;-1:-1;;49093:12;12335:533;;;;12483:2;12471:9;12462:7;12458:23;12454:32;12451:2;;;-1:-1;;12489:12;12451:2;3609:6;3603:13;3621:33;3648:5;3621:33;:::i;:::-;12652:2;12702:22;;3603:13;12541:74;;-1:-1;3621:33;3603:13;3621:33;:::i;:::-;12771:2;12820:22;;4021:13;12660:74;;-1:-1;46306:10;46295:22;;49591:34;;49581:2;;-1:-1;;49629:12;49581:2;12779:73;;;;12445:423;;;;;:::o;12875:263::-;;12990:2;12978:9;12969:7;12965:23;12961:32;12958:2;;;-1:-1;;12996:12;12958:2;-1:-1;3881:13;;12952:186;-1:-1;12952:186::o;13145:399::-;;;13277:2;13265:9;13256:7;13252:23;13248:32;13245:2;;;-1:-1;;13283:12;13245:2;-1:-1;;3881:13;;13446:2;13496:22;;;3881:13;;;;;-1:-1;13239:305::o;13551:535::-;;;;13700:2;13688:9;13679:7;13675:23;13671:32;13668:2;;;-1:-1;;13706:12;13668:2;3887:6;3881:13;13758:74;;13869:2;13923:9;13919:22;3881:13;13877:74;;13988:2;14042:9;14038:22;3881:13;13996:74;;13662:424;;;;;:::o;14685:690::-;;14878:5;44526:12;45070:6;45065:3;45058:19;45107:4;;45102:3;45098:14;14890:93;;45107:4;15054:5;44380:14;-1:-1;15093:260;15118:6;15115:1;15112:13;15093:260;;;15179:13;;-1:-1;;;;;46089:54;14485:37;;14247:14;;;;44913;;;;509:18;15133:9;15093:260;;;-1:-1;15359:10;;14809:566;-1:-1;;;;;14809:566::o;25380:271::-;;15771:5;44526:12;15882:52;15927:6;15922:3;15915:4;15908:5;15904:16;15882:52;:::i;:::-;15946:16;;;;;25514:137;-1:-1;;25514:137::o;25658:222::-;-1:-1;;;;;46089:54;;;;14485:37;;25785:2;25770:18;;25756:124::o;26132:333::-;-1:-1;;;;;46089:54;;;14485:37;;46089:54;;26451:2;26436:18;;14485:37;26287:2;26272:18;;26258:207::o;26472:940::-;-1:-1;;;;;46089:54;;;14485:37;;46089:54;;;26956:2;26941:18;;14485:37;27039:2;27024:18;;25331:37;;;;27130:2;27115:18;;16936:58;;;;27221:3;27206:19;;16936:58;46089:54;;;46100:42;27298:19;;14354:58;27397:3;27382:19;;25331:37;;;;26791:3;26776:19;;26762:650::o;27419:1020::-;-1:-1;;;;;46089:54;;;14485:37;;46089:54;;;27915:2;27900:18;;14485:37;27998:2;27983:18;;25331:37;;;;28081:2;28066:18;;25331:37;;;;28164:3;28149:19;;25331:37;;;;46100:42;28233:19;;25331:37;46089:54;;;28340:3;28325:19;;14354:58;28424:3;28409:19;;25331:37;;;;27750:3;27735:19;;27721:718::o;28446:333::-;-1:-1;;;;;46089:54;;;;14485:37;;28765:2;28750:18;;25331:37;28601:2;28586:18;;28572:207::o;28786:444::-;-1:-1;;;;;46089:54;;;;14485:37;;29133:2;29118:18;;25331:37;;;;29216:2;29201:18;;25331:37;28969:2;28954:18;;28940:290::o;29237:210::-;45615:13;;45608:21;15448:34;;29358:2;29343:18;;29329:118::o;29454:218::-;-1:-1;;;;;;45702:78;;;;15563:36;;29579:2;29564:18;;29550:122::o;31042:310::-;;31189:2;31210:17;31203:47;17151:5;44526:12;45070:6;31189:2;31178:9;31174:18;45058:19;17245:52;17290:6;45098:14;31178:9;45098:14;31189:2;17271:5;17267:16;17245:52;:::i;:::-;48734:7;48718:14;-1:-1;;48714:28;17309:39;;;;45098:14;17309:39;;31160:192;-1:-1;;31160:192::o;31359:416::-;31559:2;31573:47;;;17585:2;31544:18;;;45058:19;-1:-1;;;45098:14;;;17601:40;17660:12;;;31530:245::o;31782:416::-;31982:2;31996:47;;;17911:1;31967:18;;;45058:19;-1:-1;;;45098:14;;;17926:31;17976:12;;;31953:245::o;32205:416::-;32405:2;32419:47;;;18227:2;32390:18;;;45058:19;18263:26;45098:14;;;18243:47;18309:12;;;32376:245::o;32628:416::-;32828:2;32842:47;;;18560:2;32813:18;;;45058:19;18596:29;45098:14;;;18576:50;18645:12;;;32799:245::o;33051:416::-;33251:2;33265:47;;;18896:2;33236:18;;;45058:19;18932:29;45098:14;;;18912:50;18981:12;;;33222:245::o;33474:416::-;33674:2;33688:47;;;19232:2;33659:18;;;45058:19;19268:32;45098:14;;;19248:53;19320:12;;;33645:245::o;33897:416::-;34097:2;34111:47;;;19571:2;34082:18;;;45058:19;19607:34;45098:14;;;19587:55;-1:-1;;;19662:12;;;19655:30;19704:12;;;34068:245::o;34320:416::-;34520:2;34534:47;;;19955:2;34505:18;;;45058:19;19991:28;45098:14;;;19971:49;20039:12;;;34491:245::o;34743:416::-;34943:2;34957:47;;;20290:2;34928:18;;;45058:19;-1:-1;;;45098:14;;;20306:39;20364:12;;;34914:245::o;35166:416::-;35366:2;35380:47;;;20615:2;35351:18;;;45058:19;20651:34;45098:14;;;20631:55;-1:-1;;;20706:12;;;20699:29;20747:12;;;35337:245::o;35589:416::-;35789:2;35803:47;;;20998:2;35774:18;;;45058:19;-1:-1;;;45098:14;;;21014:34;21067:12;;;35760:245::o;36012:416::-;36212:2;36226:47;;;21318:2;36197:18;;;45058:19;-1:-1;;;45098:14;;;21334:41;21394:12;;;36183:245::o;36435:416::-;36635:2;36649:47;;;21645:2;36620:18;;;45058:19;21681:26;45098:14;;;21661:47;21727:12;;;36606:245::o;36858:416::-;37058:2;37072:47;;;21978:2;37043:18;;;45058:19;22014:25;45098:14;;;21994:46;22059:12;;;37029:245::o;37281:416::-;37481:2;37495:47;;;22310:2;37466:18;;;45058:19;22346:34;45098:14;;;22326:55;-1:-1;;;22401:12;;;22394:25;22438:12;;;37452:245::o;37704:416::-;37904:2;37918:47;;;22689:1;37889:18;;;45058:19;-1:-1;;;45098:14;;;22704:31;22754:12;;;37875:245::o;38127:416::-;38327:2;38341:47;;;23005:2;38312:18;;;45058:19;23041:34;45098:14;;;23021:55;-1:-1;;;23096:12;;;23089:33;23141:12;;;38298:245::o;38550:416::-;38750:2;38764:47;;;23392:1;38735:18;;;45058:19;-1:-1;;;45098:14;;;23407:31;23457:12;;;38721:245::o;38973:416::-;39173:2;39187:47;;;23708:2;39158:18;;;45058:19;-1:-1;;;45098:14;;;23724:36;23779:12;;;39144:245::o;39396:416::-;39596:2;39610:47;;;24030:2;39581:18;;;45058:19;24066:31;45098:14;;;24046:52;24117:12;;;39567:245::o;39819:416::-;40019:2;40033:47;;;24368:2;40004:18;;;45058:19;-1:-1;;;45098:14;;;24384:43;24446:12;;;39990:245::o;40242:416::-;40442:2;40456:47;;;24697:2;40427:18;;;45058:19;24733:34;45098:14;;;24713:55;-1:-1;;;24788:12;;;24781:34;24834:12;;;40413:245::o;40665:416::-;40865:2;40879:47;;;25085:2;40850:18;;;45058:19;25121:34;45098:14;;;25101:55;-1:-1;;;25176:12;;;25169:46;25234:12;;;40836:245::o;41088:222::-;25331:37;;;41215:2;41200:18;;41186:124::o;41317:333::-;25331:37;;;-1:-1;;;;;46089:54;41636:2;41621:18;;14485:37;41472:2;41457:18;;41443:207::o;41657:848::-;;25361:5;25338:3;25331:37;48094:24;42135:2;42124:9;42120:18;16936:58;41962:3;42172:2;42161:9;42157:18;42150:48;42212:108;41962:3;41951:9;41947:19;42306:6;42212:108;:::i;:::-;-1:-1;;;;;46089:54;;;;42407:2;42392:18;;14354:58;-1:-1;42490:3;42475:19;25331:37;42204:116;41933:572;-1:-1;;;41933:572::o;42512:333::-;25331:37;;;42831:2;42816:18;;25331:37;42667:2;42652:18;;42638:207::o;43691:256::-;43753:2;43747:9;43779:17;;;43854:18;43839:34;;43875:22;;;43836:62;43833:2;;;43911:1;;43901:12;43833:2;43753;43920:22;43731:216;;-1:-1;43731:216::o;43954:304::-;;44113:18;44105:6;44102:30;44099:2;;;-1:-1;;44135:12;44099:2;-1:-1;44180:4;44168:17;;;44233:15;;44036:222::o;48374:268::-;48439:1;48446:101;48460:6;48457:1;48454:13;48446:101;;;48527:11;;;48521:18;48508:11;;;48501:39;48482:2;48475:10;48446:101;;;48562:6;48559:1;48556:13;48553:2;;;-1:-1;;48439:1;48609:16;;48602:27;48423:219::o;48755:117::-;-1:-1;;;;;46089:54;;48814:35;;48804:2;;48863:1;;48853:12;48879:111;48960:5;45615:13;45608:21;48938:5;48935:32;48925:2;;48981:1;;48971:12;49285:117;-1:-1;;;;;49372:5;45973:42;49347:5;49344:35;49334:2;;49393:1;;49383:12",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "acceptGovernor()": {
        "details": "Accept to become the new governor. Must be called by the pending governor."
      },
      "addLiquidityWERC20(address,address,(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256))": {
        "details": "Add liquidity to Sushiswap pool, with no staking rewards (use WERC20 wrapper)",
        "params": {
          "amt": "Amounts of tokens to supply, borrow, and get.",
          "tokenA": "Token A for the pair",
          "tokenB": "Token B for the pair"
        }
      },
      "addLiquidityWMasterChef(address,address,(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),uint256)": {
        "details": "Add liquidity to Sushiswap pool, with staking to masterChef",
        "params": {
          "amt": "Amounts of tokens to supply, borrow, and get.",
          "pid": "Pool id",
          "tokenA": "Token A for the pair",
          "tokenB": "Token B for the pair"
        }
      },
      "getAndApprovePair(address,address)": {
        "details": "Return the LP token for the token pairs (can be in any order)",
        "params": {
          "tokenA": "Token A to get LP token",
          "tokenB": "Token B to get LP token"
        }
      },
      "harvestWMasterChef()": {
        "details": "Harvest SUSHI reward tokens to in-exec position's owner"
      },
      "removeLiquidityWERC20(address,address,(uint256,uint256,uint256,uint256,uint256,uint256,uint256))": {
        "details": "Remove liquidity from Sushiswap pool, with no staking rewards (use WERC20 wrapper)",
        "params": {
          "amt": "Amounts of tokens to take out, withdraw, repay, and get.",
          "tokenA": "Token A for the pair",
          "tokenB": "Token B for the pair"
        }
      },
      "removeLiquidityWMasterChef(address,address,(uint256,uint256,uint256,uint256,uint256,uint256,uint256))": {
        "details": "Remove liquidity from Sushiswap pool, from masterChef staking",
        "params": {
          "amt": "Amounts of tokens to take out, withdraw, repay, and get.",
          "tokenA": "Token A for the pair",
          "tokenB": "Token B for the pair"
        }
      },
      "setPendingGovernor(address)": {
        "details": "Set the pending governor, which will be the governor once accepted.",
        "params": {
          "_pendingGovernor": "The address to become the pending governor."
        }
      },
      "setWhitelistLPTokens(address[],bool[])": {
        "details": "Set whitelist LP token statuses for spell",
        "params": {
          "lpTokens": "LP tokens to set whitelist statuses",
          "statuses": "Whitelist statuses"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
      }
    },
    "version": 1
  },
  "offset": [
    513,
    13366
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95723B1C GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xE58BB639 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xE58BB639 EQ PUSH2 0x39F JUMPI DUP1 PUSH4 0xEE42C6F4 EQ PUSH2 0x3B4 JUMPI DUP1 PUSH4 0xF235757F EQ PUSH2 0x3D4 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0xF4B16045 EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0xF887EA40 EQ PUSH2 0x434 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x95723B1C EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0xCC9B1880 EQ PUSH2 0x364 JUMPI DUP1 PUSH4 0xE07D904E EQ PUSH2 0x377 JUMPI DUP1 PUSH4 0xE3056A34 EQ PUSH2 0x38A JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x40A65AD2 GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x40A65AD2 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x4BAB09F6 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x5741229C EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x69454B86 EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x76CDB03B EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0x86ADCC79 EQ PUSH2 0x2ED JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0xA087903 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0xC340A24 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x1387D96D EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x2185059F EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x3FC8CEF3 EQ PUSH2 0x259 JUMPI PUSH2 0x1A7 JUMP JUMPDEST CALLDATASIZE PUSH2 0x1A7 JUMPI CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x1A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C SWAP1 PUSH2 0x42D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CC PUSH2 0x1C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x3DB5 JUMP JUMPDEST PUSH2 0x449 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x3FE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F7 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x3EF8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x210 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F7 PUSH2 0x490 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A5 PUSH2 0x234 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B2E JUMP JUMPDEST PUSH2 0x4A5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x245 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F7 PUSH2 0x254 CALLDATASIZE PUSH1 0x4 PUSH2 0x39A2 JUMP JUMPDEST PUSH2 0x4D0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x265 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F7 PUSH2 0x6A0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A5 PUSH2 0x6C4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CC PUSH2 0x29E CALLDATASIZE PUSH1 0x4 PUSH2 0x396A JUMP JUMPDEST PUSH2 0xC93 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F7 PUSH2 0xCA8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F7 PUSH2 0x2D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x39A2 JUMP JUMPDEST PUSH2 0xCCC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F7 PUSH2 0xCF2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F7 PUSH2 0xD16 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A5 PUSH2 0x31D CALLDATASIZE PUSH1 0x4 PUSH2 0x3B2E JUMP JUMPDEST PUSH2 0xD3A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x342 PUSH2 0x33D CALLDATASIZE PUSH1 0x4 PUSH2 0x39DA JUMP JUMPDEST PUSH2 0x1059 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x3FF4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F7 PUSH2 0x106D JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x372 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A95 JUMP JUMPDEST PUSH2 0x1091 JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x385 CALLDATASIZE PUSH1 0x4 PUSH2 0x3ADD JUMP JUMPDEST PUSH2 0x114A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F7 PUSH2 0x17E4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A5 PUSH2 0x17F3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A5 PUSH2 0x3CF CALLDATASIZE PUSH1 0x4 PUSH2 0x3C7F JUMP JUMPDEST PUSH2 0x1883 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A5 PUSH2 0x3EF CALLDATASIZE PUSH1 0x4 PUSH2 0x396A JUMP JUMPDEST PUSH2 0x1A58 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x400 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x342 PUSH2 0x40F CALLDATASIZE PUSH1 0x4 PUSH2 0x3BC7 JUMP JUMPDEST PUSH2 0x1ADE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x420 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CC PUSH2 0x42F CALLDATASIZE PUSH1 0x4 PUSH2 0x39A2 JUMP JUMPDEST PUSH2 0x1AF0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x440 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F7 PUSH2 0x1B10 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x42 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B1 DUP5 DUP5 PUSH2 0x4D0 JUMP JUMPDEST SWAP1 POP PUSH2 0x4BE DUP2 DUP4 CALLDATALOAD PUSH2 0x1C52 JUMP JUMPDEST PUSH2 0x4CA DUP5 DUP5 DUP5 DUP5 PUSH2 0x1E1D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x85 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND DUP1 PUSH2 0x697 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE6A43905 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xE6A43905 SWAP1 PUSH2 0x54D SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x3F0C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x565 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x579 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x59D SWAP2 SWAP1 PUSH2 0x3986 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C SWAP1 PUSH2 0x4251 JUMP JUMPDEST PUSH2 0x5EF DUP5 PUSH32 0x0 PUSH2 0x26B8 JUMP JUMPDEST PUSH2 0x619 DUP4 PUSH32 0x0 PUSH2 0x26B8 JUMP JUMPDEST PUSH2 0x643 DUP2 PUSH32 0x0 PUSH2 0x26B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x85 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP10 DUP8 AND DUP6 MSTORE DUP3 MSTORE DUP1 DUP5 KECCAK256 DUP1 SLOAD SWAP7 DUP9 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP8 DUP9 AND DUP2 OR SWAP1 SWAP2 SSTORE SWAP3 DUP3 MSTORE DUP1 DUP5 KECCAK256 SWAP5 DUP5 MSTORE SWAP4 SWAP1 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF70AEDD9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x720 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x734 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x758 SWAP2 SWAP1 PUSH2 0x3B80 JUMP JUMPDEST POP SWAP3 POP SWAP3 POP POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDC20C6FA DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AC SWAP2 SWAP1 PUSH2 0x450A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7FB SWAP2 SWAP1 PUSH2 0x3E49 JUMP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA4775772 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x84C SWAP2 SWAP1 PUSH2 0x450A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x864 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x878 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x89C SWAP2 SWAP1 PUSH2 0x3986 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x84 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND PUSH2 0x8D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C SWAP1 PUSH2 0x42A2 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x928 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C SWAP1 PUSH2 0x4373 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD1D6975 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x68EB4BA8 SWAP1 PUSH2 0x99A SWAP1 PUSH32 0x0 SWAP1 DUP8 SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x4 ADD PUSH2 0x3FC8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0xB390C0AB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP3 POP PUSH4 0xB390C0AB SWAP2 POP PUSH2 0xA1C SWAP1 DUP7 SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x4 ADD PUSH2 0x4566 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA4A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA6E SWAP2 SWAP1 PUSH2 0x3E31 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xA9E SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x3EF8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xACA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAEE SWAP2 SWAP1 PUSH2 0x3E31 JUMP JUMPDEST SWAP1 POP PUSH2 0xB1A DUP3 PUSH32 0x0 PUSH2 0x26B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD9778E5 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x1B2EF1CA SWAP1 PUSH2 0xB6B SWAP1 DUP8 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x4566 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB99 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBBD SWAP2 SWAP1 PUSH2 0x3E31 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x314568D9 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x314568D9 SWAP1 PUSH2 0xC30 SWAP1 PUSH32 0x0 SWAP1 DUP6 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x3FC8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC5E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xC8B PUSH32 0x0 PUSH2 0x272F JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x84 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x85 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD46 DUP5 DUP5 PUSH2 0x4D0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF70AEDD9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDB8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDDC SWAP2 SWAP1 PUSH2 0x3B80 JUMP JUMPDEST POP SWAP3 POP SWAP3 POP POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA4775772 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE18 SWAP2 SWAP1 PUSH2 0x450A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE44 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE68 SWAP2 SWAP1 PUSH2 0x3986 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xE8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C SWAP1 PUSH2 0x443C JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xEDF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C SWAP1 PUSH2 0x4373 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD1D6975 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x68EB4BA8 SWAP1 PUSH2 0xF50 SWAP1 PUSH32 0x0 SWAP1 DUP6 SWAP1 DUP10 CALLDATALOAD SWAP1 PUSH1 0x4 ADD PUSH2 0x3FC8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF7E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0xB390C0AB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP3 POP PUSH4 0xB390C0AB SWAP2 POP PUSH2 0xFD1 SWAP1 DUP5 SWAP1 DUP9 CALLDATALOAD SWAP1 PUSH1 0x4 ADD PUSH2 0x4566 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFFF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1023 SWAP2 SWAP1 PUSH2 0x3E31 JUMP JUMPDEST POP PUSH2 0x1030 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1E1D JUMP JUMPDEST PUSH2 0xC8B PUSH32 0x0 PUSH2 0x272F JUMP JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x109D DUP5 DUP5 PUSH2 0x4D0 JUMP JUMPDEST SWAP1 POP PUSH2 0x10AB DUP5 DUP5 DUP5 DUP5 PUSH2 0x285B JUMP JUMPDEST PUSH2 0x1130 DUP2 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10DB SWAP2 SWAP1 PUSH2 0x3EF8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1107 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x112B SWAP2 SWAP1 PUSH2 0x3E31 JUMP JUMPDEST PUSH2 0x2ED1 JUMP JUMPDEST PUSH2 0x1138 PUSH2 0x2FF3 JUMP JUMPDEST PUSH2 0x1141 DUP5 PUSH2 0x272F JUMP JUMPDEST PUSH2 0x4CA DUP4 PUSH2 0x272F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1156 DUP6 DUP6 PUSH2 0x4D0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1FC8BC5D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11EB SWAP2 SWAP1 PUSH2 0x3986 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1526FE27 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1216 SWAP2 SWAP1 PUSH2 0x450A JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x122E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1242 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1266 SWAP2 SWAP1 PUSH2 0x3C41 JUMP JUMPDEST POP POP POP SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x129C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C SWAP1 PUSH2 0x4276 JUMP JUMPDEST PUSH2 0x12A8 DUP7 DUP7 DUP7 DUP6 PUSH2 0x285B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF70AEDD9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1306 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x131A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x133E SWAP2 SWAP1 PUSH2 0x3B80 JUMP JUMPDEST SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP POP DUP1 ISZERO PUSH2 0x15A2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6E10637D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xDC20C6FA SWAP1 PUSH2 0x139B SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x450A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13C6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13EA SWAP2 SWAP1 PUSH2 0x3E49 JUMP JUMPDEST POP SWAP1 POP DUP1 DUP8 EQ PUSH2 0x140C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C SWAP1 PUSH2 0x43DE JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x145D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C SWAP1 PUSH2 0x4373 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD1D6975 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x68EB4BA8 SWAP1 PUSH2 0x14CD SWAP1 PUSH32 0x0 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x3FC8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0xB390C0AB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP3 POP PUSH4 0xB390C0AB SWAP2 POP PUSH2 0x154D SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x4566 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1567 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x157B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x159F SWAP2 SWAP1 PUSH2 0x3E31 JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x15CC DUP6 PUSH32 0x0 PUSH2 0x26B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x15FB SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x3EF8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1613 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1627 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x164B SWAP2 SWAP1 PUSH2 0x3E31 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1B2EF1CA DUP10 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x169D SWAP3 SWAP2 SWAP1 PUSH2 0x4566 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16EF SWAP2 SWAP1 PUSH2 0x3E31 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x314568D9 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x314568D9 SWAP1 PUSH2 0x1762 SWAP1 PUSH32 0x0 SWAP1 DUP6 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x3FC8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x177C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1790 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x179C PUSH2 0x2FF3 JUMP JUMPDEST PUSH2 0x17A5 DUP12 PUSH2 0x272F JUMP JUMPDEST PUSH2 0x17AE DUP11 PUSH2 0x272F JUMP JUMPDEST PUSH2 0x17D7 PUSH32 0x0 PUSH2 0x272F JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x43 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x43 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x181D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C SWAP1 PUSH2 0x4089 JUMP JUMPDEST PUSH1 0x43 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x42 DUP1 SLOAD PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT AND CALLER PUSH3 0x10000 DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xD345D81CE68C70B119A17EEE79DC1421700BD9CB21CA148A62DC90983964E82F SWAP2 PUSH2 0x1879 SWAP2 PUSH2 0x3EF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x42 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x18B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C SWAP1 PUSH2 0x41E2 JUMP JUMPDEST DUP3 DUP2 EQ PUSH2 0x18D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C SWAP1 PUSH2 0x420C JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A51 JUMPI DUP3 DUP3 DUP3 DUP2 DUP2 LT PUSH2 0x18E9 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x18FE SWAP2 SWAP1 PUSH2 0x3D7D JUMP JUMPDEST ISZERO PUSH2 0x19DB JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE660CC08 DUP7 DUP7 DUP5 DUP2 DUP2 LT PUSH2 0x193E JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1953 SWAP2 SWAP1 PUSH2 0x396A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x196F SWAP2 SWAP1 PUSH2 0x3EF8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1987 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x199B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19BF SWAP2 SWAP1 PUSH2 0x3D99 JUMP JUMPDEST PUSH2 0x19DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C SWAP1 PUSH2 0x40F7 JUMP JUMPDEST DUP3 DUP3 DUP3 DUP2 DUP2 LT PUSH2 0x19E7 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x19FC SWAP2 SWAP1 PUSH2 0x3D7D JUMP JUMPDEST PUSH1 0x84 PUSH1 0x0 DUP8 DUP8 DUP6 DUP2 DUP2 LT PUSH2 0x1A0C JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1A21 SWAP2 SWAP1 PUSH2 0x396A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x18D5 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x42 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1A88 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C SWAP1 PUSH2 0x41E2 JUMP JUMPDEST PUSH1 0x43 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x964DEA888B00B2AB53F13DFE7CA334B46E99338C222AE232D98547A1DA019F60 SWAP1 PUSH2 0x1AD3 SWAP1 DUP4 SWAP1 PUSH2 0x3EF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x41 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST DUP1 ISZERO DUP1 PUSH2 0x1BBC JUMPI POP PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH2 0x1B6A SWAP1 ADDRESS SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x3F0C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B96 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BBA SWAP2 SWAP1 PUSH2 0x3E31 JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0x1BD8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C SWAP1 PUSH2 0x44B4 JUMP JUMPDEST PUSH2 0x1C2E DUP4 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1BF7 SWAP3 SWAP2 SWAP1 PUSH2 0x3FAF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x323C JUMP JUMPDEST POP POP POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1C48 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x32CB JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1E19 JUMPI PUSH1 0x0 NOT DUP2 EQ ISZERO PUSH2 0x1CF9 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF70AEDD9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CCF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CF3 SWAP2 SWAP1 PUSH2 0x3B80 JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD1D6975 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND SWAP2 PUSH4 0x68EB4BA8 SWAP2 PUSH2 0x1D6B SWAP2 PUSH32 0x0 SWAP2 DUP8 AND SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x3FC8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D99 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x2770A7EB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP3 POP PUSH4 0x9DC29FAC SWAP2 POP PUSH2 0x1DEB SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x3FAF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC8B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x84 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1E55 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C SWAP1 PUSH2 0x42A2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD7AC71FF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1EB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1EC4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EE8 SWAP2 SWAP1 PUSH2 0x3E31 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 DUP4 ADD CALLDATALOAD PUSH1 0x60 DUP5 ADD CALLDATALOAD PUSH1 0x80 DUP6 ADD CALLDATALOAD PUSH1 0x0 NOT DUP4 EQ ISZERO PUSH2 0x1FA6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x20A8BEE7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x82A2FB9C SWAP1 PUSH2 0x1F51 SWAP1 DUP8 SWAP1 DUP13 SWAP1 PUSH1 0x4 ADD PUSH2 0x4513 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F7F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FA3 SWAP2 SWAP1 PUSH2 0x3E31 JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x2053 JUMPI PUSH1 0x40 MLOAD PUSH4 0x20A8BEE7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x82A2FB9C SWAP1 PUSH2 0x1FFE SWAP1 DUP8 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x4513 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2018 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x202C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2050 SWAP2 SWAP1 PUSH2 0x3E31 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x0 NOT DUP2 EQ ISZERO PUSH2 0x2100 JUMPI PUSH1 0x40 MLOAD PUSH4 0x20A8BEE7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x82A2FB9C SWAP1 PUSH2 0x20AB SWAP1 DUP8 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x4513 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x20C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x20D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x20FD SWAP2 SWAP1 PUSH2 0x3E31 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x218C DUP8 PUSH1 0x20 ADD CALLDATALOAD DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2136 SWAP2 SWAP1 PUSH2 0x3EF8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x214E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2162 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2186 SWAP2 SWAP1 PUSH2 0x3E31 JUMP JUMPDEST SWAP1 PUSH2 0x338C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 ISZERO PUSH2 0x2247 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5D5155EF PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xBAA2ABDE SWAP1 PUSH2 0x21F0 SWAP1 DUP15 SWAP1 DUP15 SWAP1 DUP9 SWAP1 PUSH1 0x0 SWAP1 DUP2 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x4 ADD PUSH2 0x3F26 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x221D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2241 SWAP2 SWAP1 PUSH2 0x3E49 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x2257 DUP8 PUSH1 0xA0 DUP13 ADD CALLDATALOAD PUSH2 0x33B4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2269 DUP8 PUSH1 0xC0 DUP14 ADD CALLDATALOAD PUSH2 0x33B4 JUMP JUMPDEST SWAP1 POP DUP2 DUP5 LT DUP1 ISZERO PUSH2 0x2279 JUMPI POP DUP1 DUP4 GT JUMPDEST ISZERO PUSH2 0x2398 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP13 DUP15 DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x22AD JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP4 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x22C1 JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE SWAP2 DUP2 AND SWAP1 SWAP2 MSTORE PUSH32 0x0 AND PUSH4 0x8803DBEE PUSH2 0x230E DUP6 DUP9 PUSH2 0x338C JUMP JUMPDEST PUSH2 0x2318 DUP8 DUP7 PUSH2 0x338C JUMP JUMPDEST DUP5 ADDRESS TIMESTAMP PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x233B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x452A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2355 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2369 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x2391 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3CE8 JUMP JUMPDEST POP POP PUSH2 0x24C1 JUMP JUMPDEST DUP2 DUP5 GT DUP1 ISZERO PUSH2 0x23A6 JUMPI POP DUP1 DUP4 LT JUMPDEST ISZERO PUSH2 0x24C1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP14 DUP14 DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x23DA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP4 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x23EE JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE SWAP2 DUP2 AND SWAP1 SWAP2 MSTORE PUSH32 0x0 AND PUSH4 0x8803DBEE PUSH2 0x243B DUP5 DUP8 PUSH2 0x338C JUMP JUMPDEST PUSH2 0x2445 DUP9 DUP8 PUSH2 0x338C JUMP JUMPDEST DUP5 ADDRESS TIMESTAMP PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2468 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x452A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2496 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x24BE SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3CE8 JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x24CB DUP14 DUP10 PUSH2 0x33D9 JUMP JUMPDEST PUSH2 0x24D5 DUP13 DUP9 PUSH2 0x33D9 JUMP JUMPDEST PUSH2 0x24DF DUP11 DUP8 PUSH2 0x33D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0xA0 DUP13 ADD CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP16 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x2511 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x3EF8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2529 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x253D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2561 SWAP2 SWAP1 PUSH2 0x3E31 JUMP JUMPDEST LT ISZERO PUSH2 0x256C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0xC0 DUP13 ADD CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x259E SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x3EF8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x25B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x25CA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25EE SWAP2 SWAP1 PUSH2 0x3E31 JUMP JUMPDEST LT ISZERO PUSH2 0x25F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 DUP13 ADD CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x262B SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x3EF8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2643 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2657 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x267B SWAP2 SWAP1 PUSH2 0x3E31 JUMP JUMPDEST LT ISZERO PUSH2 0x2686 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x268E PUSH2 0x2FF3 JUMP JUMPDEST PUSH2 0x2697 DUP14 PUSH2 0x272F JUMP JUMPDEST PUSH2 0x26A0 DUP13 PUSH2 0x272F JUMP JUMPDEST PUSH2 0x26A9 DUP11 PUSH2 0x272F JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x41 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1E19 JUMPI PUSH2 0x26FB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP3 PUSH1 0x0 NOT PUSH2 0x1B34 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x41 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x275E SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x3EF8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2776 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x278A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x27AE SWAP2 SWAP1 PUSH2 0x3E31 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1E19 JUMPI PUSH2 0x1E19 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x630DC7CB PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2812 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2826 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x284A SWAP2 SWAP1 PUSH2 0x3986 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP4 PUSH2 0x3457 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x84 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2893 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C SWAP1 PUSH2 0x42A2 JUMP JUMPDEST PUSH2 0x289B PUSH2 0x3476 JUMP JUMPDEST PUSH2 0x28A6 DUP5 DUP4 CALLDATALOAD PUSH2 0x34ED JUMP JUMPDEST PUSH2 0x28B4 DUP4 DUP4 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x34ED JUMP JUMPDEST PUSH2 0x28C2 DUP2 DUP4 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x34ED JUMP JUMPDEST PUSH2 0x28D0 DUP5 DUP4 PUSH1 0x60 ADD CALLDATALOAD PUSH2 0x3541 JUMP JUMPDEST PUSH2 0x28DE DUP4 DUP4 PUSH1 0x80 ADD CALLDATALOAD PUSH2 0x3541 JUMP JUMPDEST PUSH2 0x28EC DUP2 DUP4 PUSH1 0xA0 ADD CALLDATALOAD PUSH2 0x3541 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x291D SWAP2 SWAP1 PUSH2 0x3EF8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2935 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2949 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x296D SWAP2 SWAP1 PUSH2 0x3E31 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x299D SWAP2 SWAP1 PUSH2 0x3EF8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x29B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x29C9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x29ED SWAP2 SWAP1 PUSH2 0x3E31 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A49 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A6D SWAP2 SWAP1 PUSH2 0x3986 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x2B03 JUMPI DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2AB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2AC9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2AED SWAP2 SWAP1 PUSH2 0x3DDD JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP2 DUP3 AND SWAP4 POP AND SWAP1 POP PUSH2 0x2B86 JUMP JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2B3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2B50 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B74 SWAP2 SWAP1 PUSH2 0x3DDD JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP1 DUP2 AND SWAP4 POP AND SWAP1 POP JUMPDEST PUSH2 0x2B92 DUP5 DUP5 DUP5 DUP5 PUSH2 0x3595 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP POP DUP5 ISZERO SWAP3 POP PUSH2 0x2CB7 SWAP2 POP POP JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP2 PUSH2 0x2BCF JUMPI DUP7 DUP7 PUSH2 0x2BD2 JUMP JUMPDEST DUP6 DUP8 JUMPDEST DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2BDF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP4 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2BF3 JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE SWAP2 DUP2 AND SWAP1 SWAP2 MSTORE PUSH1 0x40 MLOAD PUSH4 0x38ED1739 PUSH1 0xE0 SHL DUP2 MSTORE PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x38ED1739 SWAP1 PUSH2 0x2C5E SWAP1 DUP7 SWAP1 PUSH1 0x0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x4 ADD PUSH2 0x452A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2C78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2C8C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x2CB4 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3CE8 JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x2CE6 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x3EF8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2CFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D12 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2D36 SWAP2 SWAP1 PUSH2 0x3E31 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D66 SWAP2 SWAP1 PUSH2 0x3EF8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2D7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D92 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2DB6 SWAP2 SWAP1 PUSH2 0x3E31 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT DUP1 PUSH2 0x2DC7 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x2EC7 JUMPI DUP6 PUSH1 0xC0 ADD CALLDATALOAD DUP3 LT ISZERO PUSH2 0x2DF0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C SWAP1 PUSH2 0x4351 JUMP JUMPDEST DUP6 PUSH1 0xE0 ADD CALLDATALOAD DUP2 LT ISZERO PUSH2 0x2E14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C SWAP1 PUSH2 0x4067 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xE8E337 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xE8E33700 SWAP1 PUSH2 0x2E75 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0xC0 DUP15 ADD CALLDATALOAD SWAP1 PUSH1 0xE0 DUP16 ADD CALLDATALOAD SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x4 ADD PUSH2 0x3F66 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2E8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2EA3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17D7 SWAP2 SWAP1 PUSH2 0x3E6C JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1E19 JUMPI PUSH2 0x2F01 DUP3 PUSH32 0x0 PUSH2 0x26B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH2 0x2F4F SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x3FAF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2F69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2F7D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x314568D9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND SWAP4 POP PUSH4 0x314568D9 SWAP3 POP PUSH2 0x1DEB SWAP2 PUSH32 0x0 SWAP2 DUP8 AND SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x3FC8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x3042 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x3EF8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x305C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3070 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3094 SWAP2 SWAP1 PUSH2 0x3E31 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x3239 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x2E1A7D4D SWAP1 PUSH2 0x30E8 SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x450A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3102 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3116 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x630DC7CB PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3175 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3189 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x31AD SWAP2 SWAP1 PUSH2 0x3986 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 DUP5 SWAP2 PUSH2 0x31D6 SWAP2 SWAP1 PUSH2 0x3EDC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3213 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3218 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1E19 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C SWAP1 PUSH2 0x403C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3291 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1C39 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1C2E JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x32AF SWAP2 SWAP1 PUSH2 0x3D99 JUMP JUMPDEST PUSH2 0x1C2E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C SWAP1 PUSH2 0x446A JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x32ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C SWAP1 PUSH2 0x4165 JUMP JUMPDEST PUSH2 0x32F6 DUP6 PUSH2 0x1C33 JUMP JUMPDEST PUSH2 0x3312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C SWAP1 PUSH2 0x4405 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x332F SWAP2 SWAP1 PUSH2 0x3EDC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x336C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3371 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x3381 DUP3 DUP3 DUP7 PUSH2 0x35E4 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x33AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C SWAP1 PUSH2 0x412E JUMP JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x697 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C SWAP1 PUSH2 0x40C0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1E19 JUMPI PUSH2 0x3409 DUP3 PUSH32 0x0 PUSH2 0x26B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x450CFAF PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x22867D78 SWAP1 PUSH2 0x1DEB SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x3FAF JUMP JUMPDEST PUSH2 0x1C2E DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1BF7 SWAP3 SWAP2 SWAP1 PUSH2 0x3FAF JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x34EB JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD0E30DB0 CALLVALUE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x34D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A51 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1E19 JUMPI PUSH1 0x40 MLOAD PUSH4 0x246B5DE1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x48D6BBC2 SWAP1 PUSH2 0x1DEB SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x3FAF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1E19 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B8A3529 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x4B8A3529 SWAP1 PUSH2 0x1DEB SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x3FAF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x35A2 DUP6 DUP6 PUSH2 0x361D JUMP JUMPDEST PUSH2 0x35AC DUP8 DUP6 PUSH2 0x361D JUMP JUMPDEST LT PUSH2 0x35C8 JUMPI PUSH2 0x35BD DUP7 DUP7 DUP7 DUP7 PUSH2 0x3657 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 SWAP1 POP PUSH2 0x35DB JUMP JUMPDEST PUSH2 0x35D4 DUP6 DUP8 DUP6 DUP8 PUSH2 0x3657 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x35F3 JUMPI POP DUP2 PUSH2 0x1C4B JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x3603 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x4009 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x362C JUMPI POP PUSH1 0x0 PUSH2 0x69A JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x3639 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x697 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C SWAP1 PUSH2 0x4310 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3663 DUP5 DUP5 PUSH2 0x361D JUMP JUMPDEST PUSH2 0x366D DUP7 DUP5 PUSH2 0x361D JUMP JUMPDEST LT ISZERO PUSH2 0x368B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C SWAP1 PUSH2 0x43BC JUMP JUMPDEST PUSH2 0x3E5 PUSH1 0x0 PUSH2 0x369C PUSH2 0x7CD DUP7 PUSH2 0x361D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x36B7 PUSH2 0x36AD DUP9 DUP9 PUSH2 0x361D JUMP JUMPDEST PUSH2 0x2186 DUP11 DUP9 PUSH2 0x361D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x36E4 DUP8 PUSH2 0x36DE PUSH2 0x36CC DUP12 DUP11 PUSH2 0x33B4 JUMP JUMPDEST PUSH2 0x36D8 DUP7 PUSH2 0x3E8 PUSH2 0x361D JUMP JUMPDEST SWAP1 PUSH2 0x3751 JUMP JUMPDEST SWAP1 PUSH2 0x361D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x36F7 PUSH1 0x4 PUSH2 0x36DE DUP8 DUP6 PUSH2 0x361D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3717 PUSH2 0x3712 DUP4 PUSH2 0x370C DUP9 DUP1 PUSH2 0x361D JUMP JUMPDEST SWAP1 PUSH2 0x33B4 JUMP JUMPDEST PUSH2 0x3783 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3725 DUP3 DUP8 PUSH2 0x338C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3734 DUP9 PUSH1 0x2 PUSH2 0x361D JUMP JUMPDEST SWAP1 POP PUSH2 0x3740 DUP3 DUP3 PUSH2 0x3751 JUMP JUMPDEST SWAP14 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x3772 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C SWAP1 PUSH2 0x41AB JUMP JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x377B JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x3792 JUMPI POP PUSH1 0x0 PUSH2 0x467 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL DUP3 LT PUSH2 0x37AB JUMPI PUSH1 0x80 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x40 SHL JUMPDEST PUSH9 0x10000000000000000 DUP3 LT PUSH2 0x37C6 JUMPI PUSH1 0x40 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x20 SHL JUMPDEST PUSH5 0x100000000 DUP3 LT PUSH2 0x37DD JUMPI PUSH1 0x20 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x10 SHL JUMPDEST PUSH3 0x10000 DUP3 LT PUSH2 0x37F2 JUMPI PUSH1 0x10 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x8 SHL JUMPDEST PUSH2 0x100 DUP3 LT PUSH2 0x3806 JUMPI PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x4 SHL JUMPDEST PUSH1 0x10 DUP3 LT PUSH2 0x3819 JUMPI PUSH1 0x4 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x2 SHL JUMPDEST PUSH1 0x8 DUP3 LT PUSH2 0x3825 JUMPI PUSH1 0x1 SHL JUMPDEST PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x3830 JUMPI INVALID JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x3842 JUMPI INVALID JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x3854 JUMPI INVALID JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x3866 JUMPI INVALID JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x3878 JUMPI INVALID JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x388A JUMPI INVALID JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x389C JUMPI INVALID JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x0 DUP2 DUP6 DUP2 PUSH2 0x38AE JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 DUP3 LT PUSH2 0x38BE JUMPI DUP1 PUSH2 0x38C0 JUMP JUMPDEST DUP2 JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x38DA JUMPI DUP2 DUP3 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x38F1 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP1 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x390B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x3923 JUMPI DUP2 DUP3 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x393A JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x390B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3964 JUMPI DUP1 DUP2 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x397B JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x697 DUP2 PUSH2 0x45E7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3997 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x697 DUP2 PUSH2 0x45E7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x39B4 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x39BF DUP2 PUSH2 0x45E7 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x39CF DUP2 PUSH2 0x45E7 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x39F5 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH2 0x3A00 DUP2 PUSH2 0x45E7 JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD PUSH2 0x3A10 DUP2 PUSH2 0x45E7 JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3A2C JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH2 0x3A38 DUP13 DUP4 DUP14 ADD PUSH2 0x38C9 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x60 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x3A50 JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH2 0x3A5C DUP13 DUP4 DUP14 ADD PUSH2 0x38C9 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x80 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x3A74 JUMPI DUP4 DUP5 REVERT JUMPDEST POP PUSH2 0x3A81 DUP12 DUP3 DUP13 ADD PUSH2 0x3912 JUMP JUMPDEST SWAP10 SWAP13 SWAP9 SWAP12 POP SWAP7 SWAP10 POP SWAP5 SWAP8 SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x140 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3AAA JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x3AB5 DUP2 PUSH2 0x45E7 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x3AC5 DUP2 PUSH2 0x45E7 JUMP JUMPDEST SWAP2 POP PUSH2 0x3AD4 DUP6 PUSH1 0x40 DUP7 ADD PUSH2 0x3952 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x160 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3AF3 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x3AFE DUP2 PUSH2 0x45E7 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x3B0E DUP2 PUSH2 0x45E7 JUMP JUMPDEST SWAP3 POP PUSH2 0x3B1D DUP7 PUSH1 0x40 DUP8 ADD PUSH2 0x3952 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH2 0x140 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP6 SUB PUSH2 0x120 DUP2 SLT ISZERO PUSH2 0x3B44 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x3B4F DUP2 PUSH2 0x45E7 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x3B5F DUP2 PUSH2 0x45E7 JUMP JUMPDEST SWAP3 POP PUSH1 0xE0 PUSH1 0x3F NOT DUP3 ADD SLT ISZERO PUSH2 0x3B72 JUMPI DUP2 DUP3 REVERT JUMPDEST POP PUSH1 0x40 DUP5 ADD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3B95 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 MLOAD PUSH2 0x3BA0 DUP2 PUSH2 0x45E7 JUMP JUMPDEST PUSH1 0x20 DUP7 ADD MLOAD SWAP1 SWAP5 POP PUSH2 0x3BB1 DUP2 PUSH2 0x45E7 JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD PUSH1 0x60 SWAP1 SWAP7 ADD MLOAD SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x3BDF JUMPI DUP4 DUP5 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x3BEA DUP2 PUSH2 0x45E7 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0x3BFA DUP2 PUSH2 0x45E7 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3C23 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x3C2F DUP10 DUP3 DUP11 ADD PUSH2 0x3912 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3C56 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 MLOAD PUSH2 0x3C61 DUP2 PUSH2 0x45E7 JUMP JUMPDEST PUSH1 0x20 DUP7 ADD MLOAD PUSH1 0x40 DUP8 ADD MLOAD PUSH1 0x60 SWAP1 SWAP8 ADD MLOAD SWAP2 SWAP9 SWAP1 SWAP8 POP SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3C94 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3CAB JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x3CB7 DUP9 DUP4 DUP10 ADD PUSH2 0x38C9 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x3CCF JUMPI DUP4 DUP5 REVERT JUMPDEST POP PUSH2 0x3CDC DUP8 DUP3 DUP9 ADD PUSH2 0x38C9 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3CFA JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D10 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x3D20 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x3D33 PUSH2 0x3D2E DUP3 PUSH2 0x459B JUMP JUMPDEST PUSH2 0x4574 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP4 DUP2 ADD SWAP1 DUP4 DUP6 ADD DUP6 DUP5 MUL DUP6 ADD DUP7 ADD DUP10 LT ISZERO PUSH2 0x3D4F JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP5 POP JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x3D71 JUMPI DUP1 MLOAD DUP4 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP2 DUP6 ADD SWAP2 DUP6 ADD PUSH2 0x3D53 JUMP JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3D8E JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x697 DUP2 PUSH2 0x45FC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3DAA JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x697 DUP2 PUSH2 0x45FC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3DC6 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x697 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3DF1 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 MLOAD PUSH2 0x3DFC DUP2 PUSH2 0x460A JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP PUSH2 0x3E0D DUP2 PUSH2 0x460A JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD SWAP1 SWAP3 POP PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x3E26 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E42 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3E5B JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3E80 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 MLOAD SWAP3 POP PUSH1 0x20 DUP5 ADD MLOAD SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3ED1 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3EAC JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3EEE DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x45BB JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND DUP2 MSTORE SWAP6 DUP8 AND PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x60 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x80 DUP5 ADD MSTORE SWAP1 SWAP3 AND PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xE0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP9 DUP10 AND DUP2 MSTORE SWAP7 DUP9 AND PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x40 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x60 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x80 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 DUP5 ADD MSTORE SWAP1 SWAP3 AND PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x100 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x4028 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x45BB JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x1C99599D5B99081155120819985A5B1959 PUSH1 0x7A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x8 SWAP1 DUP3 ADD MSTORE PUSH8 0x10B0B6BA2126B4B7 PUSH1 0xC1 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x6E6F74207468652070656E64696E6720676F7665726E6F720000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x6F7261636C65206E6F7420737570706F7274206C7020746F6B656E0000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x3737BA103A34329033B7BB32B93737B9 PUSH1 0x81 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x6C70546F6B656E732026207374617475736573206C656E677468206D69736D61 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x1D18DA1959 PUSH1 0xDA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH11 0x3737903638103A37B5B2B7 PUSH1 0xA9 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x34B731B7B93932B1BA103638103A37B5B2B7 PUSH1 0x71 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x6C7020746F6B656E206E6F742077686974656C69737465640000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x455448206D75737420636F6D652066726F6D2057455448000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x8 SWAP1 DUP3 ADD MSTORE PUSH8 0x10B0B6BA20A6B4B7 PUSH1 0xC1 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x636F6C6C61746572616C20746F6B656E202620776D617374657263686566206D PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x1A5CDB585D18DA1959 PUSH1 0xBA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x8 SWAP1 DUP3 ADD MSTORE PUSH8 0x14995D995C9CD959 PUSH1 0xC2 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x1A5B98DBDC9C9958DD081C1A59 PUSH1 0x9A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x696E636F727265637420756E6465726C79696E67 PUSH1 0x60 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x36 SWAP1 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F PUSH1 0x40 DUP3 ADD MSTORE PUSH22 0x20746F206E6F6E2D7A65726F20616C6C6F77616E6365 PUSH1 0x50 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP3 MSTORE DUP6 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x4549 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x3E99 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x4593 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x45B1 JUMPI DUP1 DUP2 REVERT JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x45D6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x45BE JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x4CA JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3239 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x3239 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3239 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH DUP11 0xD9 0xC 0x1F 0xE4 0x5E ADD 0xDA SWAP2 0xD6 0xE PUSH28 0x7DCD4DDFA21AE0E615518B4CCE1C714BA3F8D164736F6C634300060C STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        513,
        13366
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "5": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "CALLDATASIZE",
      "path": "66"
    },
    "8": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "LT",
      "path": "66"
    },
    "9": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x14F"
    },
    "12": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "13": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "CALLDATALOAD",
      "path": "66"
    },
    "16": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "SHR",
      "path": "66"
    },
    "19": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "DUP1",
      "path": "66"
    },
    "20": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0x95723B1C"
    },
    "25": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "GT",
      "path": "66"
    },
    "26": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0xB6"
    },
    "29": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "30": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "DUP1",
      "path": "66"
    },
    "31": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0xE58BB639"
    },
    "36": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "GT",
      "path": "66"
    },
    "37": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x6F"
    },
    "40": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "41": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "DUP1",
      "path": "66"
    },
    "42": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0xE58BB639"
    },
    "47": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "EQ",
      "path": "66"
    },
    "48": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x39F"
    },
    "51": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "52": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "DUP1",
      "path": "66"
    },
    "53": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0xEE42C6F4"
    },
    "58": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "EQ",
      "path": "66"
    },
    "59": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3B4"
    },
    "62": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "63": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "DUP1",
      "path": "66"
    },
    "64": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0xF235757F"
    },
    "69": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "EQ",
      "path": "66"
    },
    "70": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3D4"
    },
    "73": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "74": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "DUP1",
      "path": "66"
    },
    "75": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0xF23A6E61"
    },
    "80": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "EQ",
      "path": "66"
    },
    "81": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3F4"
    },
    "84": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "85": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "DUP1",
      "path": "66"
    },
    "86": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0xF4B16045"
    },
    "91": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "EQ",
      "path": "66"
    },
    "92": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x414"
    },
    "95": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "96": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "DUP1",
      "path": "66"
    },
    "97": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0xF887EA40"
    },
    "102": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "EQ",
      "path": "66"
    },
    "103": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x434"
    },
    "106": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "107": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x1A7"
    },
    "110": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "JUMP",
      "path": "66"
    },
    "111": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "112": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "DUP1",
      "path": "66"
    },
    "113": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0x95723B1C"
    },
    "118": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "EQ",
      "path": "66"
    },
    "119": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x302"
    },
    "122": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "123": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "DUP1",
      "path": "66"
    },
    "124": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0xBC197C81"
    },
    "129": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "EQ",
      "path": "66"
    },
    "130": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x322"
    },
    "133": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "134": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "DUP1",
      "path": "66"
    },
    "135": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0xC45A0155"
    },
    "140": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "EQ",
      "path": "66"
    },
    "141": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x34F"
    },
    "144": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "145": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "DUP1",
      "path": "66"
    },
    "146": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0xCC9B1880"
    },
    "151": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "EQ",
      "path": "66"
    },
    "152": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x364"
    },
    "155": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "156": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "DUP1",
      "path": "66"
    },
    "157": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0xE07D904E"
    },
    "162": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "EQ",
      "path": "66"
    },
    "163": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x377"
    },
    "166": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "167": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "DUP1",
      "path": "66"
    },
    "168": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0xE3056A34"
    },
    "173": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "EQ",
      "path": "66"
    },
    "174": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x38A"
    },
    "177": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "178": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x1A7"
    },
    "181": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "JUMP",
      "path": "66"
    },
    "182": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "183": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "DUP1",
      "path": "66"
    },
    "184": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0x40A65AD2"
    },
    "189": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "GT",
      "path": "66"
    },
    "190": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x108"
    },
    "193": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "194": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "DUP1",
      "path": "66"
    },
    "195": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0x40A65AD2"
    },
    "200": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "EQ",
      "path": "66"
    },
    "201": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x26E"
    },
    "204": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "205": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "DUP1",
      "path": "66"
    },
    "206": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0x4BAB09F6"
    },
    "211": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "EQ",
      "path": "66"
    },
    "212": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x283"
    },
    "215": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "216": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "DUP1",
      "path": "66"
    },
    "217": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0x5741229C"
    },
    "222": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "EQ",
      "path": "66"
    },
    "223": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2A3"
    },
    "226": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "227": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "DUP1",
      "path": "66"
    },
    "228": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0x69454B86"
    },
    "233": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "EQ",
      "path": "66"
    },
    "234": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2B8"
    },
    "237": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "238": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "DUP1",
      "path": "66"
    },
    "239": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0x76CDB03B"
    },
    "244": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "EQ",
      "path": "66"
    },
    "245": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2D8"
    },
    "248": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "249": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "DUP1",
      "path": "66"
    },
    "250": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0x86ADCC79"
    },
    "255": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "EQ",
      "path": "66"
    },
    "256": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2ED"
    },
    "259": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "260": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x1A7"
    },
    "263": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "JUMP",
      "path": "66"
    },
    "264": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "265": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "DUP1",
      "path": "66"
    },
    "266": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0x1FFC9A7"
    },
    "271": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "EQ",
      "path": "66"
    },
    "272": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x1AC"
    },
    "275": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "276": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "DUP1",
      "path": "66"
    },
    "277": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0xA087903"
    },
    "282": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "EQ",
      "path": "66"
    },
    "283": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x1E2"
    },
    "286": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "287": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "DUP1",
      "path": "66"
    },
    "288": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0xC340A24"
    },
    "293": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "EQ",
      "path": "66"
    },
    "294": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x204"
    },
    "297": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "298": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "DUP1",
      "path": "66"
    },
    "299": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0x1387D96D"
    },
    "304": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "EQ",
      "path": "66"
    },
    "305": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x219"
    },
    "308": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "309": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "DUP1",
      "path": "66"
    },
    "310": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0x2185059F"
    },
    "315": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "EQ",
      "path": "66"
    },
    "316": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x239"
    },
    "319": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "320": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "DUP1",
      "path": "66"
    },
    "321": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0x3FC8CEF3"
    },
    "326": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "EQ",
      "path": "66"
    },
    "327": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x259"
    },
    "330": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "331": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x1A7"
    },
    "334": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "JUMP",
      "path": "66"
    },
    "335": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "336": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "CALLDATASIZE",
      "path": "66"
    },
    "337": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x1A7"
    },
    "340": {
      "fn": null,
      "offset": [
        513,
        13366
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "341": {
      "fn": "BasicSpell.<receive>",
      "offset": [
        4438,
        4448
      ],
      "op": "CALLER",
      "path": "63",
      "statement": 0
    },
    "342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "346": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "348": {
      "op": "SHL"
    },
    "349": {
      "op": "SUB"
    },
    "350": {
      "fn": "BasicSpell.<receive>",
      "offset": [
        4452,
        4456
      ],
      "op": "PUSH32",
      "path": "63",
      "value": "0x0"
    },
    "383": {
      "fn": "BasicSpell.<receive>",
      "offset": [
        4438,
        4456
      ],
      "op": "AND",
      "path": "63"
    },
    "384": {
      "branch": 185,
      "fn": "BasicSpell.<receive>",
      "offset": [
        4438,
        4456
      ],
      "op": "EQ",
      "path": "63"
    },
    "385": {
      "fn": "BasicSpell.<receive>",
      "offset": [
        4430,
        4484
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1A5"
    },
    "388": {
      "branch": 185,
      "fn": "BasicSpell.<receive>",
      "offset": [
        4430,
        4484
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "389": {
      "fn": "BasicSpell.<receive>",
      "offset": [
        4430,
        4484
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "391": {
      "fn": "BasicSpell.<receive>",
      "offset": [
        4430,
        4484
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "392": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "396": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "398": {
      "op": "SHL"
    },
    "399": {
      "fn": "BasicSpell.<receive>",
      "offset": [
        4430,
        4484
      ],
      "op": "DUP2",
      "path": "63"
    },
    "400": {
      "fn": "BasicSpell.<receive>",
      "offset": [
        4430,
        4484
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "401": {
      "fn": "BasicSpell.<receive>",
      "offset": [
        4430,
        4484
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "403": {
      "fn": "BasicSpell.<receive>",
      "offset": [
        4430,
        4484
      ],
      "op": "ADD",
      "path": "63"
    },
    "404": {
      "fn": "BasicSpell.<receive>",
      "offset": [
        4430,
        4484
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x19C"
    },
    "407": {
      "fn": "BasicSpell.<receive>",
      "offset": [
        4430,
        4484
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "408": {
      "fn": "BasicSpell.<receive>",
      "offset": [
        4430,
        4484
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x42D9"
    },
    "411": {
      "fn": "BasicSpell.<receive>",
      "jump": "i",
      "offset": [
        4430,
        4484
      ],
      "op": "JUMP",
      "path": "63"
    },
    "412": {
      "fn": "BasicSpell.<receive>",
      "offset": [
        4430,
        4484
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "413": {
      "fn": "BasicSpell.<receive>",
      "offset": [
        4430,
        4484
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "415": {
      "fn": "BasicSpell.<receive>",
      "offset": [
        4430,
        4484
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "416": {
      "fn": "BasicSpell.<receive>",
      "offset": [
        4430,
        4484
      ],
      "op": "DUP1",
      "path": "63"
    },
    "417": {
      "fn": "BasicSpell.<receive>",
      "offset": [
        4430,
        4484
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "418": {
      "fn": "BasicSpell.<receive>",
      "offset": [
        4430,
        4484
      ],
      "op": "SUB",
      "path": "63"
    },
    "419": {
      "fn": "BasicSpell.<receive>",
      "offset": [
        4430,
        4484
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "420": {
      "fn": "BasicSpell.<receive>",
      "offset": [
        4430,
        4484
      ],
      "op": "REVERT",
      "path": "63"
    },
    "421": {
      "fn": "BasicSpell.<receive>",
      "offset": [
        4430,
        4484
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "422": {
      "offset": [
        513,
        13366
      ],
      "op": "STOP",
      "path": "66"
    },
    "423": {
      "fn": "BasicSpell.<receive>",
      "offset": [
        513,
        13366
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "424": {
      "fn": "BasicSpell.<receive>",
      "offset": [
        513,
        13366
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "426": {
      "fn": "BasicSpell.<receive>",
      "offset": [
        513,
        13366
      ],
      "op": "DUP1",
      "path": "66"
    },
    "427": {
      "first_revert": true,
      "fn": "BasicSpell.<receive>",
      "offset": [
        513,
        13366
      ],
      "op": "REVERT",
      "path": "66"
    },
    "428": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "429": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "430": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "DUP1",
      "path": "4"
    },
    "431": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "432": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1B8"
    },
    "435": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "436": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "438": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "DUP1",
      "path": "4"
    },
    "439": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "REVERT",
      "path": "4"
    },
    "440": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "441": {
      "op": "POP"
    },
    "442": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1CC"
    },
    "445": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1C7"
    },
    "448": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "449": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "451": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3DB5"
    },
    "454": {
      "fn": "ERC165.supportsInterface",
      "jump": "i",
      "offset": [
        965,
        1113
      ],
      "op": "JUMP",
      "path": "4"
    },
    "455": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "456": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x449"
    },
    "459": {
      "fn": "ERC165.supportsInterface",
      "jump": "i",
      "offset": [
        965,
        1113
      ],
      "op": "JUMP",
      "path": "4"
    },
    "460": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "461": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "463": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "464": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D9"
    },
    "467": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "468": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "469": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3FE9"
    },
    "472": {
      "fn": "ERC165.supportsInterface",
      "jump": "i",
      "offset": [
        965,
        1113
      ],
      "op": "JUMP",
      "path": "4"
    },
    "473": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "474": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "476": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "477": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "DUP1",
      "path": "4"
    },
    "478": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "479": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "SUB",
      "path": "4"
    },
    "480": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "481": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "RETURN",
      "path": "4"
    },
    "482": {
      "offset": [
        945,
        975
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "483": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        945,
        975
      ],
      "op": "CALLVALUE",
      "path": "66"
    },
    "484": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        945,
        975
      ],
      "op": "DUP1",
      "path": "66"
    },
    "485": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        945,
        975
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "486": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        945,
        975
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x1EE"
    },
    "489": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        945,
        975
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "490": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        945,
        975
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "492": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        945,
        975
      ],
      "op": "DUP1",
      "path": "66"
    },
    "493": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        945,
        975
      ],
      "op": "REVERT",
      "path": "66"
    },
    "494": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        945,
        975
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "495": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        945,
        975
      ],
      "op": "POP",
      "path": "66"
    },
    "496": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        945,
        975
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x1F7"
    },
    "499": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        945,
        975
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x46C"
    },
    "502": {
      "fn": "ERC165.supportsInterface",
      "jump": "i",
      "offset": [
        945,
        975
      ],
      "op": "JUMP",
      "path": "66"
    },
    "503": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        945,
        975
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "504": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        945,
        975
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "506": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        945,
        975
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "507": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        945,
        975
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x1D9"
    },
    "510": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        945,
        975
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "511": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        945,
        975
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "512": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        945,
        975
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3EF8"
    },
    "515": {
      "fn": "ERC165.supportsInterface",
      "jump": "i",
      "offset": [
        945,
        975
      ],
      "op": "JUMP",
      "path": "66"
    },
    "516": {
      "offset": [
        321,
        344
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "517": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        321,
        344
      ],
      "op": "CALLVALUE",
      "path": "24"
    },
    "518": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        321,
        344
      ],
      "op": "DUP1",
      "path": "24"
    },
    "519": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        321,
        344
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "520": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        321,
        344
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x210"
    },
    "523": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        321,
        344
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "524": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        321,
        344
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "526": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        321,
        344
      ],
      "op": "DUP1",
      "path": "24"
    },
    "527": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        321,
        344
      ],
      "op": "REVERT",
      "path": "24"
    },
    "528": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        321,
        344
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "529": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        321,
        344
      ],
      "op": "POP",
      "path": "24"
    },
    "530": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        321,
        344
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1F7"
    },
    "533": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        321,
        344
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x490"
    },
    "536": {
      "fn": "ERC165.supportsInterface",
      "jump": "i",
      "offset": [
        321,
        344
      ],
      "op": "JUMP",
      "path": "24"
    },
    "537": {
      "fn": "SushiswapSpellV1.removeLiquidityWERC20",
      "offset": [
        11225,
        11553
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "538": {
      "fn": "SushiswapSpellV1.removeLiquidityWERC20",
      "offset": [
        11225,
        11553
      ],
      "op": "CALLVALUE",
      "path": "66"
    },
    "539": {
      "fn": "SushiswapSpellV1.removeLiquidityWERC20",
      "offset": [
        11225,
        11553
      ],
      "op": "DUP1",
      "path": "66"
    },
    "540": {
      "fn": "SushiswapSpellV1.removeLiquidityWERC20",
      "offset": [
        11225,
        11553
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "541": {
      "fn": "SushiswapSpellV1.removeLiquidityWERC20",
      "offset": [
        11225,
        11553
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x225"
    },
    "544": {
      "fn": "SushiswapSpellV1.removeLiquidityWERC20",
      "offset": [
        11225,
        11553
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "545": {
      "fn": "SushiswapSpellV1.removeLiquidityWERC20",
      "offset": [
        11225,
        11553
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "547": {
      "fn": "SushiswapSpellV1.removeLiquidityWERC20",
      "offset": [
        11225,
        11553
      ],
      "op": "DUP1",
      "path": "66"
    },
    "548": {
      "fn": "SushiswapSpellV1.removeLiquidityWERC20",
      "offset": [
        11225,
        11553
      ],
      "op": "REVERT",
      "path": "66"
    },
    "549": {
      "fn": "SushiswapSpellV1.removeLiquidityWERC20",
      "offset": [
        11225,
        11553
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "550": {
      "op": "POP"
    },
    "551": {
      "fn": "SushiswapSpellV1.removeLiquidityWERC20",
      "offset": [
        11225,
        11553
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x1A5"
    },
    "554": {
      "fn": "SushiswapSpellV1.removeLiquidityWERC20",
      "offset": [
        11225,
        11553
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x234"
    },
    "557": {
      "fn": "SushiswapSpellV1.removeLiquidityWERC20",
      "offset": [
        11225,
        11553
      ],
      "op": "CALLDATASIZE",
      "path": "66"
    },
    "558": {
      "fn": "SushiswapSpellV1.removeLiquidityWERC20",
      "offset": [
        11225,
        11553
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "560": {
      "fn": "SushiswapSpellV1.removeLiquidityWERC20",
      "offset": [
        11225,
        11553
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3B2E"
    },
    "563": {
      "fn": "SushiswapSpellV1.removeLiquidityWERC20",
      "jump": "i",
      "offset": [
        11225,
        11553
      ],
      "op": "JUMP",
      "path": "66"
    },
    "564": {
      "fn": "SushiswapSpellV1.removeLiquidityWERC20",
      "offset": [
        11225,
        11553
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "565": {
      "fn": "SushiswapSpellV1.removeLiquidityWERC20",
      "offset": [
        11225,
        11553
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x4A5"
    },
    "568": {
      "fn": "SushiswapSpellV1.removeLiquidityWERC20",
      "jump": "i",
      "offset": [
        11225,
        11553
      ],
      "op": "JUMP",
      "path": "66"
    },
    "569": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1588,
        2060
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "570": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1588,
        2060
      ],
      "op": "CALLVALUE",
      "path": "66"
    },
    "571": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1588,
        2060
      ],
      "op": "DUP1",
      "path": "66"
    },
    "572": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1588,
        2060
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "573": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1588,
        2060
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x245"
    },
    "576": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1588,
        2060
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "577": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1588,
        2060
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "579": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1588,
        2060
      ],
      "op": "DUP1",
      "path": "66"
    },
    "580": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1588,
        2060
      ],
      "op": "REVERT",
      "path": "66"
    },
    "581": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1588,
        2060
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "582": {
      "op": "POP"
    },
    "583": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1588,
        2060
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x1F7"
    },
    "586": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1588,
        2060
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x254"
    },
    "589": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1588,
        2060
      ],
      "op": "CALLDATASIZE",
      "path": "66"
    },
    "590": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1588,
        2060
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "592": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1588,
        2060
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x39A2"
    },
    "595": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "jump": "i",
      "offset": [
        1588,
        2060
      ],
      "op": "JUMP",
      "path": "66"
    },
    "596": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1588,
        2060
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "597": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1588,
        2060
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x4D0"
    },
    "600": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "jump": "i",
      "offset": [
        1588,
        2060
      ],
      "op": "JUMP",
      "path": "66"
    },
    "601": {
      "offset": [
        544,
        573
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "602": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        544,
        573
      ],
      "op": "CALLVALUE",
      "path": "63"
    },
    "603": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        544,
        573
      ],
      "op": "DUP1",
      "path": "63"
    },
    "604": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        544,
        573
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "605": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        544,
        573
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x265"
    },
    "608": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        544,
        573
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "609": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        544,
        573
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "611": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        544,
        573
      ],
      "op": "DUP1",
      "path": "63"
    },
    "612": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        544,
        573
      ],
      "op": "REVERT",
      "path": "63"
    },
    "613": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        544,
        573
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "614": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        544,
        573
      ],
      "op": "POP",
      "path": "63"
    },
    "615": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        544,
        573
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1F7"
    },
    "618": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        544,
        573
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x6A0"
    },
    "621": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "jump": "i",
      "offset": [
        544,
        573
      ],
      "op": "JUMP",
      "path": "63"
    },
    "622": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12571,
        13364
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "623": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12571,
        13364
      ],
      "op": "CALLVALUE",
      "path": "66"
    },
    "624": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12571,
        13364
      ],
      "op": "DUP1",
      "path": "66"
    },
    "625": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12571,
        13364
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "626": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12571,
        13364
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x27A"
    },
    "629": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12571,
        13364
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "630": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12571,
        13364
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "632": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12571,
        13364
      ],
      "op": "DUP1",
      "path": "66"
    },
    "633": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12571,
        13364
      ],
      "op": "REVERT",
      "path": "66"
    },
    "634": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12571,
        13364
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "635": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12571,
        13364
      ],
      "op": "POP",
      "path": "66"
    },
    "636": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12571,
        13364
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x1A5"
    },
    "639": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12571,
        13364
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x6C4"
    },
    "642": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "jump": "i",
      "offset": [
        12571,
        13364
      ],
      "op": "JUMP",
      "path": "66"
    },
    "643": {
      "offset": [
        168,
        219
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "644": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        168,
        219
      ],
      "op": "CALLVALUE",
      "path": "68"
    },
    "645": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        168,
        219
      ],
      "op": "DUP1",
      "path": "68"
    },
    "646": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        168,
        219
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "647": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        168,
        219
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x28F"
    },
    "650": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        168,
        219
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "651": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        168,
        219
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "653": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        168,
        219
      ],
      "op": "DUP1",
      "path": "68"
    },
    "654": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        168,
        219
      ],
      "op": "REVERT",
      "path": "68"
    },
    "655": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        168,
        219
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "656": {
      "op": "POP"
    },
    "657": {
      "offset": [
        168,
        219
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1CC"
    },
    "660": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        168,
        219
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x29E"
    },
    "663": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        168,
        219
      ],
      "op": "CALLDATASIZE",
      "path": "68"
    },
    "664": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        168,
        219
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "666": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        168,
        219
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x396A"
    },
    "669": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "jump": "i",
      "offset": [
        168,
        219
      ],
      "op": "JUMP",
      "path": "68"
    },
    "670": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        168,
        219
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "671": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        168,
        219
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xC93"
    },
    "674": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "jump": "i",
      "offset": [
        168,
        219
      ],
      "op": "JUMP",
      "path": "68"
    },
    "675": {
      "offset": [
        509,
        540
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "676": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        509,
        540
      ],
      "op": "CALLVALUE",
      "path": "63"
    },
    "677": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        509,
        540
      ],
      "op": "DUP1",
      "path": "63"
    },
    "678": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        509,
        540
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "679": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        509,
        540
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x2AF"
    },
    "682": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        509,
        540
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "683": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        509,
        540
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "685": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        509,
        540
      ],
      "op": "DUP1",
      "path": "63"
    },
    "686": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        509,
        540
      ],
      "op": "REVERT",
      "path": "63"
    },
    "687": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        509,
        540
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "688": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        509,
        540
      ],
      "op": "POP",
      "path": "63"
    },
    "689": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        509,
        540
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1F7"
    },
    "692": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        509,
        540
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0xCA8"
    },
    "695": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "jump": "i",
      "offset": [
        509,
        540
      ],
      "op": "JUMP",
      "path": "63"
    },
    "696": {
      "offset": [
        752,
        812
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "697": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        752,
        812
      ],
      "op": "CALLVALUE",
      "path": "66"
    },
    "698": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        752,
        812
      ],
      "op": "DUP1",
      "path": "66"
    },
    "699": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        752,
        812
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "700": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        752,
        812
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2C4"
    },
    "703": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        752,
        812
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "704": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        752,
        812
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "706": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        752,
        812
      ],
      "op": "DUP1",
      "path": "66"
    },
    "707": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        752,
        812
      ],
      "op": "REVERT",
      "path": "66"
    },
    "708": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        752,
        812
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "709": {
      "op": "POP"
    },
    "710": {
      "offset": [
        752,
        812
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x1F7"
    },
    "713": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        752,
        812
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2D3"
    },
    "716": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        752,
        812
      ],
      "op": "CALLDATASIZE",
      "path": "66"
    },
    "717": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        752,
        812
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "719": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        752,
        812
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x39A2"
    },
    "722": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "jump": "i",
      "offset": [
        752,
        812
      ],
      "op": "JUMP",
      "path": "66"
    },
    "723": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        752,
        812
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "724": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        752,
        812
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0xCCC"
    },
    "727": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "jump": "i",
      "offset": [
        752,
        812
      ],
      "op": "JUMP",
      "path": "66"
    },
    "728": {
      "offset": [
        478,
        505
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "729": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        478,
        505
      ],
      "op": "CALLVALUE",
      "path": "63"
    },
    "730": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        478,
        505
      ],
      "op": "DUP1",
      "path": "63"
    },
    "731": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        478,
        505
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "732": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        478,
        505
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x2E4"
    },
    "735": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        478,
        505
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "736": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        478,
        505
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "738": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        478,
        505
      ],
      "op": "DUP1",
      "path": "63"
    },
    "739": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        478,
        505
      ],
      "op": "REVERT",
      "path": "63"
    },
    "740": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        478,
        505
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "741": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        478,
        505
      ],
      "op": "POP",
      "path": "63"
    },
    "742": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        478,
        505
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1F7"
    },
    "745": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        478,
        505
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0xCF2"
    },
    "748": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "jump": "i",
      "offset": [
        478,
        505
      ],
      "op": "JUMP",
      "path": "63"
    },
    "749": {
      "offset": [
        877,
        918
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "750": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        877,
        918
      ],
      "op": "CALLVALUE",
      "path": "66"
    },
    "751": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        877,
        918
      ],
      "op": "DUP1",
      "path": "66"
    },
    "752": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        877,
        918
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "753": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        877,
        918
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2F9"
    },
    "756": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        877,
        918
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "757": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        877,
        918
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "759": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        877,
        918
      ],
      "op": "DUP1",
      "path": "66"
    },
    "760": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        877,
        918
      ],
      "op": "REVERT",
      "path": "66"
    },
    "761": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        877,
        918
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "762": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        877,
        918
      ],
      "op": "POP",
      "path": "66"
    },
    "763": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        877,
        918
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x1F7"
    },
    "766": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        877,
        918
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0xD16"
    },
    "769": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "jump": "i",
      "offset": [
        877,
        918
      ],
      "op": "JUMP",
      "path": "66"
    },
    "770": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        11786,
        12500
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "771": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        11786,
        12500
      ],
      "op": "CALLVALUE",
      "path": "66"
    },
    "772": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        11786,
        12500
      ],
      "op": "DUP1",
      "path": "66"
    },
    "773": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        11786,
        12500
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "774": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        11786,
        12500
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x30E"
    },
    "777": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        11786,
        12500
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "778": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        11786,
        12500
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "780": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        11786,
        12500
      ],
      "op": "DUP1",
      "path": "66"
    },
    "781": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        11786,
        12500
      ],
      "op": "REVERT",
      "path": "66"
    },
    "782": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        11786,
        12500
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "783": {
      "op": "POP"
    },
    "784": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        11786,
        12500
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x1A5"
    },
    "787": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        11786,
        12500
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x31D"
    },
    "790": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        11786,
        12500
      ],
      "op": "CALLDATASIZE",
      "path": "66"
    },
    "791": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        11786,
        12500
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "793": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        11786,
        12500
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3B2E"
    },
    "796": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "jump": "i",
      "offset": [
        11786,
        12500
      ],
      "op": "JUMP",
      "path": "66"
    },
    "797": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        11786,
        12500
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "798": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        11786,
        12500
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0xD3A"
    },
    "801": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "jump": "i",
      "offset": [
        11786,
        12500
      ],
      "op": "JUMP",
      "path": "66"
    },
    "802": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "JUMPDEST",
      "path": "71"
    },
    "803": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "CALLVALUE",
      "path": "71"
    },
    "804": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "DUP1",
      "path": "71"
    },
    "805": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "ISZERO",
      "path": "71"
    },
    "806": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "PUSH2",
      "path": "71",
      "value": "0x32E"
    },
    "809": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "JUMPI",
      "path": "71"
    },
    "810": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "PUSH1",
      "path": "71",
      "value": "0x0"
    },
    "812": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "DUP1",
      "path": "71"
    },
    "813": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "REVERT",
      "path": "71"
    },
    "814": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "JUMPDEST",
      "path": "71"
    },
    "815": {
      "op": "POP"
    },
    "816": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "PUSH2",
      "path": "71",
      "value": "0x342"
    },
    "819": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "PUSH2",
      "path": "71",
      "value": "0x33D"
    },
    "822": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "CALLDATASIZE",
      "path": "71"
    },
    "823": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "PUSH1",
      "path": "71",
      "value": "0x4"
    },
    "825": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "PUSH2",
      "path": "71",
      "value": "0x39DA"
    },
    "828": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "jump": "i",
      "offset": [
        502,
        775
      ],
      "op": "JUMP",
      "path": "71"
    },
    "829": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "JUMPDEST",
      "path": "71"
    },
    "830": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "PUSH2",
      "path": "71",
      "value": "0x1059"
    },
    "833": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "jump": "i",
      "offset": [
        502,
        775
      ],
      "op": "JUMP",
      "path": "71"
    },
    "834": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "JUMPDEST",
      "path": "71"
    },
    "835": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "PUSH1",
      "path": "71",
      "value": "0x40"
    },
    "837": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "MLOAD",
      "path": "71"
    },
    "838": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "PUSH2",
      "path": "71",
      "value": "0x1D9"
    },
    "841": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "SWAP2",
      "path": "71"
    },
    "842": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "SWAP1",
      "path": "71"
    },
    "843": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "PUSH2",
      "path": "71",
      "value": "0x3FF4"
    },
    "846": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "jump": "i",
      "offset": [
        502,
        775
      ],
      "op": "JUMP",
      "path": "71"
    },
    "847": {
      "offset": [
        618,
        660
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "848": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        618,
        660
      ],
      "op": "CALLVALUE",
      "path": "66"
    },
    "849": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        618,
        660
      ],
      "op": "DUP1",
      "path": "66"
    },
    "850": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        618,
        660
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "851": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        618,
        660
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x35B"
    },
    "854": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        618,
        660
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "855": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        618,
        660
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "857": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        618,
        660
      ],
      "op": "DUP1",
      "path": "66"
    },
    "858": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        618,
        660
      ],
      "op": "REVERT",
      "path": "66"
    },
    "859": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        618,
        660
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "860": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        618,
        660
      ],
      "op": "POP",
      "path": "66"
    },
    "861": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        618,
        660
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x1F7"
    },
    "864": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        618,
        660
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x106D"
    },
    "867": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "jump": "i",
      "offset": [
        618,
        660
      ],
      "op": "JUMP",
      "path": "66"
    },
    "868": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6121,
        6558
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "869": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6121,
        6558
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x1A5"
    },
    "872": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6121,
        6558
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x372"
    },
    "875": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6121,
        6558
      ],
      "op": "CALLDATASIZE",
      "path": "66"
    },
    "876": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6121,
        6558
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "878": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6121,
        6558
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3A95"
    },
    "881": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "jump": "i",
      "offset": [
        6121,
        6558
      ],
      "op": "JUMP",
      "path": "66"
    },
    "882": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6121,
        6558
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "883": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6121,
        6558
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x1091"
    },
    "886": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "jump": "i",
      "offset": [
        6121,
        6558
      ],
      "op": "JUMP",
      "path": "66"
    },
    "887": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        6803,
        8021
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "888": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        6803,
        8021
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x1A5"
    },
    "891": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        6803,
        8021
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x385"
    },
    "894": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        6803,
        8021
      ],
      "op": "CALLDATASIZE",
      "path": "66"
    },
    "895": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        6803,
        8021
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "897": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        6803,
        8021
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3ADD"
    },
    "900": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "jump": "i",
      "offset": [
        6803,
        8021
      ],
      "op": "JUMP",
      "path": "66"
    },
    "901": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        6803,
        8021
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "902": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        6803,
        8021
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x114A"
    },
    "905": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "jump": "i",
      "offset": [
        6803,
        8021
      ],
      "op": "JUMP",
      "path": "66"
    },
    "906": {
      "offset": [
        373,
        403
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "907": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        373,
        403
      ],
      "op": "CALLVALUE",
      "path": "24"
    },
    "908": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        373,
        403
      ],
      "op": "DUP1",
      "path": "24"
    },
    "909": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        373,
        403
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "910": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        373,
        403
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x396"
    },
    "913": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        373,
        403
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "914": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        373,
        403
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "916": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        373,
        403
      ],
      "op": "DUP1",
      "path": "24"
    },
    "917": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        373,
        403
      ],
      "op": "REVERT",
      "path": "24"
    },
    "918": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        373,
        403
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "919": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        373,
        403
      ],
      "op": "POP",
      "path": "24"
    },
    "920": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        373,
        403
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1F7"
    },
    "923": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        373,
        403
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x17E4"
    },
    "926": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "jump": "i",
      "offset": [
        373,
        403
      ],
      "op": "JUMP",
      "path": "24"
    },
    "927": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1234,
        1444
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "928": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1234,
        1444
      ],
      "op": "CALLVALUE",
      "path": "24"
    },
    "929": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1234,
        1444
      ],
      "op": "DUP1",
      "path": "24"
    },
    "930": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1234,
        1444
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "931": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1234,
        1444
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x3AB"
    },
    "934": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1234,
        1444
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "935": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1234,
        1444
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "937": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1234,
        1444
      ],
      "op": "DUP1",
      "path": "24"
    },
    "938": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1234,
        1444
      ],
      "op": "REVERT",
      "path": "24"
    },
    "939": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1234,
        1444
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "940": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1234,
        1444
      ],
      "op": "POP",
      "path": "24"
    },
    "941": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1234,
        1444
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1A5"
    },
    "944": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1234,
        1444
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x17F3"
    },
    "947": {
      "fn": "Governable.acceptGovernor",
      "jump": "i",
      "offset": [
        1234,
        1444
      ],
      "op": "JUMP",
      "path": "24"
    },
    "948": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "949": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "CALLVALUE",
      "path": "68"
    },
    "950": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "DUP1",
      "path": "68"
    },
    "951": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "952": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x3C0"
    },
    "955": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "956": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "958": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "DUP1",
      "path": "68"
    },
    "959": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "REVERT",
      "path": "68"
    },
    "960": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "961": {
      "op": "POP"
    },
    "962": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1A5"
    },
    "965": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x3CF"
    },
    "968": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "CALLDATASIZE",
      "path": "68"
    },
    "969": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "971": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x3C7F"
    },
    "974": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "jump": "i",
      "offset": [
        570,
        1008
      ],
      "op": "JUMP",
      "path": "68"
    },
    "975": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "976": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1883"
    },
    "979": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "jump": "i",
      "offset": [
        570,
        1008
      ],
      "op": "JUMP",
      "path": "68"
    },
    "980": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "981": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "CALLVALUE",
      "path": "24"
    },
    "982": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "DUP1",
      "path": "24"
    },
    "983": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "984": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x3E0"
    },
    "987": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "988": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "990": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "DUP1",
      "path": "24"
    },
    "991": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "REVERT",
      "path": "24"
    },
    "992": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "993": {
      "op": "POP"
    },
    "994": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1A5"
    },
    "997": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x3EF"
    },
    "1000": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1001": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1003": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x396A"
    },
    "1006": {
      "fn": "Governable.setPendingGovernor",
      "jump": "i",
      "offset": [
        981,
        1144
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1007": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1008": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1A58"
    },
    "1011": {
      "fn": "Governable.setPendingGovernor",
      "jump": "i",
      "offset": [
        981,
        1144
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1012": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "JUMPDEST",
      "path": "71"
    },
    "1013": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "CALLVALUE",
      "path": "71"
    },
    "1014": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "DUP1",
      "path": "71"
    },
    "1015": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "ISZERO",
      "path": "71"
    },
    "1016": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "PUSH2",
      "path": "71",
      "value": "0x400"
    },
    "1019": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "JUMPI",
      "path": "71"
    },
    "1020": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "PUSH1",
      "path": "71",
      "value": "0x0"
    },
    "1022": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "DUP1",
      "path": "71"
    },
    "1023": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "REVERT",
      "path": "71"
    },
    "1024": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "JUMPDEST",
      "path": "71"
    },
    "1025": {
      "op": "POP"
    },
    "1026": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "PUSH2",
      "path": "71",
      "value": "0x342"
    },
    "1029": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "PUSH2",
      "path": "71",
      "value": "0x40F"
    },
    "1032": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "CALLDATASIZE",
      "path": "71"
    },
    "1033": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "PUSH1",
      "path": "71",
      "value": "0x4"
    },
    "1035": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "PUSH2",
      "path": "71",
      "value": "0x3BC7"
    },
    "1038": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "jump": "i",
      "offset": [
        259,
        498
      ],
      "op": "JUMP",
      "path": "71"
    },
    "1039": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "JUMPDEST",
      "path": "71"
    },
    "1040": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "PUSH2",
      "path": "71",
      "value": "0x1ADE"
    },
    "1043": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "jump": "i",
      "offset": [
        259,
        498
      ],
      "op": "JUMP",
      "path": "71"
    },
    "1044": {
      "offset": [
        578,
        638
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "1045": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        578,
        638
      ],
      "op": "CALLVALUE",
      "path": "63"
    },
    "1046": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        578,
        638
      ],
      "op": "DUP1",
      "path": "63"
    },
    "1047": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        578,
        638
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "1048": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        578,
        638
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x420"
    },
    "1051": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        578,
        638
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "1052": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        578,
        638
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "1054": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        578,
        638
      ],
      "op": "DUP1",
      "path": "63"
    },
    "1055": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        578,
        638
      ],
      "op": "REVERT",
      "path": "63"
    },
    "1056": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        578,
        638
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "1057": {
      "op": "POP"
    },
    "1058": {
      "offset": [
        578,
        638
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1CC"
    },
    "1061": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        578,
        638
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x42F"
    },
    "1064": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        578,
        638
      ],
      "op": "CALLDATASIZE",
      "path": "63"
    },
    "1065": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        578,
        638
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "1067": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        578,
        638
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x39A2"
    },
    "1070": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "jump": "i",
      "offset": [
        578,
        638
      ],
      "op": "JUMP",
      "path": "63"
    },
    "1071": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        578,
        638
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "1072": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        578,
        638
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1AF0"
    },
    "1075": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "jump": "i",
      "offset": [
        578,
        638
      ],
      "op": "JUMP",
      "path": "63"
    },
    "1076": {
      "offset": [
        685,
        727
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "1077": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        685,
        727
      ],
      "op": "CALLVALUE",
      "path": "66"
    },
    "1078": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        685,
        727
      ],
      "op": "DUP1",
      "path": "66"
    },
    "1079": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        685,
        727
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "1080": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        685,
        727
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x440"
    },
    "1083": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        685,
        727
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "1084": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        685,
        727
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "1086": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        685,
        727
      ],
      "op": "DUP1",
      "path": "66"
    },
    "1087": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        685,
        727
      ],
      "op": "REVERT",
      "path": "66"
    },
    "1088": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        685,
        727
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "1089": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        685,
        727
      ],
      "op": "POP",
      "path": "66"
    },
    "1090": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        685,
        727
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x1F7"
    },
    "1093": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        685,
        727
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x1B10"
    },
    "1096": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "jump": "i",
      "offset": [
        685,
        727
      ],
      "op": "JUMP",
      "path": "66"
    },
    "1097": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1098": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1100": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1102": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1104": {
      "op": "SHL"
    },
    "1105": {
      "op": "SUB"
    },
    "1106": {
      "op": "NOT"
    },
    "1107": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 1
    },
    "1108": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "AND",
      "path": "4"
    },
    "1109": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1050,
        1054
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1111": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1112": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1113": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1114": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1116": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1117": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1118": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1119": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1121": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1122": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1123": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1124": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "1126": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "AND",
      "path": "4"
    },
    "1127": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1128": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1129": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1130": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "POP",
      "path": "4"
    },
    "1131": {
      "fn": "ERC165.supportsInterface",
      "jump": "o",
      "offset": [
        965,
        1113
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1132": {
      "offset": [
        945,
        975
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "1133": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        945,
        975
      ],
      "op": "PUSH32",
      "path": "66",
      "value": "0x0"
    },
    "1166": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        945,
        975
      ],
      "op": "DUP2",
      "path": "66"
    },
    "1167": {
      "fn": "ERC165.supportsInterface",
      "jump": "o",
      "offset": [
        945,
        975
      ],
      "op": "JUMP",
      "path": "66"
    },
    "1168": {
      "offset": [
        321,
        344
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1169": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        321,
        344
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x42"
    },
    "1171": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        321,
        344
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1172": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        321,
        344
      ],
      "op": "PUSH3",
      "path": "24",
      "value": "0x10000"
    },
    "1176": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        321,
        344
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1177": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        321,
        344
      ],
      "op": "DIV",
      "path": "24"
    },
    "1178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1182": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1184": {
      "op": "SHL"
    },
    "1185": {
      "op": "SUB"
    },
    "1186": {
      "offset": [
        321,
        344
      ],
      "op": "AND",
      "path": "24"
    },
    "1187": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        321,
        344
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1188": {
      "fn": "ERC165.supportsInterface",
      "jump": "o",
      "offset": [
        321,
        344
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1189": {
      "fn": "SushiswapSpellV1.removeLiquidityWERC20",
      "offset": [
        11225,
        11553
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "1190": {
      "fn": "SushiswapSpellV1.removeLiquidityWERC20",
      "offset": [
        11346,
        11356
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "1192": {
      "fn": "SushiswapSpellV1.removeLiquidityWERC20",
      "offset": [
        11359,
        11392
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x4B1"
    },
    "1195": {
      "fn": "SushiswapSpellV1.removeLiquidityWERC20",
      "offset": [
        11377,
        11383
      ],
      "op": "DUP5",
      "path": "66"
    },
    "1196": {
      "fn": "SushiswapSpellV1.removeLiquidityWERC20",
      "offset": [
        11385,
        11391
      ],
      "op": "DUP5",
      "path": "66"
    },
    "1197": {
      "fn": "SushiswapSpellV1.removeLiquidityWERC20",
      "offset": [
        11359,
        11376
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x4D0"
    },
    "1200": {
      "fn": "SushiswapSpellV1.removeLiquidityWERC20",
      "jump": "i",
      "offset": [
        11359,
        11392
      ],
      "op": "JUMP",
      "path": "66"
    },
    "1201": {
      "fn": "SushiswapSpellV1.removeLiquidityWERC20",
      "offset": [
        11359,
        11392
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "1202": {
      "fn": "SushiswapSpellV1.removeLiquidityWERC20",
      "offset": [
        11346,
        11392
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "1203": {
      "op": "POP"
    },
    "1204": {
      "fn": "SushiswapSpellV1.removeLiquidityWERC20",
      "offset": [
        11429,
        11464
      ],
      "op": "PUSH2",
      "path": "66",
      "statement": 2,
      "value": "0x4BE"
    },
    "1207": {
      "fn": "SushiswapSpellV1.removeLiquidityWERC20",
      "offset": [
        11346,
        11392
      ],
      "op": "DUP2",
      "path": "66"
    },
    "1208": {
      "fn": "SushiswapSpellV1.removeLiquidityWERC20",
      "offset": [
        11450,
        11463
      ],
      "op": "DUP4",
      "path": "66"
    },
    "1209": {
      "fn": "SushiswapSpellV1.removeLiquidityWERC20",
      "offset": [
        11450,
        11463
      ],
      "op": "CALLDATALOAD",
      "path": "66"
    },
    "1210": {
      "fn": "SushiswapSpellV1.removeLiquidityWERC20",
      "offset": [
        11429,
        11445
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x1C52"
    },
    "1213": {
      "fn": "SushiswapSpellV1.removeLiquidityWERC20",
      "jump": "i",
      "offset": [
        11429,
        11464
      ],
      "op": "JUMP",
      "path": "66"
    },
    "1214": {
      "fn": "SushiswapSpellV1.removeLiquidityWERC20",
      "offset": [
        11429,
        11464
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "1215": {
      "fn": "SushiswapSpellV1.removeLiquidityWERC20",
      "offset": [
        11500,
        11548
      ],
      "op": "PUSH2",
      "path": "66",
      "statement": 3,
      "value": "0x4CA"
    },
    "1218": {
      "fn": "SushiswapSpellV1.removeLiquidityWERC20",
      "offset": [
        11524,
        11530
      ],
      "op": "DUP5",
      "path": "66"
    },
    "1219": {
      "fn": "SushiswapSpellV1.removeLiquidityWERC20",
      "offset": [
        11532,
        11538
      ],
      "op": "DUP5",
      "path": "66"
    },
    "1220": {
      "fn": "SushiswapSpellV1.removeLiquidityWERC20",
      "offset": [
        11540,
        11543
      ],
      "op": "DUP5",
      "path": "66"
    },
    "1221": {
      "fn": "SushiswapSpellV1.removeLiquidityWERC20",
      "offset": [
        11545,
        11547
      ],
      "op": "DUP5",
      "path": "66"
    },
    "1222": {
      "fn": "SushiswapSpellV1.removeLiquidityWERC20",
      "offset": [
        11500,
        11523
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x1E1D"
    },
    "1225": {
      "fn": "SushiswapSpellV1.removeLiquidityWERC20",
      "jump": "i",
      "offset": [
        11500,
        11548
      ],
      "op": "JUMP",
      "path": "66"
    },
    "1226": {
      "fn": "SushiswapSpellV1.removeLiquidityWERC20",
      "offset": [
        11500,
        11548
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "1227": {
      "fn": "SushiswapSpellV1.removeLiquidityWERC20",
      "offset": [
        11225,
        11553
      ],
      "op": "POP",
      "path": "66"
    },
    "1228": {
      "fn": "SushiswapSpellV1.removeLiquidityWERC20",
      "offset": [
        11225,
        11553
      ],
      "op": "POP",
      "path": "66"
    },
    "1229": {
      "fn": "SushiswapSpellV1.removeLiquidityWERC20",
      "offset": [
        11225,
        11553
      ],
      "op": "POP",
      "path": "66"
    },
    "1230": {
      "fn": "SushiswapSpellV1.removeLiquidityWERC20",
      "offset": [
        11225,
        11553
      ],
      "op": "POP",
      "path": "66"
    },
    "1231": {
      "fn": "SushiswapSpellV1.removeLiquidityWERC20",
      "jump": "o",
      "offset": [
        11225,
        11553
      ],
      "op": "JUMP",
      "path": "66"
    },
    "1232": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1588,
        2060
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "1233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1237": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1239": {
      "op": "SHL"
    },
    "1240": {
      "op": "SUB"
    },
    "1241": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1691,
        1704
      ],
      "op": "DUP1",
      "path": "66"
    },
    "1242": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1691,
        1704
      ],
      "op": "DUP4",
      "path": "66"
    },
    "1243": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1691,
        1704
      ],
      "op": "AND",
      "path": "66"
    },
    "1244": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1663,
        1670
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "1246": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1691,
        1704
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "1247": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1691,
        1704
      ],
      "op": "DUP2",
      "path": "66"
    },
    "1248": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1691,
        1704
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "1249": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1691,
        1696
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x85"
    },
    "1251": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1691,
        1704
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x20"
    },
    "1253": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1691,
        1704
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "1254": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1691,
        1704
      ],
      "op": "DUP2",
      "path": "66"
    },
    "1255": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1691,
        1704
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "1256": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1691,
        1704
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "1258": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1691,
        1704
      ],
      "op": "DUP1",
      "path": "66"
    },
    "1259": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1691,
        1704
      ],
      "op": "DUP4",
      "path": "66"
    },
    "1260": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1691,
        1704
      ],
      "op": "KECCAK256",
      "path": "66"
    },
    "1261": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1691,
        1712
      ],
      "op": "DUP6",
      "path": "66"
    },
    "1262": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1691,
        1712
      ],
      "op": "DUP6",
      "path": "66"
    },
    "1263": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1691,
        1712
      ],
      "op": "AND",
      "path": "66"
    },
    "1264": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1691,
        1712
      ],
      "op": "DUP5",
      "path": "66"
    },
    "1265": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1691,
        1712
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "1266": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1691,
        1712
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "1267": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1691,
        1712
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "1268": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1691,
        1712
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "1269": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1691,
        1712
      ],
      "op": "DUP2",
      "path": "66"
    },
    "1270": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1691,
        1712
      ],
      "op": "KECCAK256",
      "path": "66"
    },
    "1271": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1691,
        1712
      ],
      "op": "SLOAD",
      "path": "66"
    },
    "1272": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1663,
        1670
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "1273": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1663,
        1670
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "1274": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1691,
        1712
      ],
      "op": "AND",
      "path": "66"
    },
    "1275": {
      "branch": 149,
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1722,
        1738
      ],
      "op": "DUP1",
      "path": "66"
    },
    "1276": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1718,
        2041
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x697"
    },
    "1279": {
      "branch": 149,
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1718,
        2041
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "1280": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "PUSH1",
      "path": "66",
      "statement": 4,
      "value": "0x40"
    },
    "1282": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "1283": {
      "op": "PUSH4",
      "value": "0xE6A43905"
    },
    "1288": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1290": {
      "op": "SHL"
    },
    "1291": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "DUP2",
      "path": "66"
    },
    "1292": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "1293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1297": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1299": {
      "op": "SHL"
    },
    "1300": {
      "op": "SUB"
    },
    "1301": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1760
      ],
      "op": "PUSH32",
      "path": "66",
      "value": "0x0"
    },
    "1334": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1768
      ],
      "op": "AND",
      "path": "66"
    },
    "1335": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1768
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "1336": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1768
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0xE6A43905"
    },
    "1341": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1768
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "1342": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x54D"
    },
    "1345": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "1346": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1769,
        1775
      ],
      "op": "DUP8",
      "path": "66"
    },
    "1347": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1769,
        1775
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "1348": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1777,
        1783
      ],
      "op": "DUP8",
      "path": "66"
    },
    "1349": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1777,
        1783
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "1350": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "1352": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "ADD",
      "path": "66"
    },
    "1353": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3F0C"
    },
    "1356": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "jump": "i",
      "offset": [
        1753,
        1784
      ],
      "op": "JUMP",
      "path": "66"
    },
    "1357": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "1358": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x20"
    },
    "1360": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "1362": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "1363": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "DUP1",
      "path": "66"
    },
    "1364": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "DUP4",
      "path": "66"
    },
    "1365": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "SUB",
      "path": "66"
    },
    "1366": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "DUP2",
      "path": "66"
    },
    "1367": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "DUP7",
      "path": "66"
    },
    "1368": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "DUP1",
      "path": "66"
    },
    "1369": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "EXTCODESIZE",
      "path": "66"
    },
    "1370": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "1371": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "DUP1",
      "path": "66"
    },
    "1372": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "1373": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x565"
    },
    "1376": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "1377": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "1379": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "DUP1",
      "path": "66"
    },
    "1380": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "REVERT",
      "path": "66"
    },
    "1381": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "1382": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "POP",
      "path": "66"
    },
    "1383": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "GAS",
      "path": "66"
    },
    "1384": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "STATICCALL",
      "path": "66"
    },
    "1385": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "1386": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "DUP1",
      "path": "66"
    },
    "1387": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "1388": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x579"
    },
    "1391": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "1392": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "1393": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "1395": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "DUP1",
      "path": "66"
    },
    "1396": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "RETURNDATACOPY",
      "path": "66"
    },
    "1397": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "1398": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "1400": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "REVERT",
      "path": "66"
    },
    "1401": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "1402": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "POP",
      "path": "66"
    },
    "1403": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "POP",
      "path": "66"
    },
    "1404": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "POP",
      "path": "66"
    },
    "1405": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "POP",
      "path": "66"
    },
    "1406": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "1408": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "1409": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "1410": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "1412": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "NOT",
      "path": "66"
    },
    "1413": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "1415": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "DUP3",
      "path": "66"
    },
    "1416": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "ADD",
      "path": "66"
    },
    "1417": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "AND",
      "path": "66"
    },
    "1418": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "DUP3",
      "path": "66"
    },
    "1419": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "ADD",
      "path": "66"
    },
    "1420": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "DUP1",
      "path": "66"
    },
    "1421": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "1423": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "1424": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "POP",
      "path": "66"
    },
    "1425": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "DUP2",
      "path": "66"
    },
    "1426": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "ADD",
      "path": "66"
    },
    "1427": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "1428": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x59D"
    },
    "1431": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "1432": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "1433": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3986"
    },
    "1436": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "jump": "i",
      "offset": [
        1753,
        1784
      ],
      "op": "JUMP",
      "path": "66"
    },
    "1437": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1753,
        1784
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "1438": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1748,
        1784
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "1439": {
      "op": "POP"
    },
    "1440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1446": {
      "op": "SHL"
    },
    "1447": {
      "op": "SUB"
    },
    "1448": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1800,
        1816
      ],
      "op": "DUP2",
      "path": "66",
      "statement": 5
    },
    "1449": {
      "branch": 150,
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1800,
        1816
      ],
      "op": "AND",
      "path": "66"
    },
    "1450": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1792,
        1832
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x5C5"
    },
    "1453": {
      "branch": 150,
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1792,
        1832
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "1454": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1792,
        1832
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "1456": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1792,
        1832
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "1457": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1461": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1463": {
      "op": "SHL"
    },
    "1464": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1792,
        1832
      ],
      "op": "DUP2",
      "path": "66"
    },
    "1465": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1792,
        1832
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "1466": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1792,
        1832
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "1468": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1792,
        1832
      ],
      "op": "ADD",
      "path": "66"
    },
    "1469": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1792,
        1832
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x19C"
    },
    "1472": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1792,
        1832
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "1473": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1792,
        1832
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x4251"
    },
    "1476": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "jump": "i",
      "offset": [
        1792,
        1832
      ],
      "op": "JUMP",
      "path": "66"
    },
    "1477": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1792,
        1832
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "1478": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1840,
        1878
      ],
      "op": "PUSH2",
      "path": "66",
      "statement": 6,
      "value": "0x5EF"
    },
    "1481": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1854,
        1860
      ],
      "op": "DUP5",
      "path": "66"
    },
    "1482": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1870,
        1876
      ],
      "op": "PUSH32",
      "path": "66",
      "value": "0x0"
    },
    "1515": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1840,
        1853
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x26B8"
    },
    "1518": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "jump": "i",
      "offset": [
        1840,
        1878
      ],
      "op": "JUMP",
      "path": "66"
    },
    "1519": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1840,
        1878
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "1520": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1886,
        1924
      ],
      "op": "PUSH2",
      "path": "66",
      "statement": 7,
      "value": "0x619"
    },
    "1523": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1900,
        1906
      ],
      "op": "DUP4",
      "path": "66"
    },
    "1524": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1916,
        1922
      ],
      "op": "PUSH32",
      "path": "66",
      "value": "0x0"
    },
    "1557": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1886,
        1899
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x26B8"
    },
    "1560": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "jump": "i",
      "offset": [
        1886,
        1924
      ],
      "op": "JUMP",
      "path": "66"
    },
    "1561": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1886,
        1924
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "1562": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1932,
        1966
      ],
      "op": "PUSH2",
      "path": "66",
      "statement": 8,
      "value": "0x643"
    },
    "1565": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1946,
        1948
      ],
      "op": "DUP2",
      "path": "66"
    },
    "1566": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1958,
        1964
      ],
      "op": "PUSH32",
      "path": "66",
      "value": "0x0"
    },
    "1599": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1932,
        1945
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x26B8"
    },
    "1602": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "jump": "i",
      "offset": [
        1932,
        1966
      ],
      "op": "JUMP",
      "path": "66"
    },
    "1603": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1932,
        1966
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "1604": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1608": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1610": {
      "op": "SHL"
    },
    "1611": {
      "op": "SUB"
    },
    "1612": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1974,
        1987
      ],
      "op": "DUP1",
      "path": "66",
      "statement": 9
    },
    "1613": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1974,
        1987
      ],
      "op": "DUP6",
      "path": "66"
    },
    "1614": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1974,
        1987
      ],
      "op": "AND",
      "path": "66"
    },
    "1615": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1974,
        1987
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "1617": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1974,
        1987
      ],
      "op": "DUP2",
      "path": "66"
    },
    "1618": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1974,
        1987
      ],
      "op": "DUP2",
      "path": "66"
    },
    "1619": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1974,
        1987
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "1620": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1974,
        1979
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x85"
    },
    "1622": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1974,
        1987
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x20"
    },
    "1624": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1974,
        1987
      ],
      "op": "DUP2",
      "path": "66"
    },
    "1625": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1974,
        1987
      ],
      "op": "DUP2",
      "path": "66"
    },
    "1626": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1974,
        1987
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "1627": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1974,
        1987
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "1629": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1974,
        1987
      ],
      "op": "DUP1",
      "path": "66"
    },
    "1630": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1974,
        1987
      ],
      "op": "DUP5",
      "path": "66"
    },
    "1631": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1974,
        1987
      ],
      "op": "KECCAK256",
      "path": "66"
    },
    "1632": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1974,
        1995
      ],
      "op": "DUP10",
      "path": "66"
    },
    "1633": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1974,
        1995
      ],
      "op": "DUP8",
      "path": "66"
    },
    "1634": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1974,
        1995
      ],
      "op": "AND",
      "path": "66"
    },
    "1635": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1974,
        1995
      ],
      "op": "DUP6",
      "path": "66"
    },
    "1636": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1974,
        1995
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "1637": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1974,
        1995
      ],
      "op": "DUP3",
      "path": "66"
    },
    "1638": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1974,
        1995
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "1639": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1974,
        1995
      ],
      "op": "DUP1",
      "path": "66"
    },
    "1640": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1974,
        1995
      ],
      "op": "DUP5",
      "path": "66"
    },
    "1641": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1974,
        1995
      ],
      "op": "KECCAK256",
      "path": "66"
    },
    "1642": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1974,
        2000
      ],
      "op": "DUP1",
      "path": "66"
    },
    "1643": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1974,
        2000
      ],
      "op": "SLOAD",
      "path": "66"
    },
    "1644": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1974,
        2000
      ],
      "op": "SWAP7",
      "path": "66"
    },
    "1645": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1974,
        2000
      ],
      "op": "DUP9",
      "path": "66"
    },
    "1646": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1974,
        2000
      ],
      "op": "AND",
      "path": "66"
    },
    "1647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1651": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1653": {
      "op": "SHL"
    },
    "1654": {
      "op": "SUB"
    },
    "1655": {
      "op": "NOT"
    },
    "1656": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1974,
        2000
      ],
      "op": "SWAP8",
      "path": "66"
    },
    "1657": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1974,
        2000
      ],
      "op": "DUP9",
      "path": "66"
    },
    "1658": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1974,
        2000
      ],
      "op": "AND",
      "path": "66"
    },
    "1659": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1974,
        2000
      ],
      "op": "DUP2",
      "path": "66"
    },
    "1660": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1974,
        2000
      ],
      "op": "OR",
      "path": "66"
    },
    "1661": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1974,
        2000
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "1662": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1974,
        2000
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "1663": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1974,
        2000
      ],
      "op": "SSTORE",
      "path": "66"
    },
    "1664": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        2008,
        2021
      ],
      "op": "SWAP3",
      "path": "66",
      "statement": 10
    },
    "1665": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        2008,
        2021
      ],
      "op": "DUP3",
      "path": "66"
    },
    "1666": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        2008,
        2021
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "1667": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        2008,
        2021
      ],
      "op": "DUP1",
      "path": "66"
    },
    "1668": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        2008,
        2021
      ],
      "op": "DUP5",
      "path": "66"
    },
    "1669": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        2008,
        2021
      ],
      "op": "KECCAK256",
      "path": "66"
    },
    "1670": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        2008,
        2029
      ],
      "op": "SWAP5",
      "path": "66"
    },
    "1671": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        2008,
        2029
      ],
      "op": "DUP5",
      "path": "66"
    },
    "1672": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        2008,
        2029
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "1673": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        2008,
        2029
      ],
      "op": "SWAP4",
      "path": "66"
    },
    "1674": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        2008,
        2029
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "1675": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        2008,
        2029
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "1676": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        2008,
        2029
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "1677": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        2008,
        2029
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "1678": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        2008,
        2029
      ],
      "op": "KECCAK256",
      "path": "66"
    },
    "1679": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        2008,
        2034
      ],
      "op": "DUP1",
      "path": "66"
    },
    "1680": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        2008,
        2034
      ],
      "op": "SLOAD",
      "path": "66"
    },
    "1681": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        2008,
        2034
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "1682": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        2008,
        2034
      ],
      "op": "SWAP3",
      "path": "66"
    },
    "1683": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        2008,
        2034
      ],
      "op": "AND",
      "path": "66"
    },
    "1684": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        2008,
        2034
      ],
      "op": "OR",
      "path": "66"
    },
    "1685": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        2008,
        2034
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "1686": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        2008,
        2034
      ],
      "op": "SSTORE",
      "path": "66"
    },
    "1687": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1718,
        2041
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "1688": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        2053,
        2055
      ],
      "op": "SWAP1",
      "path": "66",
      "statement": 11
    },
    "1689": {
      "op": "POP"
    },
    "1690": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1588,
        2060
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "1691": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1588,
        2060
      ],
      "op": "SWAP3",
      "path": "66"
    },
    "1692": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1588,
        2060
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "1693": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1588,
        2060
      ],
      "op": "POP",
      "path": "66"
    },
    "1694": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        1588,
        2060
      ],
      "op": "POP",
      "path": "66"
    },
    "1695": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "jump": "o",
      "offset": [
        1588,
        2060
      ],
      "op": "JUMP",
      "path": "66"
    },
    "1696": {
      "offset": [
        544,
        573
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "1697": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        544,
        573
      ],
      "op": "PUSH32",
      "path": "63",
      "value": "0x0"
    },
    "1730": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "offset": [
        544,
        573
      ],
      "op": "DUP2",
      "path": "63"
    },
    "1731": {
      "fn": "SushiswapSpellV1.getAndApprovePair",
      "jump": "o",
      "offset": [
        544,
        573
      ],
      "op": "JUMP",
      "path": "63"
    },
    "1732": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12571,
        13364
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "1733": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12619,
        12636
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "1735": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12638,
        12649
      ],
      "op": "DUP1",
      "path": "66"
    },
    "1736": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12659
      ],
      "op": "PUSH32",
      "path": "66",
      "value": "0x0"
    },
    "1769": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1773": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1775": {
      "op": "SHL"
    },
    "1776": {
      "op": "SUB"
    },
    "1777": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12682
      ],
      "op": "AND",
      "path": "66"
    },
    "1778": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12682
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0xF70AEDD9"
    },
    "1783": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "1785": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "1786": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "DUP2",
      "path": "66"
    },
    "1787": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0xFFFFFFFF"
    },
    "1792": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "AND",
      "path": "66"
    },
    "1793": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0xE0"
    },
    "1795": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "SHL",
      "path": "66"
    },
    "1796": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "DUP2",
      "path": "66"
    },
    "1797": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "1798": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "1800": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "ADD",
      "path": "66"
    },
    "1801": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x80"
    },
    "1803": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "1805": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "1806": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "DUP1",
      "path": "66"
    },
    "1807": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "DUP4",
      "path": "66"
    },
    "1808": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "SUB",
      "path": "66"
    },
    "1809": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "DUP2",
      "path": "66"
    },
    "1810": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "DUP7",
      "path": "66"
    },
    "1811": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "DUP1",
      "path": "66"
    },
    "1812": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "EXTCODESIZE",
      "path": "66"
    },
    "1813": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "1814": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "DUP1",
      "path": "66"
    },
    "1815": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "1816": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x720"
    },
    "1819": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "1820": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "1822": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "DUP1",
      "path": "66"
    },
    "1823": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "REVERT",
      "path": "66"
    },
    "1824": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "1825": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "POP",
      "path": "66"
    },
    "1826": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "GAS",
      "path": "66"
    },
    "1827": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "STATICCALL",
      "path": "66"
    },
    "1828": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "1829": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "DUP1",
      "path": "66"
    },
    "1830": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "1831": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x734"
    },
    "1834": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "1835": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "1836": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "1838": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "DUP1",
      "path": "66"
    },
    "1839": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "RETURNDATACOPY",
      "path": "66"
    },
    "1840": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "1841": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "1843": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "REVERT",
      "path": "66"
    },
    "1844": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "1845": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "POP",
      "path": "66"
    },
    "1846": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "POP",
      "path": "66"
    },
    "1847": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "POP",
      "path": "66"
    },
    "1848": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "POP",
      "path": "66"
    },
    "1849": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "1851": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "1852": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "1853": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "1855": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "NOT",
      "path": "66"
    },
    "1856": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "1858": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "DUP3",
      "path": "66"
    },
    "1859": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "ADD",
      "path": "66"
    },
    "1860": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "AND",
      "path": "66"
    },
    "1861": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "DUP3",
      "path": "66"
    },
    "1862": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "ADD",
      "path": "66"
    },
    "1863": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "DUP1",
      "path": "66"
    },
    "1864": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "1866": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "1867": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "POP",
      "path": "66"
    },
    "1868": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "DUP2",
      "path": "66"
    },
    "1869": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "ADD",
      "path": "66"
    },
    "1870": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "1871": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x758"
    },
    "1874": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "1875": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "1876": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3B80"
    },
    "1879": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "jump": "i",
      "offset": [
        12655,
        12684
      ],
      "op": "JUMP",
      "path": "66"
    },
    "1880": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12655,
        12684
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "1881": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12616,
        12684
      ],
      "op": "POP",
      "path": "66"
    },
    "1882": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12616,
        12684
      ],
      "op": "SWAP3",
      "path": "66"
    },
    "1883": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12616,
        12684
      ],
      "op": "POP",
      "path": "66"
    },
    "1884": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12616,
        12684
      ],
      "op": "SWAP3",
      "path": "66"
    },
    "1885": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12616,
        12684
      ],
      "op": "POP",
      "path": "66"
    },
    "1886": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12616,
        12684
      ],
      "op": "POP",
      "path": "66"
    },
    "1887": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12691,
        12699
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "1889": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12716
      ],
      "op": "PUSH32",
      "path": "66",
      "value": "0x0"
    },
    "1922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1926": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1928": {
      "op": "SHL"
    },
    "1929": {
      "op": "SUB"
    },
    "1930": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12725
      ],
      "op": "AND",
      "path": "66"
    },
    "1931": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12725
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0xDC20C6FA"
    },
    "1936": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12726,
        12732
      ],
      "op": "DUP4",
      "path": "66"
    },
    "1937": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "1939": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "1940": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "DUP3",
      "path": "66"
    },
    "1941": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0xFFFFFFFF"
    },
    "1946": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "AND",
      "path": "66"
    },
    "1947": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0xE0"
    },
    "1949": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "SHL",
      "path": "66"
    },
    "1950": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "DUP2",
      "path": "66"
    },
    "1951": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "1952": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "1954": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "ADD",
      "path": "66"
    },
    "1955": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x7AC"
    },
    "1958": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "1959": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "1960": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x450A"
    },
    "1963": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "jump": "i",
      "offset": [
        12705,
        12733
      ],
      "op": "JUMP",
      "path": "66"
    },
    "1964": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "1965": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "1967": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "DUP1",
      "path": "66"
    },
    "1968": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "1969": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "DUP1",
      "path": "66"
    },
    "1970": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "DUP4",
      "path": "66"
    },
    "1971": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "SUB",
      "path": "66"
    },
    "1972": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "DUP2",
      "path": "66"
    },
    "1973": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "DUP7",
      "path": "66"
    },
    "1974": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "DUP1",
      "path": "66"
    },
    "1975": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "EXTCODESIZE",
      "path": "66"
    },
    "1976": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "1977": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "DUP1",
      "path": "66"
    },
    "1978": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "1979": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x7C3"
    },
    "1982": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "1983": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "1985": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "DUP1",
      "path": "66"
    },
    "1986": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "REVERT",
      "path": "66"
    },
    "1987": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "1988": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "POP",
      "path": "66"
    },
    "1989": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "GAS",
      "path": "66"
    },
    "1990": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "STATICCALL",
      "path": "66"
    },
    "1991": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "1992": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "DUP1",
      "path": "66"
    },
    "1993": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "1994": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x7D7"
    },
    "1997": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "1998": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "1999": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "2001": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "DUP1",
      "path": "66"
    },
    "2002": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "RETURNDATACOPY",
      "path": "66"
    },
    "2003": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "2004": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "2006": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "REVERT",
      "path": "66"
    },
    "2007": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "2008": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "POP",
      "path": "66"
    },
    "2009": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "POP",
      "path": "66"
    },
    "2010": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "POP",
      "path": "66"
    },
    "2011": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "POP",
      "path": "66"
    },
    "2012": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "2014": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "2015": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "2016": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "2018": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "NOT",
      "path": "66"
    },
    "2019": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "2021": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "DUP3",
      "path": "66"
    },
    "2022": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "ADD",
      "path": "66"
    },
    "2023": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "AND",
      "path": "66"
    },
    "2024": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "DUP3",
      "path": "66"
    },
    "2025": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "ADD",
      "path": "66"
    },
    "2026": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "DUP1",
      "path": "66"
    },
    "2027": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "2029": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "2030": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "POP",
      "path": "66"
    },
    "2031": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "DUP2",
      "path": "66"
    },
    "2032": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "ADD",
      "path": "66"
    },
    "2033": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "2034": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x7FB"
    },
    "2037": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "2038": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "2039": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3E49"
    },
    "2042": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "jump": "i",
      "offset": [
        12705,
        12733
      ],
      "op": "JUMP",
      "path": "66"
    },
    "2043": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12705,
        12733
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "2044": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12690,
        12733
      ],
      "op": "POP",
      "path": "66"
    },
    "2045": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12690,
        12733
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "2046": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12690,
        12733
      ],
      "op": "POP",
      "path": "66"
    },
    "2047": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12739,
        12749
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "2049": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12763
      ],
      "op": "PUSH32",
      "path": "66",
      "value": "0x0"
    },
    "2082": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2084": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2086": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2088": {
      "op": "SHL"
    },
    "2089": {
      "op": "SUB"
    },
    "2090": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12782
      ],
      "op": "AND",
      "path": "66"
    },
    "2091": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12782
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0xA4775772"
    },
    "2096": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12783,
        12789
      ],
      "op": "DUP5",
      "path": "66"
    },
    "2097": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "2099": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "2100": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "DUP3",
      "path": "66"
    },
    "2101": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0xFFFFFFFF"
    },
    "2106": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "AND",
      "path": "66"
    },
    "2107": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0xE0"
    },
    "2109": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "SHL",
      "path": "66"
    },
    "2110": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "DUP2",
      "path": "66"
    },
    "2111": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "2112": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "2114": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "ADD",
      "path": "66"
    },
    "2115": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x84C"
    },
    "2118": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "2119": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "2120": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x450A"
    },
    "2123": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "jump": "i",
      "offset": [
        12752,
        12790
      ],
      "op": "JUMP",
      "path": "66"
    },
    "2124": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "2125": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x20"
    },
    "2127": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "2129": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "2130": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "DUP1",
      "path": "66"
    },
    "2131": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "DUP4",
      "path": "66"
    },
    "2132": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "SUB",
      "path": "66"
    },
    "2133": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "DUP2",
      "path": "66"
    },
    "2134": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "DUP7",
      "path": "66"
    },
    "2135": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "DUP1",
      "path": "66"
    },
    "2136": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "EXTCODESIZE",
      "path": "66"
    },
    "2137": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "2138": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "DUP1",
      "path": "66"
    },
    "2139": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "2140": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x864"
    },
    "2143": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "2144": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "2146": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "DUP1",
      "path": "66"
    },
    "2147": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "REVERT",
      "path": "66"
    },
    "2148": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "2149": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "POP",
      "path": "66"
    },
    "2150": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "GAS",
      "path": "66"
    },
    "2151": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "STATICCALL",
      "path": "66"
    },
    "2152": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "2153": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "DUP1",
      "path": "66"
    },
    "2154": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "2155": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x878"
    },
    "2158": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "2159": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "2160": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "2162": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "DUP1",
      "path": "66"
    },
    "2163": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "RETURNDATACOPY",
      "path": "66"
    },
    "2164": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "2165": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "2167": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "REVERT",
      "path": "66"
    },
    "2168": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "2169": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "POP",
      "path": "66"
    },
    "2170": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "POP",
      "path": "66"
    },
    "2171": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "POP",
      "path": "66"
    },
    "2172": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "POP",
      "path": "66"
    },
    "2173": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "2175": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "2176": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "2177": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "2179": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "NOT",
      "path": "66"
    },
    "2180": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "2182": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "DUP3",
      "path": "66"
    },
    "2183": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "ADD",
      "path": "66"
    },
    "2184": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "AND",
      "path": "66"
    },
    "2185": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "DUP3",
      "path": "66"
    },
    "2186": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "ADD",
      "path": "66"
    },
    "2187": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "DUP1",
      "path": "66"
    },
    "2188": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "2190": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "2191": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "POP",
      "path": "66"
    },
    "2192": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "DUP2",
      "path": "66"
    },
    "2193": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "ADD",
      "path": "66"
    },
    "2194": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "2195": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x89C"
    },
    "2198": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "2199": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "2200": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3986"
    },
    "2203": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "jump": "i",
      "offset": [
        12752,
        12790
      ],
      "op": "JUMP",
      "path": "66"
    },
    "2204": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12752,
        12790
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "2205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2209": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2211": {
      "op": "SHL"
    },
    "2212": {
      "op": "SUB"
    },
    "2213": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12804,
        12827
      ],
      "op": "DUP2",
      "path": "66",
      "statement": 12
    },
    "2214": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12804,
        12827
      ],
      "op": "AND",
      "path": "66"
    },
    "2215": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12804,
        12827
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "2217": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12804,
        12827
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "2218": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12804,
        12827
      ],
      "op": "DUP2",
      "path": "66"
    },
    "2219": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12804,
        12827
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "2220": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12804,
        12823
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x84"
    },
    "2222": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12804,
        12827
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x20"
    },
    "2224": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12804,
        12827
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "2225": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12804,
        12827
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "2227": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12804,
        12827
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "2228": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12804,
        12827
      ],
      "op": "KECCAK256",
      "path": "66"
    },
    "2229": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12804,
        12827
      ],
      "op": "SLOAD",
      "path": "66"
    },
    "2230": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12739,
        12790
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "2231": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12739,
        12790
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "2232": {
      "op": "POP"
    },
    "2233": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12804,
        12827
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0xFF"
    },
    "2235": {
      "branch": 151,
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12804,
        12827
      ],
      "op": "AND",
      "path": "66"
    },
    "2236": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12796,
        12856
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x8D7"
    },
    "2239": {
      "branch": 151,
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12796,
        12856
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "2240": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12796,
        12856
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "2242": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12796,
        12856
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "2243": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2247": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2249": {
      "op": "SHL"
    },
    "2250": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12796,
        12856
      ],
      "op": "DUP2",
      "path": "66"
    },
    "2251": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12796,
        12856
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "2252": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12796,
        12856
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "2254": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12796,
        12856
      ],
      "op": "ADD",
      "path": "66"
    },
    "2255": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12796,
        12856
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x19C"
    },
    "2258": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12796,
        12856
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "2259": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12796,
        12856
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x42A2"
    },
    "2262": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "jump": "i",
      "offset": [
        12796,
        12856
      ],
      "op": "JUMP",
      "path": "66"
    },
    "2263": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12796,
        12856
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "2264": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12891,
        12902
      ],
      "op": "PUSH32",
      "path": "66",
      "statement": 13,
      "value": "0x0"
    },
    "2297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2301": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2303": {
      "op": "SHL"
    },
    "2304": {
      "op": "SUB"
    },
    "2305": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12870,
        12903
      ],
      "op": "AND",
      "path": "66"
    },
    "2306": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12870,
        12879
      ],
      "op": "DUP5",
      "path": "66"
    },
    "2307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2311": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2313": {
      "op": "SHL"
    },
    "2314": {
      "op": "SUB"
    },
    "2315": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12870,
        12903
      ],
      "op": "AND",
      "path": "66"
    },
    "2316": {
      "branch": 152,
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12870,
        12903
      ],
      "op": "EQ",
      "path": "66"
    },
    "2317": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12862,
        12949
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x928"
    },
    "2320": {
      "branch": 152,
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12862,
        12949
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "2321": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12862,
        12949
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "2323": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12862,
        12949
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "2324": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2328": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2330": {
      "op": "SHL"
    },
    "2331": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12862,
        12949
      ],
      "op": "DUP2",
      "path": "66"
    },
    "2332": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12862,
        12949
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "2333": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12862,
        12949
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "2335": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12862,
        12949
      ],
      "op": "ADD",
      "path": "66"
    },
    "2336": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12862,
        12949
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x19C"
    },
    "2339": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12862,
        12949
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "2340": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12862,
        12949
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x4373"
    },
    "2343": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "jump": "i",
      "offset": [
        12862,
        12949
      ],
      "op": "JUMP",
      "path": "66"
    },
    "2344": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12862,
        12949
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "2345": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12986,
        13045
      ],
      "op": "PUSH1",
      "path": "66",
      "statement": 14,
      "value": "0x40"
    },
    "2347": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12986,
        13045
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "2348": {
      "op": "PUSH4",
      "value": "0xD1D6975"
    },
    "2353": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "2355": {
      "op": "SHL"
    },
    "2356": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12986,
        13045
      ],
      "op": "DUP2",
      "path": "66"
    },
    "2357": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12986,
        13045
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "2358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2362": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2364": {
      "op": "SHL"
    },
    "2365": {
      "op": "SUB"
    },
    "2366": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12986,
        12990
      ],
      "op": "PUSH32",
      "path": "66",
      "value": "0x0"
    },
    "2399": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12986,
        13005
      ],
      "op": "AND",
      "path": "66"
    },
    "2400": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12986,
        13005
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "2401": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12986,
        13005
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0x68EB4BA8"
    },
    "2406": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12986,
        13005
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "2407": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12986,
        13045
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x99A"
    },
    "2410": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12986,
        13045
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "2411": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13014,
        13025
      ],
      "op": "PUSH32",
      "path": "66",
      "value": "0x0"
    },
    "2444": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13014,
        13025
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "2445": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13028,
        13034
      ],
      "op": "DUP8",
      "path": "66"
    },
    "2446": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13028,
        13034
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "2447": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2449": {
      "op": "NOT"
    },
    "2450": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13041,
        13043
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "2451": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12986,
        13045
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "2453": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12986,
        13045
      ],
      "op": "ADD",
      "path": "66"
    },
    "2454": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12986,
        13045
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3FC8"
    },
    "2457": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "jump": "i",
      "offset": [
        12986,
        13045
      ],
      "op": "JUMP",
      "path": "66"
    },
    "2458": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12986,
        13045
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "2459": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12986,
        13045
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "2461": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12986,
        13045
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "2463": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12986,
        13045
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "2464": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12986,
        13045
      ],
      "op": "DUP1",
      "path": "66"
    },
    "2465": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12986,
        13045
      ],
      "op": "DUP4",
      "path": "66"
    },
    "2466": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12986,
        13045
      ],
      "op": "SUB",
      "path": "66"
    },
    "2467": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12986,
        13045
      ],
      "op": "DUP2",
      "path": "66"
    },
    "2468": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12986,
        13045
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "2470": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12986,
        13045
      ],
      "op": "DUP8",
      "path": "66"
    },
    "2471": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12986,
        13045
      ],
      "op": "DUP1",
      "path": "66"
    },
    "2472": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12986,
        13045
      ],
      "op": "EXTCODESIZE",
      "path": "66"
    },
    "2473": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12986,
        13045
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "2474": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12986,
        13045
      ],
      "op": "DUP1",
      "path": "66"
    },
    "2475": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12986,
        13045
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "2476": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12986,
        13045
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x9B4"
    },
    "2479": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12986,
        13045
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "2480": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12986,
        13045
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "2482": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12986,
        13045
      ],
      "op": "DUP1",
      "path": "66"
    },
    "2483": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12986,
        13045
      ],
      "op": "REVERT",
      "path": "66"
    },
    "2484": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12986,
        13045
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "2485": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12986,
        13045
      ],
      "op": "POP",
      "path": "66"
    },
    "2486": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12986,
        13045
      ],
      "op": "GAS",
      "path": "66"
    },
    "2487": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12986,
        13045
      ],
      "op": "CALL",
      "path": "66"
    },
    "2488": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12986,
        13045
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "2489": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12986,
        13045
      ],
      "op": "DUP1",
      "path": "66"
    },
    "2490": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12986,
        13045
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "2491": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12986,
        13045
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x9C8"
    },
    "2494": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12986,
        13045
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "2495": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12986,
        13045
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "2496": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12986,
        13045
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "2498": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12986,
        13045
      ],
      "op": "DUP1",
      "path": "66"
    },
    "2499": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12986,
        13045
      ],
      "op": "RETURNDATACOPY",
      "path": "66"
    },
    "2500": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12986,
        13045
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "2501": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12986,
        13045
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "2503": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12986,
        13045
      ],
      "op": "REVERT",
      "path": "66"
    },
    "2504": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12986,
        13045
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "2505": {
      "op": "POP"
    },
    "2506": {
      "op": "POP"
    },
    "2507": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "PUSH1",
      "path": "66",
      "statement": 15,
      "value": "0x40"
    },
    "2509": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "2510": {
      "op": "PUSH4",
      "value": "0xB390C0AB"
    },
    "2515": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2517": {
      "op": "SHL"
    },
    "2518": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "DUP2",
      "path": "66"
    },
    "2519": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "2520": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2522": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2524": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2526": {
      "op": "SHL"
    },
    "2527": {
      "op": "SUB"
    },
    "2528": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13062
      ],
      "op": "PUSH32",
      "path": "66",
      "value": "0x0"
    },
    "2561": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13067
      ],
      "op": "AND",
      "path": "66"
    },
    "2562": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13067
      ],
      "op": "SWAP3",
      "path": "66"
    },
    "2563": {
      "op": "POP"
    },
    "2564": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13067
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0xB390C0AB"
    },
    "2569": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13067
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "2570": {
      "op": "POP"
    },
    "2571": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0xA1C"
    },
    "2574": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "2575": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13068,
        13074
      ],
      "op": "DUP7",
      "path": "66"
    },
    "2576": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13068,
        13074
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "2577": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2579": {
      "op": "NOT"
    },
    "2580": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13081,
        13083
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "2581": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "2583": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "ADD",
      "path": "66"
    },
    "2584": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x4566"
    },
    "2587": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "jump": "i",
      "offset": [
        13051,
        13085
      ],
      "op": "JUMP",
      "path": "66"
    },
    "2588": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "2589": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x20"
    },
    "2591": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "2593": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "2594": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "DUP1",
      "path": "66"
    },
    "2595": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "DUP4",
      "path": "66"
    },
    "2596": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "SUB",
      "path": "66"
    },
    "2597": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "DUP2",
      "path": "66"
    },
    "2598": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "2600": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "DUP8",
      "path": "66"
    },
    "2601": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "DUP1",
      "path": "66"
    },
    "2602": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "EXTCODESIZE",
      "path": "66"
    },
    "2603": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "2604": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "DUP1",
      "path": "66"
    },
    "2605": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "2606": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0xA36"
    },
    "2609": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "2610": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "2612": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "DUP1",
      "path": "66"
    },
    "2613": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "REVERT",
      "path": "66"
    },
    "2614": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "2615": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "POP",
      "path": "66"
    },
    "2616": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "GAS",
      "path": "66"
    },
    "2617": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "CALL",
      "path": "66"
    },
    "2618": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "2619": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "DUP1",
      "path": "66"
    },
    "2620": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "2621": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0xA4A"
    },
    "2624": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "2625": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "2626": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "2628": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "DUP1",
      "path": "66"
    },
    "2629": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "RETURNDATACOPY",
      "path": "66"
    },
    "2630": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "2631": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "2633": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "REVERT",
      "path": "66"
    },
    "2634": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "2635": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "POP",
      "path": "66"
    },
    "2636": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "POP",
      "path": "66"
    },
    "2637": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "POP",
      "path": "66"
    },
    "2638": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "POP",
      "path": "66"
    },
    "2639": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "2641": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "2642": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "2643": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "2645": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "NOT",
      "path": "66"
    },
    "2646": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "2648": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "DUP3",
      "path": "66"
    },
    "2649": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "ADD",
      "path": "66"
    },
    "2650": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "AND",
      "path": "66"
    },
    "2651": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "DUP3",
      "path": "66"
    },
    "2652": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "ADD",
      "path": "66"
    },
    "2653": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "DUP1",
      "path": "66"
    },
    "2654": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "2656": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "2657": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "POP",
      "path": "66"
    },
    "2658": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "DUP2",
      "path": "66"
    },
    "2659": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "ADD",
      "path": "66"
    },
    "2660": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "2661": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0xA6E"
    },
    "2664": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "2665": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "2666": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3E31"
    },
    "2669": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "jump": "i",
      "offset": [
        13051,
        13085
      ],
      "op": "JUMP",
      "path": "66"
    },
    "2670": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13051,
        13085
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "2671": {
      "op": "POP"
    },
    "2672": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "2674": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "2675": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2680": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2682": {
      "op": "SHL"
    },
    "2683": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "DUP2",
      "path": "66"
    },
    "2684": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "2685": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13117,
        13128
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "2687": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13117,
        13128
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "2688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2692": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2694": {
      "op": "SHL"
    },
    "2695": {
      "op": "SUB"
    },
    "2696": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13151
      ],
      "op": "DUP4",
      "path": "66"
    },
    "2697": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13151
      ],
      "op": "AND",
      "path": "66"
    },
    "2698": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13151
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "2699": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13151
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0x70A08231"
    },
    "2704": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13151
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "2705": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0xA9E"
    },
    "2708": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "2709": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13160,
        13164
      ],
      "op": "ADDRESS",
      "path": "66"
    },
    "2710": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13160,
        13164
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "2711": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "2713": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "ADD",
      "path": "66"
    },
    "2714": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3EF8"
    },
    "2717": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "jump": "i",
      "offset": [
        13131,
        13166
      ],
      "op": "JUMP",
      "path": "66"
    },
    "2718": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "2719": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x20"
    },
    "2721": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "2723": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "2724": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "DUP1",
      "path": "66"
    },
    "2725": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "DUP4",
      "path": "66"
    },
    "2726": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "SUB",
      "path": "66"
    },
    "2727": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "DUP2",
      "path": "66"
    },
    "2728": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "DUP7",
      "path": "66"
    },
    "2729": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "DUP1",
      "path": "66"
    },
    "2730": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "EXTCODESIZE",
      "path": "66"
    },
    "2731": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "2732": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "DUP1",
      "path": "66"
    },
    "2733": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "2734": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0xAB6"
    },
    "2737": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "2738": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "2740": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "DUP1",
      "path": "66"
    },
    "2741": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "REVERT",
      "path": "66"
    },
    "2742": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "2743": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "POP",
      "path": "66"
    },
    "2744": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "GAS",
      "path": "66"
    },
    "2745": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "STATICCALL",
      "path": "66"
    },
    "2746": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "2747": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "DUP1",
      "path": "66"
    },
    "2748": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "2749": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0xACA"
    },
    "2752": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "2753": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "2754": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "2756": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "DUP1",
      "path": "66"
    },
    "2757": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "RETURNDATACOPY",
      "path": "66"
    },
    "2758": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "2759": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "2761": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "REVERT",
      "path": "66"
    },
    "2762": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "2763": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "POP",
      "path": "66"
    },
    "2764": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "POP",
      "path": "66"
    },
    "2765": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "POP",
      "path": "66"
    },
    "2766": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "POP",
      "path": "66"
    },
    "2767": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "2769": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "2770": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "2771": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "2773": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "NOT",
      "path": "66"
    },
    "2774": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "2776": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "DUP3",
      "path": "66"
    },
    "2777": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "ADD",
      "path": "66"
    },
    "2778": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "AND",
      "path": "66"
    },
    "2779": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "DUP3",
      "path": "66"
    },
    "2780": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "ADD",
      "path": "66"
    },
    "2781": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "DUP1",
      "path": "66"
    },
    "2782": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "2784": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "2785": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "POP",
      "path": "66"
    },
    "2786": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "DUP2",
      "path": "66"
    },
    "2787": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "ADD",
      "path": "66"
    },
    "2788": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "2789": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0xAEE"
    },
    "2792": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "2793": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "2794": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3E31"
    },
    "2797": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "jump": "i",
      "offset": [
        13131,
        13166
      ],
      "op": "JUMP",
      "path": "66"
    },
    "2798": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13131,
        13166
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "2799": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13117,
        13166
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "2800": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13117,
        13166
      ],
      "op": "POP",
      "path": "66"
    },
    "2801": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13172,
        13211
      ],
      "op": "PUSH2",
      "path": "66",
      "statement": 16,
      "value": "0xB1A"
    },
    "2804": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13186,
        13188
      ],
      "op": "DUP3",
      "path": "66"
    },
    "2805": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13198,
        13209
      ],
      "op": "PUSH32",
      "path": "66",
      "value": "0x0"
    },
    "2838": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13172,
        13185
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x26B8"
    },
    "2841": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "jump": "i",
      "offset": [
        13172,
        13211
      ],
      "op": "JUMP",
      "path": "66"
    },
    "2842": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13172,
        13211
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "2843": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "2845": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "2846": {
      "op": "PUSH4",
      "value": "0xD9778E5"
    },
    "2851": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2853": {
      "op": "SHL"
    },
    "2854": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "DUP2",
      "path": "66"
    },
    "2855": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "2856": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13217,
        13224
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "2858": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13217,
        13224
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "2859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2863": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2865": {
      "op": "SHL"
    },
    "2866": {
      "op": "SUB"
    },
    "2867": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13238
      ],
      "op": "PUSH32",
      "path": "66",
      "value": "0x0"
    },
    "2900": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13243
      ],
      "op": "AND",
      "path": "66"
    },
    "2901": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13243
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "2902": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13243
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0x1B2EF1CA"
    },
    "2907": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13243
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "2908": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0xB6B"
    },
    "2911": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "2912": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13244,
        13247
      ],
      "op": "DUP8",
      "path": "66"
    },
    "2913": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13244,
        13247
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "2914": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13249,
        13255
      ],
      "op": "DUP7",
      "path": "66"
    },
    "2915": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13249,
        13255
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "2916": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "2918": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "ADD",
      "path": "66"
    },
    "2919": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x4566"
    },
    "2922": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "jump": "i",
      "offset": [
        13227,
        13256
      ],
      "op": "JUMP",
      "path": "66"
    },
    "2923": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "2924": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x20"
    },
    "2926": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "2928": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "2929": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "DUP1",
      "path": "66"
    },
    "2930": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "DUP4",
      "path": "66"
    },
    "2931": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "SUB",
      "path": "66"
    },
    "2932": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "DUP2",
      "path": "66"
    },
    "2933": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "2935": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "DUP8",
      "path": "66"
    },
    "2936": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "DUP1",
      "path": "66"
    },
    "2937": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "EXTCODESIZE",
      "path": "66"
    },
    "2938": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "2939": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "DUP1",
      "path": "66"
    },
    "2940": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "2941": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0xB85"
    },
    "2944": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "2945": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "2947": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "DUP1",
      "path": "66"
    },
    "2948": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "REVERT",
      "path": "66"
    },
    "2949": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "2950": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "POP",
      "path": "66"
    },
    "2951": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "GAS",
      "path": "66"
    },
    "2952": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "CALL",
      "path": "66"
    },
    "2953": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "2954": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "DUP1",
      "path": "66"
    },
    "2955": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "2956": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0xB99"
    },
    "2959": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "2960": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "2961": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "2963": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "DUP1",
      "path": "66"
    },
    "2964": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "RETURNDATACOPY",
      "path": "66"
    },
    "2965": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "2966": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "2968": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "REVERT",
      "path": "66"
    },
    "2969": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "2970": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "POP",
      "path": "66"
    },
    "2971": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "POP",
      "path": "66"
    },
    "2972": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "POP",
      "path": "66"
    },
    "2973": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "POP",
      "path": "66"
    },
    "2974": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "2976": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "2977": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "2978": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "2980": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "NOT",
      "path": "66"
    },
    "2981": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "2983": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "DUP3",
      "path": "66"
    },
    "2984": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "ADD",
      "path": "66"
    },
    "2985": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "AND",
      "path": "66"
    },
    "2986": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "DUP3",
      "path": "66"
    },
    "2987": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "ADD",
      "path": "66"
    },
    "2988": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "DUP1",
      "path": "66"
    },
    "2989": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "2991": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "2992": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "POP",
      "path": "66"
    },
    "2993": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "DUP2",
      "path": "66"
    },
    "2994": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "ADD",
      "path": "66"
    },
    "2995": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "2996": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0xBBD"
    },
    "2999": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "3000": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "3001": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3E31"
    },
    "3004": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "jump": "i",
      "offset": [
        13227,
        13256
      ],
      "op": "JUMP",
      "path": "66"
    },
    "3005": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13227,
        13256
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "3006": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13314
      ],
      "op": "PUSH1",
      "path": "66",
      "statement": 17,
      "value": "0x40"
    },
    "3008": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13314
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "3009": {
      "op": "PUSH4",
      "value": "0x314568D9"
    },
    "3014": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3016": {
      "op": "SHL"
    },
    "3017": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13314
      ],
      "op": "DUP2",
      "path": "66"
    },
    "3018": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13314
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "3019": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13217,
        13256
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "3020": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13217,
        13256
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "3021": {
      "op": "POP"
    },
    "3022": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3024": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3026": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3028": {
      "op": "SHL"
    },
    "3029": {
      "op": "SUB"
    },
    "3030": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13266
      ],
      "op": "PUSH32",
      "path": "66",
      "value": "0x0"
    },
    "3063": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13280
      ],
      "op": "AND",
      "path": "66"
    },
    "3064": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13280
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "3065": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13280
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0x314568D9"
    },
    "3070": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13280
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "3071": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13314
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0xC30"
    },
    "3074": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13314
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "3075": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13289,
        13300
      ],
      "op": "PUSH32",
      "path": "66",
      "value": "0x0"
    },
    "3108": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13289,
        13300
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "3109": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13217,
        13256
      ],
      "op": "DUP6",
      "path": "66"
    },
    "3110": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13217,
        13256
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "3111": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13307,
        13313
      ],
      "op": "DUP8",
      "path": "66"
    },
    "3112": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13307,
        13313
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "3113": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13314
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "3115": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13314
      ],
      "op": "ADD",
      "path": "66"
    },
    "3116": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13314
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3FC8"
    },
    "3119": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "jump": "i",
      "offset": [
        13262,
        13314
      ],
      "op": "JUMP",
      "path": "66"
    },
    "3120": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13314
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "3121": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13314
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "3123": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13314
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "3125": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13314
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "3126": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13314
      ],
      "op": "DUP1",
      "path": "66"
    },
    "3127": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13314
      ],
      "op": "DUP4",
      "path": "66"
    },
    "3128": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13314
      ],
      "op": "SUB",
      "path": "66"
    },
    "3129": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13314
      ],
      "op": "DUP2",
      "path": "66"
    },
    "3130": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13314
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "3132": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13314
      ],
      "op": "DUP8",
      "path": "66"
    },
    "3133": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13314
      ],
      "op": "DUP1",
      "path": "66"
    },
    "3134": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13314
      ],
      "op": "EXTCODESIZE",
      "path": "66"
    },
    "3135": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13314
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "3136": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13314
      ],
      "op": "DUP1",
      "path": "66"
    },
    "3137": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13314
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "3138": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13314
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0xC4A"
    },
    "3141": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13314
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "3142": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13314
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "3144": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13314
      ],
      "op": "DUP1",
      "path": "66"
    },
    "3145": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13314
      ],
      "op": "REVERT",
      "path": "66"
    },
    "3146": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13314
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "3147": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13314
      ],
      "op": "POP",
      "path": "66"
    },
    "3148": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13314
      ],
      "op": "GAS",
      "path": "66"
    },
    "3149": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13314
      ],
      "op": "CALL",
      "path": "66"
    },
    "3150": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13314
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "3151": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13314
      ],
      "op": "DUP1",
      "path": "66"
    },
    "3152": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13314
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "3153": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13314
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0xC5E"
    },
    "3156": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13314
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "3157": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13314
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "3158": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13314
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "3160": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13314
      ],
      "op": "DUP1",
      "path": "66"
    },
    "3161": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13314
      ],
      "op": "RETURNDATACOPY",
      "path": "66"
    },
    "3162": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13314
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "3163": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13314
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "3165": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13314
      ],
      "op": "REVERT",
      "path": "66"
    },
    "3166": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13314
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "3167": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13314
      ],
      "op": "POP",
      "path": "66"
    },
    "3168": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13314
      ],
      "op": "POP",
      "path": "66"
    },
    "3169": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13314
      ],
      "op": "POP",
      "path": "66"
    },
    "3170": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13262,
        13314
      ],
      "op": "POP",
      "path": "66"
    },
    "3171": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13344,
        13359
      ],
      "op": "PUSH2",
      "path": "66",
      "statement": 18,
      "value": "0xC8B"
    },
    "3174": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13353,
        13358
      ],
      "op": "PUSH32",
      "path": "66",
      "value": "0x0"
    },
    "3207": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13344,
        13352
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x272F"
    },
    "3210": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "jump": "i",
      "offset": [
        13344,
        13359
      ],
      "op": "JUMP",
      "path": "66"
    },
    "3211": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        13344,
        13359
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "3212": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12571,
        13364
      ],
      "op": "POP",
      "path": "66"
    },
    "3213": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12571,
        13364
      ],
      "op": "POP",
      "path": "66"
    },
    "3214": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12571,
        13364
      ],
      "op": "POP",
      "path": "66"
    },
    "3215": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12571,
        13364
      ],
      "op": "POP",
      "path": "66"
    },
    "3216": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12571,
        13364
      ],
      "op": "POP",
      "path": "66"
    },
    "3217": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        12571,
        13364
      ],
      "op": "POP",
      "path": "66"
    },
    "3218": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "jump": "o",
      "offset": [
        12571,
        13364
      ],
      "op": "JUMP",
      "path": "66"
    },
    "3219": {
      "offset": [
        168,
        219
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "3220": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        168,
        219
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x84"
    },
    "3222": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        168,
        219
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "3224": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        168,
        219
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "3225": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        168,
        219
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "3227": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        168,
        219
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3228": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        168,
        219
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3229": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        168,
        219
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "3230": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        168,
        219
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3232": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        168,
        219
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3233": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        168,
        219
      ],
      "op": "KECCAK256",
      "path": "68"
    },
    "3234": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        168,
        219
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "3235": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        168,
        219
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0xFF"
    },
    "3237": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        168,
        219
      ],
      "op": "AND",
      "path": "68"
    },
    "3238": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        168,
        219
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3239": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "jump": "o",
      "offset": [
        168,
        219
      ],
      "op": "JUMP",
      "path": "68"
    },
    "3240": {
      "offset": [
        509,
        540
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "3241": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        509,
        540
      ],
      "op": "PUSH32",
      "path": "63",
      "value": "0x0"
    },
    "3274": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        509,
        540
      ],
      "op": "DUP2",
      "path": "63"
    },
    "3275": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "jump": "o",
      "offset": [
        509,
        540
      ],
      "op": "JUMP",
      "path": "63"
    },
    "3276": {
      "offset": [
        752,
        812
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "3277": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        752,
        812
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x85"
    },
    "3279": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        752,
        812
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x20"
    },
    "3281": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        752,
        812
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "3282": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        752,
        812
      ],
      "op": "DUP2",
      "path": "66"
    },
    "3283": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        752,
        812
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "3284": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        752,
        812
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "3286": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        752,
        812
      ],
      "op": "SWAP3",
      "path": "66"
    },
    "3287": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        752,
        812
      ],
      "op": "DUP4",
      "path": "66"
    },
    "3288": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        752,
        812
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "3289": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        752,
        812
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "3291": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        752,
        812
      ],
      "op": "DUP1",
      "path": "66"
    },
    "3292": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        752,
        812
      ],
      "op": "DUP5",
      "path": "66"
    },
    "3293": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        752,
        812
      ],
      "op": "KECCAK256",
      "path": "66"
    },
    "3294": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        752,
        812
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "3295": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        752,
        812
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "3296": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        752,
        812
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "3297": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        752,
        812
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "3298": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        752,
        812
      ],
      "op": "DUP3",
      "path": "66"
    },
    "3299": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        752,
        812
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "3300": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        752,
        812
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "3301": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        752,
        812
      ],
      "op": "KECCAK256",
      "path": "66"
    },
    "3302": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        752,
        812
      ],
      "op": "SLOAD",
      "path": "66"
    },
    "3303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3307": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3309": {
      "op": "SHL"
    },
    "3310": {
      "op": "SUB"
    },
    "3311": {
      "offset": [
        752,
        812
      ],
      "op": "AND",
      "path": "66"
    },
    "3312": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        752,
        812
      ],
      "op": "DUP2",
      "path": "66"
    },
    "3313": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "jump": "o",
      "offset": [
        752,
        812
      ],
      "op": "JUMP",
      "path": "66"
    },
    "3314": {
      "offset": [
        478,
        505
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "3315": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        478,
        505
      ],
      "op": "PUSH32",
      "path": "63",
      "value": "0x0"
    },
    "3348": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        478,
        505
      ],
      "op": "DUP2",
      "path": "63"
    },
    "3349": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "jump": "o",
      "offset": [
        478,
        505
      ],
      "op": "JUMP",
      "path": "63"
    },
    "3350": {
      "offset": [
        877,
        918
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "3351": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        877,
        918
      ],
      "op": "PUSH32",
      "path": "66",
      "value": "0x0"
    },
    "3384": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "offset": [
        877,
        918
      ],
      "op": "DUP2",
      "path": "66"
    },
    "3385": {
      "fn": "SushiswapSpellV1.harvestWMasterChef",
      "jump": "o",
      "offset": [
        877,
        918
      ],
      "op": "JUMP",
      "path": "66"
    },
    "3386": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        11786,
        12500
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "3387": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        11912,
        11922
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "3389": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        11925,
        11958
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0xD46"
    },
    "3392": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        11943,
        11949
      ],
      "op": "DUP5",
      "path": "66"
    },
    "3393": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        11951,
        11957
      ],
      "op": "DUP5",
      "path": "66"
    },
    "3394": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        11925,
        11942
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x4D0"
    },
    "3397": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "jump": "i",
      "offset": [
        11925,
        11958
      ],
      "op": "JUMP",
      "path": "66"
    },
    "3398": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        11925,
        11958
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "3399": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        11912,
        11958
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "3400": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        11912,
        11958
      ],
      "op": "POP",
      "path": "66"
    },
    "3401": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        11967,
        11984
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "3403": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        11986,
        11997
      ],
      "op": "DUP1",
      "path": "66"
    },
    "3404": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12007
      ],
      "op": "PUSH32",
      "path": "66",
      "value": "0x0"
    },
    "3437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3441": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3443": {
      "op": "SHL"
    },
    "3444": {
      "op": "SUB"
    },
    "3445": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12030
      ],
      "op": "AND",
      "path": "66"
    },
    "3446": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12030
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0xF70AEDD9"
    },
    "3451": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "3453": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "3454": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "DUP2",
      "path": "66"
    },
    "3455": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0xFFFFFFFF"
    },
    "3460": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "AND",
      "path": "66"
    },
    "3461": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0xE0"
    },
    "3463": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "SHL",
      "path": "66"
    },
    "3464": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "DUP2",
      "path": "66"
    },
    "3465": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "3466": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "3468": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "ADD",
      "path": "66"
    },
    "3469": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x80"
    },
    "3471": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "3473": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "3474": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "DUP1",
      "path": "66"
    },
    "3475": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "DUP4",
      "path": "66"
    },
    "3476": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "SUB",
      "path": "66"
    },
    "3477": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "DUP2",
      "path": "66"
    },
    "3478": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "DUP7",
      "path": "66"
    },
    "3479": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "DUP1",
      "path": "66"
    },
    "3480": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "EXTCODESIZE",
      "path": "66"
    },
    "3481": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "3482": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "DUP1",
      "path": "66"
    },
    "3483": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "3484": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0xDA4"
    },
    "3487": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "3488": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "3490": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "DUP1",
      "path": "66"
    },
    "3491": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "REVERT",
      "path": "66"
    },
    "3492": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "3493": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "POP",
      "path": "66"
    },
    "3494": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "GAS",
      "path": "66"
    },
    "3495": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "STATICCALL",
      "path": "66"
    },
    "3496": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "3497": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "DUP1",
      "path": "66"
    },
    "3498": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "3499": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0xDB8"
    },
    "3502": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "3503": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "3504": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "3506": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "DUP1",
      "path": "66"
    },
    "3507": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "RETURNDATACOPY",
      "path": "66"
    },
    "3508": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "3509": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "3511": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "REVERT",
      "path": "66"
    },
    "3512": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "3513": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "POP",
      "path": "66"
    },
    "3514": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "POP",
      "path": "66"
    },
    "3515": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "POP",
      "path": "66"
    },
    "3516": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "POP",
      "path": "66"
    },
    "3517": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "3519": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "3520": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "3521": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "3523": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "NOT",
      "path": "66"
    },
    "3524": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "3526": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "DUP3",
      "path": "66"
    },
    "3527": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "ADD",
      "path": "66"
    },
    "3528": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "AND",
      "path": "66"
    },
    "3529": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "DUP3",
      "path": "66"
    },
    "3530": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "ADD",
      "path": "66"
    },
    "3531": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "DUP1",
      "path": "66"
    },
    "3532": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "3534": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "3535": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "POP",
      "path": "66"
    },
    "3536": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "DUP2",
      "path": "66"
    },
    "3537": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "ADD",
      "path": "66"
    },
    "3538": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "3539": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0xDDC"
    },
    "3542": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "3543": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "3544": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3B80"
    },
    "3547": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "jump": "i",
      "offset": [
        12003,
        12032
      ],
      "op": "JUMP",
      "path": "66"
    },
    "3548": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12003,
        12032
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "3549": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        11964,
        12032
      ],
      "op": "POP",
      "path": "66"
    },
    "3550": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        11964,
        12032
      ],
      "op": "SWAP3",
      "path": "66"
    },
    "3551": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        11964,
        12032
      ],
      "op": "POP",
      "path": "66"
    },
    "3552": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        11964,
        12032
      ],
      "op": "SWAP3",
      "path": "66"
    },
    "3553": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        11964,
        12032
      ],
      "op": "POP",
      "path": "66"
    },
    "3554": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        11964,
        12032
      ],
      "op": "POP",
      "path": "66"
    },
    "3555": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12100,
        12102
      ],
      "op": "DUP3",
      "path": "66",
      "statement": 19
    },
    "3556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3560": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3562": {
      "op": "SHL"
    },
    "3563": {
      "op": "SUB"
    },
    "3564": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12102
      ],
      "op": "AND",
      "path": "66"
    },
    "3565": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12059,
        12068
      ],
      "op": "DUP3",
      "path": "66"
    },
    "3566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3570": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3572": {
      "op": "SHL"
    },
    "3573": {
      "op": "SUB"
    },
    "3574": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12088
      ],
      "op": "AND",
      "path": "66"
    },
    "3575": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12088
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0xA4775772"
    },
    "3580": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12089,
        12095
      ],
      "op": "DUP4",
      "path": "66"
    },
    "3581": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "3583": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "3584": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "DUP3",
      "path": "66"
    },
    "3585": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0xFFFFFFFF"
    },
    "3590": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "AND",
      "path": "66"
    },
    "3591": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0xE0"
    },
    "3593": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "SHL",
      "path": "66"
    },
    "3594": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "DUP2",
      "path": "66"
    },
    "3595": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "3596": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "3598": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "ADD",
      "path": "66"
    },
    "3599": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0xE18"
    },
    "3602": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "3603": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "3604": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x450A"
    },
    "3607": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "jump": "i",
      "offset": [
        12046,
        12096
      ],
      "op": "JUMP",
      "path": "66"
    },
    "3608": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "3609": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x20"
    },
    "3611": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "3613": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "3614": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "DUP1",
      "path": "66"
    },
    "3615": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "DUP4",
      "path": "66"
    },
    "3616": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "SUB",
      "path": "66"
    },
    "3617": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "DUP2",
      "path": "66"
    },
    "3618": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "DUP7",
      "path": "66"
    },
    "3619": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "DUP1",
      "path": "66"
    },
    "3620": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "EXTCODESIZE",
      "path": "66"
    },
    "3621": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "3622": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "DUP1",
      "path": "66"
    },
    "3623": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "3624": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0xE30"
    },
    "3627": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "3628": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "3630": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "DUP1",
      "path": "66"
    },
    "3631": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "REVERT",
      "path": "66"
    },
    "3632": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "3633": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "POP",
      "path": "66"
    },
    "3634": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "GAS",
      "path": "66"
    },
    "3635": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "STATICCALL",
      "path": "66"
    },
    "3636": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "3637": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "DUP1",
      "path": "66"
    },
    "3638": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "3639": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0xE44"
    },
    "3642": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "3643": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "3644": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "3646": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "DUP1",
      "path": "66"
    },
    "3647": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "RETURNDATACOPY",
      "path": "66"
    },
    "3648": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "3649": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "3651": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "REVERT",
      "path": "66"
    },
    "3652": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "3653": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "POP",
      "path": "66"
    },
    "3654": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "POP",
      "path": "66"
    },
    "3655": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "POP",
      "path": "66"
    },
    "3656": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "POP",
      "path": "66"
    },
    "3657": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "3659": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "3660": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "3661": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "3663": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "NOT",
      "path": "66"
    },
    "3664": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "3666": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "DUP3",
      "path": "66"
    },
    "3667": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "ADD",
      "path": "66"
    },
    "3668": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "AND",
      "path": "66"
    },
    "3669": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "DUP3",
      "path": "66"
    },
    "3670": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "ADD",
      "path": "66"
    },
    "3671": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "DUP1",
      "path": "66"
    },
    "3672": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "3674": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "3675": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "POP",
      "path": "66"
    },
    "3676": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "DUP2",
      "path": "66"
    },
    "3677": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "ADD",
      "path": "66"
    },
    "3678": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "3679": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0xE68"
    },
    "3682": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "3683": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "3684": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3986"
    },
    "3687": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "jump": "i",
      "offset": [
        12046,
        12096
      ],
      "op": "JUMP",
      "path": "66"
    },
    "3688": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12096
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "3689": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3693": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3695": {
      "op": "SHL"
    },
    "3696": {
      "op": "SUB"
    },
    "3697": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12102
      ],
      "op": "AND",
      "path": "66"
    },
    "3698": {
      "branch": 153,
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12046,
        12102
      ],
      "op": "EQ",
      "path": "66"
    },
    "3699": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12038,
        12127
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0xE8E"
    },
    "3702": {
      "branch": 153,
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12038,
        12127
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "3703": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12038,
        12127
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "3705": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12038,
        12127
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "3706": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3710": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3712": {
      "op": "SHL"
    },
    "3713": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12038,
        12127
      ],
      "op": "DUP2",
      "path": "66"
    },
    "3714": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12038,
        12127
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "3715": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12038,
        12127
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "3717": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12038,
        12127
      ],
      "op": "ADD",
      "path": "66"
    },
    "3718": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12038,
        12127
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x19C"
    },
    "3721": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12038,
        12127
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "3722": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12038,
        12127
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x443C"
    },
    "3725": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "jump": "i",
      "offset": [
        12038,
        12127
      ],
      "op": "JUMP",
      "path": "66"
    },
    "3726": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12038,
        12127
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "3727": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12162,
        12173
      ],
      "op": "PUSH32",
      "path": "66",
      "statement": 20,
      "value": "0x0"
    },
    "3760": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3762": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3764": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3766": {
      "op": "SHL"
    },
    "3767": {
      "op": "SUB"
    },
    "3768": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12141,
        12174
      ],
      "op": "AND",
      "path": "66"
    },
    "3769": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12141,
        12150
      ],
      "op": "DUP3",
      "path": "66"
    },
    "3770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3774": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3776": {
      "op": "SHL"
    },
    "3777": {
      "op": "SUB"
    },
    "3778": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12141,
        12174
      ],
      "op": "AND",
      "path": "66"
    },
    "3779": {
      "branch": 154,
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12141,
        12174
      ],
      "op": "EQ",
      "path": "66"
    },
    "3780": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12133,
        12220
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0xEDF"
    },
    "3783": {
      "branch": 154,
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12133,
        12220
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "3784": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12133,
        12220
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "3786": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12133,
        12220
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "3787": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3791": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3793": {
      "op": "SHL"
    },
    "3794": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12133,
        12220
      ],
      "op": "DUP2",
      "path": "66"
    },
    "3795": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12133,
        12220
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "3796": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12133,
        12220
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "3798": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12133,
        12220
      ],
      "op": "ADD",
      "path": "66"
    },
    "3799": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12133,
        12220
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x19C"
    },
    "3802": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12133,
        12220
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "3803": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12133,
        12220
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x4373"
    },
    "3806": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "jump": "i",
      "offset": [
        12133,
        12220
      ],
      "op": "JUMP",
      "path": "66"
    },
    "3807": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12133,
        12220
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "3808": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12257,
        12321
      ],
      "op": "PUSH1",
      "path": "66",
      "statement": 21,
      "value": "0x40"
    },
    "3810": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12257,
        12321
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "3811": {
      "op": "PUSH4",
      "value": "0xD1D6975"
    },
    "3816": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "3818": {
      "op": "SHL"
    },
    "3819": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12257,
        12321
      ],
      "op": "DUP2",
      "path": "66"
    },
    "3820": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12257,
        12321
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "3821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3823": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3825": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3827": {
      "op": "SHL"
    },
    "3828": {
      "op": "SUB"
    },
    "3829": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12257,
        12261
      ],
      "op": "PUSH32",
      "path": "66",
      "value": "0x0"
    },
    "3862": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12257,
        12276
      ],
      "op": "AND",
      "path": "66"
    },
    "3863": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12257,
        12276
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "3864": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12257,
        12276
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0x68EB4BA8"
    },
    "3869": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12257,
        12276
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "3870": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12257,
        12321
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0xF50"
    },
    "3873": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12257,
        12321
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "3874": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12285,
        12296
      ],
      "op": "PUSH32",
      "path": "66",
      "value": "0x0"
    },
    "3907": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12285,
        12296
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "3908": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12299,
        12305
      ],
      "op": "DUP6",
      "path": "66"
    },
    "3909": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12299,
        12305
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "3910": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12307,
        12320
      ],
      "op": "DUP10",
      "path": "66"
    },
    "3911": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12307,
        12320
      ],
      "op": "CALLDATALOAD",
      "path": "66"
    },
    "3912": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12307,
        12320
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "3913": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12257,
        12321
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "3915": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12257,
        12321
      ],
      "op": "ADD",
      "path": "66"
    },
    "3916": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12257,
        12321
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3FC8"
    },
    "3919": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "jump": "i",
      "offset": [
        12257,
        12321
      ],
      "op": "JUMP",
      "path": "66"
    },
    "3920": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12257,
        12321
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "3921": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12257,
        12321
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "3923": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12257,
        12321
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "3925": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12257,
        12321
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "3926": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12257,
        12321
      ],
      "op": "DUP1",
      "path": "66"
    },
    "3927": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12257,
        12321
      ],
      "op": "DUP4",
      "path": "66"
    },
    "3928": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12257,
        12321
      ],
      "op": "SUB",
      "path": "66"
    },
    "3929": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12257,
        12321
      ],
      "op": "DUP2",
      "path": "66"
    },
    "3930": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12257,
        12321
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "3932": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12257,
        12321
      ],
      "op": "DUP8",
      "path": "66"
    },
    "3933": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12257,
        12321
      ],
      "op": "DUP1",
      "path": "66"
    },
    "3934": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12257,
        12321
      ],
      "op": "EXTCODESIZE",
      "path": "66"
    },
    "3935": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12257,
        12321
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "3936": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12257,
        12321
      ],
      "op": "DUP1",
      "path": "66"
    },
    "3937": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12257,
        12321
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "3938": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12257,
        12321
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0xF6A"
    },
    "3941": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12257,
        12321
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "3942": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12257,
        12321
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "3944": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12257,
        12321
      ],
      "op": "DUP1",
      "path": "66"
    },
    "3945": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12257,
        12321
      ],
      "op": "REVERT",
      "path": "66"
    },
    "3946": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12257,
        12321
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "3947": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12257,
        12321
      ],
      "op": "POP",
      "path": "66"
    },
    "3948": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12257,
        12321
      ],
      "op": "GAS",
      "path": "66"
    },
    "3949": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12257,
        12321
      ],
      "op": "CALL",
      "path": "66"
    },
    "3950": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12257,
        12321
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "3951": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12257,
        12321
      ],
      "op": "DUP1",
      "path": "66"
    },
    "3952": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12257,
        12321
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "3953": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12257,
        12321
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0xF7E"
    },
    "3956": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12257,
        12321
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "3957": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12257,
        12321
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "3958": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12257,
        12321
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "3960": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12257,
        12321
      ],
      "op": "DUP1",
      "path": "66"
    },
    "3961": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12257,
        12321
      ],
      "op": "RETURNDATACOPY",
      "path": "66"
    },
    "3962": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12257,
        12321
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "3963": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12257,
        12321
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "3965": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12257,
        12321
      ],
      "op": "REVERT",
      "path": "66"
    },
    "3966": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12257,
        12321
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "3967": {
      "op": "POP"
    },
    "3968": {
      "op": "POP"
    },
    "3969": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "PUSH1",
      "path": "66",
      "statement": 22,
      "value": "0x40"
    },
    "3971": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "3972": {
      "op": "PUSH4",
      "value": "0xB390C0AB"
    },
    "3977": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3979": {
      "op": "SHL"
    },
    "3980": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "DUP2",
      "path": "66"
    },
    "3981": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "3982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3986": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3988": {
      "op": "SHL"
    },
    "3989": {
      "op": "SUB"
    },
    "3990": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12338
      ],
      "op": "PUSH32",
      "path": "66",
      "value": "0x0"
    },
    "4023": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12343
      ],
      "op": "AND",
      "path": "66"
    },
    "4024": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12343
      ],
      "op": "SWAP3",
      "path": "66"
    },
    "4025": {
      "op": "POP"
    },
    "4026": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12343
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0xB390C0AB"
    },
    "4031": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12343
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "4032": {
      "op": "POP"
    },
    "4033": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0xFD1"
    },
    "4036": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "4037": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12344,
        12350
      ],
      "op": "DUP5",
      "path": "66"
    },
    "4038": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12344,
        12350
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "4039": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12352,
        12365
      ],
      "op": "DUP9",
      "path": "66"
    },
    "4040": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12352,
        12365
      ],
      "op": "CALLDATALOAD",
      "path": "66"
    },
    "4041": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12352,
        12365
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "4042": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "4044": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "ADD",
      "path": "66"
    },
    "4045": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x4566"
    },
    "4048": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "jump": "i",
      "offset": [
        12327,
        12366
      ],
      "op": "JUMP",
      "path": "66"
    },
    "4049": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "4050": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x20"
    },
    "4052": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "4054": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "4055": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "DUP1",
      "path": "66"
    },
    "4056": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "DUP4",
      "path": "66"
    },
    "4057": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "SUB",
      "path": "66"
    },
    "4058": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "DUP2",
      "path": "66"
    },
    "4059": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "4061": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "DUP8",
      "path": "66"
    },
    "4062": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "DUP1",
      "path": "66"
    },
    "4063": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "EXTCODESIZE",
      "path": "66"
    },
    "4064": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "4065": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "DUP1",
      "path": "66"
    },
    "4066": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "4067": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0xFEB"
    },
    "4070": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "4071": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "4073": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "DUP1",
      "path": "66"
    },
    "4074": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "REVERT",
      "path": "66"
    },
    "4075": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "4076": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "POP",
      "path": "66"
    },
    "4077": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "GAS",
      "path": "66"
    },
    "4078": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "CALL",
      "path": "66"
    },
    "4079": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "4080": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "DUP1",
      "path": "66"
    },
    "4081": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "4082": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0xFFF"
    },
    "4085": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "4086": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "4087": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "4089": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "DUP1",
      "path": "66"
    },
    "4090": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "RETURNDATACOPY",
      "path": "66"
    },
    "4091": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "4092": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "4094": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "REVERT",
      "path": "66"
    },
    "4095": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "4096": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "POP",
      "path": "66"
    },
    "4097": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "POP",
      "path": "66"
    },
    "4098": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "POP",
      "path": "66"
    },
    "4099": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "POP",
      "path": "66"
    },
    "4100": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "4102": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "4103": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "4104": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "4106": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "NOT",
      "path": "66"
    },
    "4107": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "4109": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "DUP3",
      "path": "66"
    },
    "4110": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "ADD",
      "path": "66"
    },
    "4111": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "AND",
      "path": "66"
    },
    "4112": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "DUP3",
      "path": "66"
    },
    "4113": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "ADD",
      "path": "66"
    },
    "4114": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "DUP1",
      "path": "66"
    },
    "4115": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "4117": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "4118": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "POP",
      "path": "66"
    },
    "4119": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "DUP2",
      "path": "66"
    },
    "4120": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "ADD",
      "path": "66"
    },
    "4121": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "4122": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x1023"
    },
    "4125": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "4126": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "4127": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3E31"
    },
    "4130": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "jump": "i",
      "offset": [
        12327,
        12366
      ],
      "op": "JUMP",
      "path": "66"
    },
    "4131": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "4132": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12327,
        12366
      ],
      "op": "POP",
      "path": "66"
    },
    "4133": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12402,
        12450
      ],
      "op": "PUSH2",
      "path": "66",
      "statement": 23,
      "value": "0x1030"
    },
    "4136": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12426,
        12432
      ],
      "op": "DUP7",
      "path": "66"
    },
    "4137": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12434,
        12440
      ],
      "op": "DUP7",
      "path": "66"
    },
    "4138": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12442,
        12445
      ],
      "op": "DUP7",
      "path": "66"
    },
    "4139": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12447,
        12449
      ],
      "op": "DUP7",
      "path": "66"
    },
    "4140": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12402,
        12425
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x1E1D"
    },
    "4143": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "jump": "i",
      "offset": [
        12402,
        12450
      ],
      "op": "JUMP",
      "path": "66"
    },
    "4144": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12402,
        12450
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "4145": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12480,
        12495
      ],
      "op": "PUSH2",
      "path": "66",
      "statement": 24,
      "value": "0xC8B"
    },
    "4148": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12489,
        12494
      ],
      "op": "PUSH32",
      "path": "66",
      "value": "0x0"
    },
    "4181": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "offset": [
        12480,
        12488
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x272F"
    },
    "4184": {
      "fn": "SushiswapSpellV1.removeLiquidityWMasterChef",
      "jump": "i",
      "offset": [
        12480,
        12495
      ],
      "op": "JUMP",
      "path": "66"
    },
    "4185": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "JUMPDEST",
      "path": "71"
    },
    "4186": {
      "op": "PUSH4",
      "value": "0xBC197C81"
    },
    "4191": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4193": {
      "op": "SHL"
    },
    "4194": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "SWAP9",
      "path": "71"
    },
    "4195": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "SWAP8",
      "path": "71"
    },
    "4196": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "POP",
      "path": "71"
    },
    "4197": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "POP",
      "path": "71"
    },
    "4198": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "POP",
      "path": "71"
    },
    "4199": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "POP",
      "path": "71"
    },
    "4200": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "POP",
      "path": "71"
    },
    "4201": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "POP",
      "path": "71"
    },
    "4202": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "POP",
      "path": "71"
    },
    "4203": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "POP",
      "path": "71"
    },
    "4204": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "jump": "o",
      "offset": [
        502,
        775
      ],
      "op": "JUMP",
      "path": "71"
    },
    "4205": {
      "offset": [
        618,
        660
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "4206": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        618,
        660
      ],
      "op": "PUSH32",
      "path": "66",
      "value": "0x0"
    },
    "4239": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        618,
        660
      ],
      "op": "DUP2",
      "path": "66"
    },
    "4240": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "jump": "o",
      "offset": [
        618,
        660
      ],
      "op": "JUMP",
      "path": "66"
    },
    "4241": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6121,
        6558
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "4242": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6242,
        6252
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "4244": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6255,
        6288
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x109D"
    },
    "4247": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6273,
        6279
      ],
      "op": "DUP5",
      "path": "66"
    },
    "4248": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6281,
        6287
      ],
      "op": "DUP5",
      "path": "66"
    },
    "4249": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6255,
        6272
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x4D0"
    },
    "4252": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "jump": "i",
      "offset": [
        6255,
        6288
      ],
      "op": "JUMP",
      "path": "66"
    },
    "4253": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6255,
        6288
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "4254": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6242,
        6288
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "4255": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6242,
        6288
      ],
      "op": "POP",
      "path": "66"
    },
    "4256": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6320,
        6365
      ],
      "op": "PUSH2",
      "path": "66",
      "statement": 25,
      "value": "0x10AB"
    },
    "4259": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6341,
        6347
      ],
      "op": "DUP5",
      "path": "66"
    },
    "4260": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6349,
        6355
      ],
      "op": "DUP5",
      "path": "66"
    },
    "4261": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6357,
        6360
      ],
      "op": "DUP5",
      "path": "66"
    },
    "4262": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6362,
        6364
      ],
      "op": "DUP5",
      "path": "66"
    },
    "4263": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6320,
        6340
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x285B"
    },
    "4266": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "jump": "i",
      "offset": [
        6320,
        6365
      ],
      "op": "JUMP",
      "path": "66"
    },
    "4267": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6320,
        6365
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "4268": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6397,
        6453
      ],
      "op": "PUSH2",
      "path": "66",
      "statement": 26,
      "value": "0x1130"
    },
    "4271": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6413,
        6415
      ],
      "op": "DUP2",
      "path": "66"
    },
    "4272": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6424,
        6426
      ],
      "op": "DUP3",
      "path": "66"
    },
    "4273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4277": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4279": {
      "op": "SHL"
    },
    "4280": {
      "op": "SUB"
    },
    "4281": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6437
      ],
      "op": "AND",
      "path": "66"
    },
    "4282": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6437
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0x70A08231"
    },
    "4287": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6446,
        6450
      ],
      "op": "ADDRESS",
      "path": "66"
    },
    "4288": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "4290": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "4291": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "DUP3",
      "path": "66"
    },
    "4292": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0xFFFFFFFF"
    },
    "4297": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "AND",
      "path": "66"
    },
    "4298": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0xE0"
    },
    "4300": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "SHL",
      "path": "66"
    },
    "4301": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "DUP2",
      "path": "66"
    },
    "4302": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "4303": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "4305": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "ADD",
      "path": "66"
    },
    "4306": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x10DB"
    },
    "4309": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "4310": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "4311": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3EF8"
    },
    "4314": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "jump": "i",
      "offset": [
        6417,
        6452
      ],
      "op": "JUMP",
      "path": "66"
    },
    "4315": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "4316": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x20"
    },
    "4318": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "4320": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "4321": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "DUP1",
      "path": "66"
    },
    "4322": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "DUP4",
      "path": "66"
    },
    "4323": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "SUB",
      "path": "66"
    },
    "4324": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "DUP2",
      "path": "66"
    },
    "4325": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "DUP7",
      "path": "66"
    },
    "4326": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "DUP1",
      "path": "66"
    },
    "4327": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "EXTCODESIZE",
      "path": "66"
    },
    "4328": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "4329": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "DUP1",
      "path": "66"
    },
    "4330": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "4331": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x10F3"
    },
    "4334": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "4335": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "4337": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "DUP1",
      "path": "66"
    },
    "4338": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "REVERT",
      "path": "66"
    },
    "4339": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "4340": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "POP",
      "path": "66"
    },
    "4341": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "GAS",
      "path": "66"
    },
    "4342": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "STATICCALL",
      "path": "66"
    },
    "4343": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "4344": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "DUP1",
      "path": "66"
    },
    "4345": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "4346": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x1107"
    },
    "4349": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "4350": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "4351": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "4353": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "DUP1",
      "path": "66"
    },
    "4354": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "RETURNDATACOPY",
      "path": "66"
    },
    "4355": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "4356": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "4358": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "REVERT",
      "path": "66"
    },
    "4359": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "4360": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "POP",
      "path": "66"
    },
    "4361": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "POP",
      "path": "66"
    },
    "4362": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "POP",
      "path": "66"
    },
    "4363": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "POP",
      "path": "66"
    },
    "4364": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "4366": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "4367": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "4368": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "4370": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "NOT",
      "path": "66"
    },
    "4371": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "4373": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "DUP3",
      "path": "66"
    },
    "4374": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "ADD",
      "path": "66"
    },
    "4375": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "AND",
      "path": "66"
    },
    "4376": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "DUP3",
      "path": "66"
    },
    "4377": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "ADD",
      "path": "66"
    },
    "4378": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "DUP1",
      "path": "66"
    },
    "4379": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "4381": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "4382": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "POP",
      "path": "66"
    },
    "4383": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "DUP2",
      "path": "66"
    },
    "4384": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "ADD",
      "path": "66"
    },
    "4385": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "4386": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x112B"
    },
    "4389": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "4390": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "4391": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3E31"
    },
    "4394": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "jump": "i",
      "offset": [
        6417,
        6452
      ],
      "op": "JUMP",
      "path": "66"
    },
    "4395": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6417,
        6452
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "4396": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6397,
        6412
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2ED1"
    },
    "4399": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "jump": "i",
      "offset": [
        6397,
        6453
      ],
      "op": "JUMP",
      "path": "66"
    },
    "4400": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6397,
        6453
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "4401": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6496,
        6509
      ],
      "op": "PUSH2",
      "path": "66",
      "statement": 27,
      "value": "0x1138"
    },
    "4404": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6496,
        6507
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2FF3"
    },
    "4407": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "jump": "i",
      "offset": [
        6496,
        6509
      ],
      "op": "JUMP",
      "path": "66"
    },
    "4408": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6496,
        6509
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "4409": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6515,
        6531
      ],
      "op": "PUSH2",
      "path": "66",
      "statement": 28,
      "value": "0x1141"
    },
    "4412": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6524,
        6530
      ],
      "op": "DUP5",
      "path": "66"
    },
    "4413": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6515,
        6523
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x272F"
    },
    "4416": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "jump": "i",
      "offset": [
        6515,
        6531
      ],
      "op": "JUMP",
      "path": "66"
    },
    "4417": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6515,
        6531
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "4418": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6537,
        6553
      ],
      "op": "PUSH2",
      "path": "66",
      "statement": 29,
      "value": "0x4CA"
    },
    "4421": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6546,
        6552
      ],
      "op": "DUP4",
      "path": "66"
    },
    "4422": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "offset": [
        6537,
        6545
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x272F"
    },
    "4425": {
      "fn": "SushiswapSpellV1.addLiquidityWERC20",
      "jump": "i",
      "offset": [
        6537,
        6553
      ],
      "op": "JUMP",
      "path": "66"
    },
    "4426": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        6803,
        8021
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "4427": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        6943,
        6953
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "4429": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        6956,
        6989
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x1156"
    },
    "4432": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        6974,
        6980
      ],
      "op": "DUP6",
      "path": "66"
    },
    "4433": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        6982,
        6988
      ],
      "op": "DUP6",
      "path": "66"
    },
    "4434": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        6956,
        6973
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x4D0"
    },
    "4437": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "jump": "i",
      "offset": [
        6956,
        6989
      ],
      "op": "JUMP",
      "path": "66"
    },
    "4438": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        6956,
        6989
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "4439": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        6943,
        6989
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "4440": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        6943,
        6989
      ],
      "op": "POP",
      "path": "66"
    },
    "4441": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        6996,
        7011
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "4443": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7032
      ],
      "op": "PUSH32",
      "path": "66",
      "value": "0x0"
    },
    "4476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4480": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4482": {
      "op": "SHL"
    },
    "4483": {
      "op": "SUB"
    },
    "4484": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7037
      ],
      "op": "AND",
      "path": "66"
    },
    "4485": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7037
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0x1FC8BC5D"
    },
    "4490": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "4492": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "4493": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "DUP2",
      "path": "66"
    },
    "4494": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0xFFFFFFFF"
    },
    "4499": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "AND",
      "path": "66"
    },
    "4500": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0xE0"
    },
    "4502": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "SHL",
      "path": "66"
    },
    "4503": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "DUP2",
      "path": "66"
    },
    "4504": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "4505": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "4507": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "ADD",
      "path": "66"
    },
    "4508": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x20"
    },
    "4510": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "4512": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "4513": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "DUP1",
      "path": "66"
    },
    "4514": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "DUP4",
      "path": "66"
    },
    "4515": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "SUB",
      "path": "66"
    },
    "4516": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "DUP2",
      "path": "66"
    },
    "4517": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "DUP7",
      "path": "66"
    },
    "4518": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "DUP1",
      "path": "66"
    },
    "4519": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "EXTCODESIZE",
      "path": "66"
    },
    "4520": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "4521": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "DUP1",
      "path": "66"
    },
    "4522": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "4523": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x11B3"
    },
    "4526": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "4527": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "4529": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "DUP1",
      "path": "66"
    },
    "4530": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "REVERT",
      "path": "66"
    },
    "4531": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "4532": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "POP",
      "path": "66"
    },
    "4533": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "GAS",
      "path": "66"
    },
    "4534": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "STATICCALL",
      "path": "66"
    },
    "4535": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "4536": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "DUP1",
      "path": "66"
    },
    "4537": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "4538": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x11C7"
    },
    "4541": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "4542": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "4543": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "4545": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "DUP1",
      "path": "66"
    },
    "4546": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "RETURNDATACOPY",
      "path": "66"
    },
    "4547": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "4548": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "4550": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "REVERT",
      "path": "66"
    },
    "4551": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "4552": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "POP",
      "path": "66"
    },
    "4553": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "POP",
      "path": "66"
    },
    "4554": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "POP",
      "path": "66"
    },
    "4555": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "POP",
      "path": "66"
    },
    "4556": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "4558": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "4559": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "4560": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "4562": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "NOT",
      "path": "66"
    },
    "4563": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "4565": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "DUP3",
      "path": "66"
    },
    "4566": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "ADD",
      "path": "66"
    },
    "4567": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "AND",
      "path": "66"
    },
    "4568": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "DUP3",
      "path": "66"
    },
    "4569": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "ADD",
      "path": "66"
    },
    "4570": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "DUP1",
      "path": "66"
    },
    "4571": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "4573": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "4574": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "POP",
      "path": "66"
    },
    "4575": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "DUP2",
      "path": "66"
    },
    "4576": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "ADD",
      "path": "66"
    },
    "4577": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "4578": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x11EB"
    },
    "4581": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "4582": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "4583": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3986"
    },
    "4586": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "jump": "i",
      "offset": [
        7021,
        7039
      ],
      "op": "JUMP",
      "path": "66"
    },
    "4587": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7039
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "4588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4592": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4594": {
      "op": "SHL"
    },
    "4595": {
      "op": "SUB"
    },
    "4596": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7048
      ],
      "op": "AND",
      "path": "66"
    },
    "4597": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7048
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0x1526FE27"
    },
    "4602": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7049,
        7052
      ],
      "op": "DUP5",
      "path": "66"
    },
    "4603": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "4605": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "4606": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "DUP3",
      "path": "66"
    },
    "4607": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0xFFFFFFFF"
    },
    "4612": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "AND",
      "path": "66"
    },
    "4613": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0xE0"
    },
    "4615": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "SHL",
      "path": "66"
    },
    "4616": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "DUP2",
      "path": "66"
    },
    "4617": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "4618": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "4620": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "ADD",
      "path": "66"
    },
    "4621": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x1216"
    },
    "4624": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "4625": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "4626": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x450A"
    },
    "4629": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "jump": "i",
      "offset": [
        7021,
        7053
      ],
      "op": "JUMP",
      "path": "66"
    },
    "4630": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "4631": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x80"
    },
    "4633": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "4635": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "4636": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "DUP1",
      "path": "66"
    },
    "4637": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "DUP4",
      "path": "66"
    },
    "4638": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "SUB",
      "path": "66"
    },
    "4639": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "DUP2",
      "path": "66"
    },
    "4640": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "DUP7",
      "path": "66"
    },
    "4641": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "DUP1",
      "path": "66"
    },
    "4642": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "EXTCODESIZE",
      "path": "66"
    },
    "4643": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "4644": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "DUP1",
      "path": "66"
    },
    "4645": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "4646": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x122E"
    },
    "4649": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "4650": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "4652": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "DUP1",
      "path": "66"
    },
    "4653": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "REVERT",
      "path": "66"
    },
    "4654": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "4655": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "POP",
      "path": "66"
    },
    "4656": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "GAS",
      "path": "66"
    },
    "4657": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "STATICCALL",
      "path": "66"
    },
    "4658": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "4659": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "DUP1",
      "path": "66"
    },
    "4660": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "4661": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x1242"
    },
    "4664": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "4665": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "4666": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "4668": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "DUP1",
      "path": "66"
    },
    "4669": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "RETURNDATACOPY",
      "path": "66"
    },
    "4670": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "4671": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "4673": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "REVERT",
      "path": "66"
    },
    "4674": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "4675": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "POP",
      "path": "66"
    },
    "4676": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "POP",
      "path": "66"
    },
    "4677": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "POP",
      "path": "66"
    },
    "4678": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "POP",
      "path": "66"
    },
    "4679": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "4681": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "4682": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "4683": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "4685": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "NOT",
      "path": "66"
    },
    "4686": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "4688": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "DUP3",
      "path": "66"
    },
    "4689": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "ADD",
      "path": "66"
    },
    "4690": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "AND",
      "path": "66"
    },
    "4691": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "DUP3",
      "path": "66"
    },
    "4692": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "ADD",
      "path": "66"
    },
    "4693": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "DUP1",
      "path": "66"
    },
    "4694": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "4696": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "4697": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "POP",
      "path": "66"
    },
    "4698": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "DUP2",
      "path": "66"
    },
    "4699": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "ADD",
      "path": "66"
    },
    "4700": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "4701": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x1266"
    },
    "4704": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "4705": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "4706": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3C41"
    },
    "4709": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "jump": "i",
      "offset": [
        7021,
        7053
      ],
      "op": "JUMP",
      "path": "66"
    },
    "4710": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7021,
        7053
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "4711": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        6995,
        7053
      ],
      "op": "POP",
      "path": "66"
    },
    "4712": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        6995,
        7053
      ],
      "op": "POP",
      "path": "66"
    },
    "4713": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        6995,
        7053
      ],
      "op": "POP",
      "path": "66"
    },
    "4714": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        6995,
        7053
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "4715": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        6995,
        7053
      ],
      "op": "POP",
      "path": "66"
    },
    "4716": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7078,
        7080
      ],
      "op": "DUP2",
      "path": "66",
      "statement": 30
    },
    "4717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4721": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4723": {
      "op": "SHL"
    },
    "4724": {
      "op": "SUB"
    },
    "4725": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7067,
        7080
      ],
      "op": "AND",
      "path": "66"
    },
    "4726": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7067,
        7074
      ],
      "op": "DUP2",
      "path": "66"
    },
    "4727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4731": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4733": {
      "op": "SHL"
    },
    "4734": {
      "op": "SUB"
    },
    "4735": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7067,
        7080
      ],
      "op": "AND",
      "path": "66"
    },
    "4736": {
      "branch": 155,
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7067,
        7080
      ],
      "op": "EQ",
      "path": "66"
    },
    "4737": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7059,
        7103
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x129C"
    },
    "4740": {
      "branch": 155,
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7059,
        7103
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "4741": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7059,
        7103
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "4743": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7059,
        7103
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "4744": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4748": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4750": {
      "op": "SHL"
    },
    "4751": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7059,
        7103
      ],
      "op": "DUP2",
      "path": "66"
    },
    "4752": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7059,
        7103
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "4753": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7059,
        7103
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "4755": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7059,
        7103
      ],
      "op": "ADD",
      "path": "66"
    },
    "4756": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7059,
        7103
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x19C"
    },
    "4759": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7059,
        7103
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "4760": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7059,
        7103
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x4276"
    },
    "4763": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "jump": "i",
      "offset": [
        7059,
        7103
      ],
      "op": "JUMP",
      "path": "66"
    },
    "4764": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7059,
        7103
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "4765": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7136,
        7181
      ],
      "op": "PUSH2",
      "path": "66",
      "statement": 31,
      "value": "0x12A8"
    },
    "4768": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7157,
        7163
      ],
      "op": "DUP7",
      "path": "66"
    },
    "4769": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7165,
        7171
      ],
      "op": "DUP7",
      "path": "66"
    },
    "4770": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7173,
        7176
      ],
      "op": "DUP7",
      "path": "66"
    },
    "4771": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7178,
        7180
      ],
      "op": "DUP6",
      "path": "66"
    },
    "4772": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7136,
        7156
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x285B"
    },
    "4775": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "jump": "i",
      "offset": [
        7136,
        7181
      ],
      "op": "JUMP",
      "path": "66"
    },
    "4776": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7136,
        7181
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "4777": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7221,
        7238
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "4779": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7240,
        7251
      ],
      "op": "DUP1",
      "path": "66"
    },
    "4780": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7253,
        7266
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "4782": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7274
      ],
      "op": "PUSH32",
      "path": "66",
      "value": "0x0"
    },
    "4815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4819": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4821": {
      "op": "SHL"
    },
    "4822": {
      "op": "SUB"
    },
    "4823": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7297
      ],
      "op": "AND",
      "path": "66"
    },
    "4824": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7297
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0xF70AEDD9"
    },
    "4829": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "4831": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "4832": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "DUP2",
      "path": "66"
    },
    "4833": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0xFFFFFFFF"
    },
    "4838": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "AND",
      "path": "66"
    },
    "4839": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0xE0"
    },
    "4841": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "SHL",
      "path": "66"
    },
    "4842": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "DUP2",
      "path": "66"
    },
    "4843": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "4844": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "4846": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "ADD",
      "path": "66"
    },
    "4847": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x80"
    },
    "4849": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "4851": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "4852": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "DUP1",
      "path": "66"
    },
    "4853": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "DUP4",
      "path": "66"
    },
    "4854": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "SUB",
      "path": "66"
    },
    "4855": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "DUP2",
      "path": "66"
    },
    "4856": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "DUP7",
      "path": "66"
    },
    "4857": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "DUP1",
      "path": "66"
    },
    "4858": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "EXTCODESIZE",
      "path": "66"
    },
    "4859": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "4860": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "DUP1",
      "path": "66"
    },
    "4861": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "4862": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x1306"
    },
    "4865": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "4866": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "4868": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "DUP1",
      "path": "66"
    },
    "4869": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "REVERT",
      "path": "66"
    },
    "4870": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "4871": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "POP",
      "path": "66"
    },
    "4872": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "GAS",
      "path": "66"
    },
    "4873": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "STATICCALL",
      "path": "66"
    },
    "4874": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "4875": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "DUP1",
      "path": "66"
    },
    "4876": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "4877": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x131A"
    },
    "4880": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "4881": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "4882": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "4884": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "DUP1",
      "path": "66"
    },
    "4885": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "RETURNDATACOPY",
      "path": "66"
    },
    "4886": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "4887": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "4889": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "REVERT",
      "path": "66"
    },
    "4890": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "4891": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "POP",
      "path": "66"
    },
    "4892": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "POP",
      "path": "66"
    },
    "4893": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "POP",
      "path": "66"
    },
    "4894": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "POP",
      "path": "66"
    },
    "4895": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "4897": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "4898": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "4899": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "4901": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "NOT",
      "path": "66"
    },
    "4902": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "4904": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "DUP3",
      "path": "66"
    },
    "4905": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "ADD",
      "path": "66"
    },
    "4906": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "AND",
      "path": "66"
    },
    "4907": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "DUP3",
      "path": "66"
    },
    "4908": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "ADD",
      "path": "66"
    },
    "4909": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "DUP1",
      "path": "66"
    },
    "4910": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "4912": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "4913": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "POP",
      "path": "66"
    },
    "4914": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "DUP2",
      "path": "66"
    },
    "4915": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "ADD",
      "path": "66"
    },
    "4916": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "4917": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x133E"
    },
    "4920": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "4921": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "4922": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3B80"
    },
    "4925": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "jump": "i",
      "offset": [
        7270,
        7299
      ],
      "op": "JUMP",
      "path": "66"
    },
    "4926": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7270,
        7299
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "4927": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7218,
        7299
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "4928": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7218,
        7299
      ],
      "op": "SWAP6",
      "path": "66"
    },
    "4929": {
      "op": "POP"
    },
    "4930": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7218,
        7299
      ],
      "op": "SWAP4",
      "path": "66"
    },
    "4931": {
      "op": "POP"
    },
    "4932": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7218,
        7299
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "4933": {
      "op": "POP"
    },
    "4934": {
      "op": "POP"
    },
    "4935": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7309,
        7321
      ],
      "op": "DUP1",
      "path": "66"
    },
    "4936": {
      "branch": 156,
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7309,
        7321
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "4937": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7305,
        7643
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x15A2"
    },
    "4940": {
      "branch": 156,
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7305,
        7643
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "4941": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "4943": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "4944": {
      "op": "PUSH4",
      "value": "0x6E10637D"
    },
    "4949": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4951": {
      "op": "SHL"
    },
    "4952": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "DUP2",
      "path": "66"
    },
    "4953": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "4954": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7332,
        7347
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "4956": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7332,
        7347
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "4957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4961": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4963": {
      "op": "SHL"
    },
    "4964": {
      "op": "SUB"
    },
    "4965": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7364
      ],
      "op": "PUSH32",
      "path": "66",
      "value": "0x0"
    },
    "4998": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7373
      ],
      "op": "AND",
      "path": "66"
    },
    "4999": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7373
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "5000": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7373
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0xDC20C6FA"
    },
    "5005": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7373
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "5006": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x139B"
    },
    "5009": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "5010": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7374,
        7380
      ],
      "op": "DUP7",
      "path": "66"
    },
    "5011": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7374,
        7380
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "5012": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "5014": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "ADD",
      "path": "66"
    },
    "5015": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x450A"
    },
    "5018": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "jump": "i",
      "offset": [
        7353,
        7381
      ],
      "op": "JUMP",
      "path": "66"
    },
    "5019": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "5020": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "5022": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "DUP1",
      "path": "66"
    },
    "5023": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "5024": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "DUP1",
      "path": "66"
    },
    "5025": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "DUP4",
      "path": "66"
    },
    "5026": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "SUB",
      "path": "66"
    },
    "5027": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "DUP2",
      "path": "66"
    },
    "5028": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "DUP7",
      "path": "66"
    },
    "5029": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "DUP1",
      "path": "66"
    },
    "5030": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "EXTCODESIZE",
      "path": "66"
    },
    "5031": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "5032": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "DUP1",
      "path": "66"
    },
    "5033": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "5034": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x13B2"
    },
    "5037": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "5038": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "5040": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "DUP1",
      "path": "66"
    },
    "5041": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "REVERT",
      "path": "66"
    },
    "5042": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "5043": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "POP",
      "path": "66"
    },
    "5044": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "GAS",
      "path": "66"
    },
    "5045": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "STATICCALL",
      "path": "66"
    },
    "5046": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "5047": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "DUP1",
      "path": "66"
    },
    "5048": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "5049": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x13C6"
    },
    "5052": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "5053": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "5054": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "5056": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "DUP1",
      "path": "66"
    },
    "5057": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "RETURNDATACOPY",
      "path": "66"
    },
    "5058": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "5059": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "5061": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "REVERT",
      "path": "66"
    },
    "5062": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "5063": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "POP",
      "path": "66"
    },
    "5064": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "POP",
      "path": "66"
    },
    "5065": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "POP",
      "path": "66"
    },
    "5066": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "POP",
      "path": "66"
    },
    "5067": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "5069": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "5070": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "5071": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "5073": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "NOT",
      "path": "66"
    },
    "5074": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "5076": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "DUP3",
      "path": "66"
    },
    "5077": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "ADD",
      "path": "66"
    },
    "5078": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "AND",
      "path": "66"
    },
    "5079": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "DUP3",
      "path": "66"
    },
    "5080": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "ADD",
      "path": "66"
    },
    "5081": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "DUP1",
      "path": "66"
    },
    "5082": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "5084": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "5085": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "POP",
      "path": "66"
    },
    "5086": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "DUP2",
      "path": "66"
    },
    "5087": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "ADD",
      "path": "66"
    },
    "5088": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "5089": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x13EA"
    },
    "5092": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "5093": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "5094": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3E49"
    },
    "5097": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "jump": "i",
      "offset": [
        7353,
        7381
      ],
      "op": "JUMP",
      "path": "66"
    },
    "5098": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7353,
        7381
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "5099": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7331,
        7381
      ],
      "op": "POP",
      "path": "66"
    },
    "5100": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7331,
        7381
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "5101": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7331,
        7381
      ],
      "op": "POP",
      "path": "66"
    },
    "5102": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7404,
        7414
      ],
      "op": "DUP1",
      "path": "66",
      "statement": 32
    },
    "5103": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7397,
        7400
      ],
      "op": "DUP8",
      "path": "66"
    },
    "5104": {
      "branch": 157,
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7397,
        7414
      ],
      "op": "EQ",
      "path": "66"
    },
    "5105": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7389,
        7432
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x140C"
    },
    "5108": {
      "branch": 157,
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7389,
        7432
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "5109": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7389,
        7432
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "5111": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7389,
        7432
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "5112": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5116": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5118": {
      "op": "SHL"
    },
    "5119": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7389,
        7432
      ],
      "op": "DUP2",
      "path": "66"
    },
    "5120": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7389,
        7432
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "5121": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7389,
        7432
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "5123": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7389,
        7432
      ],
      "op": "ADD",
      "path": "66"
    },
    "5124": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7389,
        7432
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x19C"
    },
    "5127": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7389,
        7432
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "5128": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7389,
        7432
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x43DE"
    },
    "5131": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "jump": "i",
      "offset": [
        7389,
        7432
      ],
      "op": "JUMP",
      "path": "66"
    },
    "5132": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7389,
        7432
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "5133": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7469,
        7480
      ],
      "op": "PUSH32",
      "path": "66",
      "statement": 33,
      "value": "0x0"
    },
    "5166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5170": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5172": {
      "op": "SHL"
    },
    "5173": {
      "op": "SUB"
    },
    "5174": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7448,
        7481
      ],
      "op": "AND",
      "path": "66"
    },
    "5175": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7448,
        7457
      ],
      "op": "DUP5",
      "path": "66"
    },
    "5176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5180": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5182": {
      "op": "SHL"
    },
    "5183": {
      "op": "SUB"
    },
    "5184": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7448,
        7481
      ],
      "op": "AND",
      "path": "66"
    },
    "5185": {
      "branch": 158,
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7448,
        7481
      ],
      "op": "EQ",
      "path": "66"
    },
    "5186": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7440,
        7527
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x145D"
    },
    "5189": {
      "branch": 158,
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7440,
        7527
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "5190": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7440,
        7527
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "5192": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7440,
        7527
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "5193": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5197": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5199": {
      "op": "SHL"
    },
    "5200": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7440,
        7527
      ],
      "op": "DUP2",
      "path": "66"
    },
    "5201": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7440,
        7527
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "5202": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7440,
        7527
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "5204": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7440,
        7527
      ],
      "op": "ADD",
      "path": "66"
    },
    "5205": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7440,
        7527
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x19C"
    },
    "5208": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7440,
        7527
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "5209": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7440,
        7527
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x4373"
    },
    "5212": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "jump": "i",
      "offset": [
        7440,
        7527
      ],
      "op": "JUMP",
      "path": "66"
    },
    "5213": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7440,
        7527
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "5214": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7535,
        7594
      ],
      "op": "PUSH1",
      "path": "66",
      "statement": 34,
      "value": "0x40"
    },
    "5216": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7535,
        7594
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "5217": {
      "op": "PUSH4",
      "value": "0xD1D6975"
    },
    "5222": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "5224": {
      "op": "SHL"
    },
    "5225": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7535,
        7594
      ],
      "op": "DUP2",
      "path": "66"
    },
    "5226": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7535,
        7594
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "5227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5231": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5233": {
      "op": "SHL"
    },
    "5234": {
      "op": "SUB"
    },
    "5235": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7535,
        7539
      ],
      "op": "PUSH32",
      "path": "66",
      "value": "0x0"
    },
    "5268": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7535,
        7554
      ],
      "op": "AND",
      "path": "66"
    },
    "5269": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7535,
        7554
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "5270": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7535,
        7554
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0x68EB4BA8"
    },
    "5275": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7535,
        7554
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "5276": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7535,
        7594
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x14CD"
    },
    "5279": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7535,
        7594
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "5280": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7563,
        7574
      ],
      "op": "PUSH32",
      "path": "66",
      "value": "0x0"
    },
    "5313": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7563,
        7574
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "5314": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7577,
        7583
      ],
      "op": "DUP8",
      "path": "66"
    },
    "5315": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7577,
        7583
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "5316": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7585,
        7593
      ],
      "op": "DUP8",
      "path": "66"
    },
    "5317": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7585,
        7593
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "5318": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7535,
        7594
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "5320": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7535,
        7594
      ],
      "op": "ADD",
      "path": "66"
    },
    "5321": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7535,
        7594
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3FC8"
    },
    "5324": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "jump": "i",
      "offset": [
        7535,
        7594
      ],
      "op": "JUMP",
      "path": "66"
    },
    "5325": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7535,
        7594
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "5326": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7535,
        7594
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "5328": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7535,
        7594
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "5330": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7535,
        7594
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "5331": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7535,
        7594
      ],
      "op": "DUP1",
      "path": "66"
    },
    "5332": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7535,
        7594
      ],
      "op": "DUP4",
      "path": "66"
    },
    "5333": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7535,
        7594
      ],
      "op": "SUB",
      "path": "66"
    },
    "5334": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7535,
        7594
      ],
      "op": "DUP2",
      "path": "66"
    },
    "5335": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7535,
        7594
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "5337": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7535,
        7594
      ],
      "op": "DUP8",
      "path": "66"
    },
    "5338": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7535,
        7594
      ],
      "op": "DUP1",
      "path": "66"
    },
    "5339": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7535,
        7594
      ],
      "op": "EXTCODESIZE",
      "path": "66"
    },
    "5340": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7535,
        7594
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "5341": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7535,
        7594
      ],
      "op": "DUP1",
      "path": "66"
    },
    "5342": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7535,
        7594
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "5343": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7535,
        7594
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x14E7"
    },
    "5346": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7535,
        7594
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "5347": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7535,
        7594
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "5349": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7535,
        7594
      ],
      "op": "DUP1",
      "path": "66"
    },
    "5350": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7535,
        7594
      ],
      "op": "REVERT",
      "path": "66"
    },
    "5351": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7535,
        7594
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "5352": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7535,
        7594
      ],
      "op": "POP",
      "path": "66"
    },
    "5353": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7535,
        7594
      ],
      "op": "GAS",
      "path": "66"
    },
    "5354": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7535,
        7594
      ],
      "op": "CALL",
      "path": "66"
    },
    "5355": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7535,
        7594
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "5356": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7535,
        7594
      ],
      "op": "DUP1",
      "path": "66"
    },
    "5357": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7535,
        7594
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "5358": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7535,
        7594
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x14FB"
    },
    "5361": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7535,
        7594
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "5362": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7535,
        7594
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "5363": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7535,
        7594
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "5365": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7535,
        7594
      ],
      "op": "DUP1",
      "path": "66"
    },
    "5366": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7535,
        7594
      ],
      "op": "RETURNDATACOPY",
      "path": "66"
    },
    "5367": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7535,
        7594
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "5368": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7535,
        7594
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "5370": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7535,
        7594
      ],
      "op": "REVERT",
      "path": "66"
    },
    "5371": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7535,
        7594
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "5372": {
      "op": "POP"
    },
    "5373": {
      "op": "POP"
    },
    "5374": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "PUSH1",
      "path": "66",
      "statement": 35,
      "value": "0x40"
    },
    "5376": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "5377": {
      "op": "PUSH4",
      "value": "0xB390C0AB"
    },
    "5382": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5384": {
      "op": "SHL"
    },
    "5385": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "DUP2",
      "path": "66"
    },
    "5386": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "5387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5391": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5393": {
      "op": "SHL"
    },
    "5394": {
      "op": "SUB"
    },
    "5395": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7613
      ],
      "op": "PUSH32",
      "path": "66",
      "value": "0x0"
    },
    "5428": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7618
      ],
      "op": "AND",
      "path": "66"
    },
    "5429": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7618
      ],
      "op": "SWAP3",
      "path": "66"
    },
    "5430": {
      "op": "POP"
    },
    "5431": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7618
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0xB390C0AB"
    },
    "5436": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7618
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "5437": {
      "op": "POP"
    },
    "5438": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x154D"
    },
    "5441": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "5442": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7619,
        7625
      ],
      "op": "DUP7",
      "path": "66"
    },
    "5443": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7619,
        7625
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "5444": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7627,
        7635
      ],
      "op": "DUP7",
      "path": "66"
    },
    "5445": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7627,
        7635
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "5446": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "5448": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "ADD",
      "path": "66"
    },
    "5449": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x4566"
    },
    "5452": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "jump": "i",
      "offset": [
        7602,
        7636
      ],
      "op": "JUMP",
      "path": "66"
    },
    "5453": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "5454": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x20"
    },
    "5456": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "5458": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "5459": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "DUP1",
      "path": "66"
    },
    "5460": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "DUP4",
      "path": "66"
    },
    "5461": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "SUB",
      "path": "66"
    },
    "5462": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "DUP2",
      "path": "66"
    },
    "5463": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "5465": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "DUP8",
      "path": "66"
    },
    "5466": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "DUP1",
      "path": "66"
    },
    "5467": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "EXTCODESIZE",
      "path": "66"
    },
    "5468": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "5469": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "DUP1",
      "path": "66"
    },
    "5470": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "5471": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x1567"
    },
    "5474": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "5475": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "5477": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "DUP1",
      "path": "66"
    },
    "5478": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "REVERT",
      "path": "66"
    },
    "5479": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "5480": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "POP",
      "path": "66"
    },
    "5481": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "GAS",
      "path": "66"
    },
    "5482": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "CALL",
      "path": "66"
    },
    "5483": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "5484": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "DUP1",
      "path": "66"
    },
    "5485": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "5486": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x157B"
    },
    "5489": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "5490": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "5491": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "5493": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "DUP1",
      "path": "66"
    },
    "5494": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "RETURNDATACOPY",
      "path": "66"
    },
    "5495": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "5496": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "5498": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "REVERT",
      "path": "66"
    },
    "5499": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "5500": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "POP",
      "path": "66"
    },
    "5501": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "POP",
      "path": "66"
    },
    "5502": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "POP",
      "path": "66"
    },
    "5503": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "POP",
      "path": "66"
    },
    "5504": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "5506": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "5507": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "5508": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "5510": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "NOT",
      "path": "66"
    },
    "5511": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "5513": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "DUP3",
      "path": "66"
    },
    "5514": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "ADD",
      "path": "66"
    },
    "5515": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "AND",
      "path": "66"
    },
    "5516": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "DUP3",
      "path": "66"
    },
    "5517": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "ADD",
      "path": "66"
    },
    "5518": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "DUP1",
      "path": "66"
    },
    "5519": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "5521": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "5522": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "POP",
      "path": "66"
    },
    "5523": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "DUP2",
      "path": "66"
    },
    "5524": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "ADD",
      "path": "66"
    },
    "5525": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "5526": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x159F"
    },
    "5529": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "5530": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "5531": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3E31"
    },
    "5534": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "jump": "i",
      "offset": [
        7602,
        7636
      ],
      "op": "JUMP",
      "path": "66"
    },
    "5535": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "5536": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7602,
        7636
      ],
      "op": "POP",
      "path": "66"
    },
    "5537": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7305,
        7643
      ],
      "op": "POP",
      "path": "66"
    },
    "5538": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7305,
        7643
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "5539": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7674,
        7713
      ],
      "op": "PUSH2",
      "path": "66",
      "statement": 36,
      "value": "0x15CC"
    },
    "5542": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7688,
        7690
      ],
      "op": "DUP6",
      "path": "66"
    },
    "5543": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7700,
        7711
      ],
      "op": "PUSH32",
      "path": "66",
      "value": "0x0"
    },
    "5576": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7674,
        7687
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x26B8"
    },
    "5579": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "jump": "i",
      "offset": [
        7674,
        7713
      ],
      "op": "JUMP",
      "path": "66"
    },
    "5580": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7674,
        7713
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "5581": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "5583": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "5584": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "5589": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5591": {
      "op": "SHL"
    },
    "5592": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "DUP2",
      "path": "66"
    },
    "5593": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "5594": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7719,
        7730
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "5596": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7719,
        7730
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "5597": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5599": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5601": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5603": {
      "op": "SHL"
    },
    "5604": {
      "op": "SUB"
    },
    "5605": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7753
      ],
      "op": "DUP8",
      "path": "66"
    },
    "5606": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7753
      ],
      "op": "AND",
      "path": "66"
    },
    "5607": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7753
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "5608": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7753
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0x70A08231"
    },
    "5613": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7753
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "5614": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x15FB"
    },
    "5617": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "5618": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7762,
        7766
      ],
      "op": "ADDRESS",
      "path": "66"
    },
    "5619": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7762,
        7766
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "5620": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "5622": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "ADD",
      "path": "66"
    },
    "5623": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3EF8"
    },
    "5626": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "jump": "i",
      "offset": [
        7733,
        7768
      ],
      "op": "JUMP",
      "path": "66"
    },
    "5627": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "5628": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x20"
    },
    "5630": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "5632": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "5633": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "DUP1",
      "path": "66"
    },
    "5634": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "DUP4",
      "path": "66"
    },
    "5635": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "SUB",
      "path": "66"
    },
    "5636": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "DUP2",
      "path": "66"
    },
    "5637": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "DUP7",
      "path": "66"
    },
    "5638": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "DUP1",
      "path": "66"
    },
    "5639": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "EXTCODESIZE",
      "path": "66"
    },
    "5640": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "5641": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "DUP1",
      "path": "66"
    },
    "5642": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "5643": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x1613"
    },
    "5646": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "5647": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "5649": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "DUP1",
      "path": "66"
    },
    "5650": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "REVERT",
      "path": "66"
    },
    "5651": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "5652": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "POP",
      "path": "66"
    },
    "5653": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "GAS",
      "path": "66"
    },
    "5654": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "STATICCALL",
      "path": "66"
    },
    "5655": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "5656": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "DUP1",
      "path": "66"
    },
    "5657": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "5658": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x1627"
    },
    "5661": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "5662": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "5663": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "5665": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "DUP1",
      "path": "66"
    },
    "5666": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "RETURNDATACOPY",
      "path": "66"
    },
    "5667": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "5668": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "5670": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "REVERT",
      "path": "66"
    },
    "5671": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "5672": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "POP",
      "path": "66"
    },
    "5673": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "POP",
      "path": "66"
    },
    "5674": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "POP",
      "path": "66"
    },
    "5675": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "POP",
      "path": "66"
    },
    "5676": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "5678": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "5679": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "5680": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "5682": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "NOT",
      "path": "66"
    },
    "5683": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "5685": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "DUP3",
      "path": "66"
    },
    "5686": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "ADD",
      "path": "66"
    },
    "5687": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "AND",
      "path": "66"
    },
    "5688": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "DUP3",
      "path": "66"
    },
    "5689": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "ADD",
      "path": "66"
    },
    "5690": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "DUP1",
      "path": "66"
    },
    "5691": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "5693": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "5694": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "POP",
      "path": "66"
    },
    "5695": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "DUP2",
      "path": "66"
    },
    "5696": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "ADD",
      "path": "66"
    },
    "5697": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "5698": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x164B"
    },
    "5701": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "5702": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "5703": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3E31"
    },
    "5706": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "jump": "i",
      "offset": [
        7733,
        7768
      ],
      "op": "JUMP",
      "path": "66"
    },
    "5707": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7733,
        7768
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "5708": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7719,
        7768
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "5709": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7719,
        7768
      ],
      "op": "POP",
      "path": "66"
    },
    "5710": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7774,
        7781
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "5712": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7795
      ],
      "op": "PUSH32",
      "path": "66",
      "value": "0x0"
    },
    "5745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5749": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5751": {
      "op": "SHL"
    },
    "5752": {
      "op": "SUB"
    },
    "5753": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7800
      ],
      "op": "AND",
      "path": "66"
    },
    "5754": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7800
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0x1B2EF1CA"
    },
    "5759": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7801,
        7804
      ],
      "op": "DUP10",
      "path": "66"
    },
    "5760": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7806,
        7812
      ],
      "op": "DUP5",
      "path": "66"
    },
    "5761": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "5763": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "5764": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "DUP4",
      "path": "66"
    },
    "5765": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0xFFFFFFFF"
    },
    "5770": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "AND",
      "path": "66"
    },
    "5771": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0xE0"
    },
    "5773": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "SHL",
      "path": "66"
    },
    "5774": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "DUP2",
      "path": "66"
    },
    "5775": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "5776": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "5778": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "ADD",
      "path": "66"
    },
    "5779": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x169D"
    },
    "5782": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "SWAP3",
      "path": "66"
    },
    "5783": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "5784": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "5785": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x4566"
    },
    "5788": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "jump": "i",
      "offset": [
        7784,
        7813
      ],
      "op": "JUMP",
      "path": "66"
    },
    "5789": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "5790": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x20"
    },
    "5792": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "5794": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "5795": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "DUP1",
      "path": "66"
    },
    "5796": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "DUP4",
      "path": "66"
    },
    "5797": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "SUB",
      "path": "66"
    },
    "5798": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "DUP2",
      "path": "66"
    },
    "5799": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "5801": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "DUP8",
      "path": "66"
    },
    "5802": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "DUP1",
      "path": "66"
    },
    "5803": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "EXTCODESIZE",
      "path": "66"
    },
    "5804": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "5805": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "DUP1",
      "path": "66"
    },
    "5806": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "5807": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x16B7"
    },
    "5810": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "5811": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "5813": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "DUP1",
      "path": "66"
    },
    "5814": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "REVERT",
      "path": "66"
    },
    "5815": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "5816": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "POP",
      "path": "66"
    },
    "5817": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "GAS",
      "path": "66"
    },
    "5818": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "CALL",
      "path": "66"
    },
    "5819": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "5820": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "DUP1",
      "path": "66"
    },
    "5821": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "5822": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x16CB"
    },
    "5825": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "5826": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "5827": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "5829": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "DUP1",
      "path": "66"
    },
    "5830": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "RETURNDATACOPY",
      "path": "66"
    },
    "5831": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "5832": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "5834": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "REVERT",
      "path": "66"
    },
    "5835": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "5836": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "POP",
      "path": "66"
    },
    "5837": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "POP",
      "path": "66"
    },
    "5838": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "POP",
      "path": "66"
    },
    "5839": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "POP",
      "path": "66"
    },
    "5840": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "5842": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "5843": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "5844": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "5846": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "NOT",
      "path": "66"
    },
    "5847": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "5849": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "DUP3",
      "path": "66"
    },
    "5850": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "ADD",
      "path": "66"
    },
    "5851": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "AND",
      "path": "66"
    },
    "5852": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "DUP3",
      "path": "66"
    },
    "5853": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "ADD",
      "path": "66"
    },
    "5854": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "DUP1",
      "path": "66"
    },
    "5855": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "5857": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "5858": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "POP",
      "path": "66"
    },
    "5859": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "DUP2",
      "path": "66"
    },
    "5860": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "ADD",
      "path": "66"
    },
    "5861": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "5862": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x16EF"
    },
    "5865": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "5866": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "5867": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3E31"
    },
    "5870": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "jump": "i",
      "offset": [
        7784,
        7813
      ],
      "op": "JUMP",
      "path": "66"
    },
    "5871": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7784,
        7813
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "5872": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7871
      ],
      "op": "PUSH1",
      "path": "66",
      "statement": 37,
      "value": "0x40"
    },
    "5874": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7871
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "5875": {
      "op": "PUSH4",
      "value": "0x314568D9"
    },
    "5880": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5882": {
      "op": "SHL"
    },
    "5883": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7871
      ],
      "op": "DUP2",
      "path": "66"
    },
    "5884": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7871
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "5885": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7774,
        7813
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "5886": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7774,
        7813
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "5887": {
      "op": "POP"
    },
    "5888": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5892": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5894": {
      "op": "SHL"
    },
    "5895": {
      "op": "SUB"
    },
    "5896": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7823
      ],
      "op": "PUSH32",
      "path": "66",
      "value": "0x0"
    },
    "5929": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7837
      ],
      "op": "AND",
      "path": "66"
    },
    "5930": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7837
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "5931": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7837
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0x314568D9"
    },
    "5936": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7837
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "5937": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7871
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x1762"
    },
    "5940": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7871
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "5941": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7846,
        7857
      ],
      "op": "PUSH32",
      "path": "66",
      "value": "0x0"
    },
    "5974": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7846,
        7857
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "5975": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7774,
        7813
      ],
      "op": "DUP6",
      "path": "66"
    },
    "5976": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7774,
        7813
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "5977": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7864,
        7870
      ],
      "op": "DUP8",
      "path": "66"
    },
    "5978": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7864,
        7870
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "5979": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7871
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "5981": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7871
      ],
      "op": "ADD",
      "path": "66"
    },
    "5982": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7871
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3FC8"
    },
    "5985": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "jump": "i",
      "offset": [
        7819,
        7871
      ],
      "op": "JUMP",
      "path": "66"
    },
    "5986": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7871
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "5987": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7871
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "5989": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7871
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "5991": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7871
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "5992": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7871
      ],
      "op": "DUP1",
      "path": "66"
    },
    "5993": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7871
      ],
      "op": "DUP4",
      "path": "66"
    },
    "5994": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7871
      ],
      "op": "SUB",
      "path": "66"
    },
    "5995": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7871
      ],
      "op": "DUP2",
      "path": "66"
    },
    "5996": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7871
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "5998": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7871
      ],
      "op": "DUP8",
      "path": "66"
    },
    "5999": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7871
      ],
      "op": "DUP1",
      "path": "66"
    },
    "6000": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7871
      ],
      "op": "EXTCODESIZE",
      "path": "66"
    },
    "6001": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7871
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "6002": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7871
      ],
      "op": "DUP1",
      "path": "66"
    },
    "6003": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7871
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "6004": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7871
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x177C"
    },
    "6007": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7871
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "6008": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7871
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "6010": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7871
      ],
      "op": "DUP1",
      "path": "66"
    },
    "6011": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7871
      ],
      "op": "REVERT",
      "path": "66"
    },
    "6012": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7871
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "6013": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7871
      ],
      "op": "POP",
      "path": "66"
    },
    "6014": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7871
      ],
      "op": "GAS",
      "path": "66"
    },
    "6015": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7871
      ],
      "op": "CALL",
      "path": "66"
    },
    "6016": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7871
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "6017": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7871
      ],
      "op": "DUP1",
      "path": "66"
    },
    "6018": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7871
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "6019": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7871
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x1790"
    },
    "6022": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7871
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "6023": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7871
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "6024": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7871
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "6026": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7871
      ],
      "op": "DUP1",
      "path": "66"
    },
    "6027": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7871
      ],
      "op": "RETURNDATACOPY",
      "path": "66"
    },
    "6028": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7871
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "6029": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7871
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "6031": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7871
      ],
      "op": "REVERT",
      "path": "66"
    },
    "6032": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7871
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "6033": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7871
      ],
      "op": "POP",
      "path": "66"
    },
    "6034": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7871
      ],
      "op": "POP",
      "path": "66"
    },
    "6035": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7871
      ],
      "op": "POP",
      "path": "66"
    },
    "6036": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7819,
        7871
      ],
      "op": "POP",
      "path": "66"
    },
    "6037": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7914,
        7927
      ],
      "op": "PUSH2",
      "path": "66",
      "statement": 38,
      "value": "0x179C"
    },
    "6040": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7914,
        7925
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2FF3"
    },
    "6043": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "jump": "i",
      "offset": [
        7914,
        7927
      ],
      "op": "JUMP",
      "path": "66"
    },
    "6044": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7914,
        7927
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "6045": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7933,
        7949
      ],
      "op": "PUSH2",
      "path": "66",
      "statement": 39,
      "value": "0x17A5"
    },
    "6048": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7942,
        7948
      ],
      "op": "DUP12",
      "path": "66"
    },
    "6049": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7933,
        7941
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x272F"
    },
    "6052": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "jump": "i",
      "offset": [
        7933,
        7949
      ],
      "op": "JUMP",
      "path": "66"
    },
    "6053": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7933,
        7949
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "6054": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7955,
        7971
      ],
      "op": "PUSH2",
      "path": "66",
      "statement": 40,
      "value": "0x17AE"
    },
    "6057": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7964,
        7970
      ],
      "op": "DUP11",
      "path": "66"
    },
    "6058": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7955,
        7963
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x272F"
    },
    "6061": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "jump": "i",
      "offset": [
        7955,
        7971
      ],
      "op": "JUMP",
      "path": "66"
    },
    "6062": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        7955,
        7971
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "6063": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        8001,
        8016
      ],
      "op": "PUSH2",
      "path": "66",
      "statement": 41,
      "value": "0x17D7"
    },
    "6066": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        8010,
        8015
      ],
      "op": "PUSH32",
      "path": "66",
      "value": "0x0"
    },
    "6099": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        8001,
        8009
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x272F"
    },
    "6102": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "jump": "i",
      "offset": [
        8001,
        8016
      ],
      "op": "JUMP",
      "path": "66"
    },
    "6103": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        8001,
        8016
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "6104": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        6803,
        8021
      ],
      "op": "POP",
      "path": "66"
    },
    "6105": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        6803,
        8021
      ],
      "op": "POP",
      "path": "66"
    },
    "6106": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        6803,
        8021
      ],
      "op": "POP",
      "path": "66"
    },
    "6107": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        6803,
        8021
      ],
      "op": "POP",
      "path": "66"
    },
    "6108": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        6803,
        8021
      ],
      "op": "POP",
      "path": "66"
    },
    "6109": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        6803,
        8021
      ],
      "op": "POP",
      "path": "66"
    },
    "6110": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        6803,
        8021
      ],
      "op": "POP",
      "path": "66"
    },
    "6111": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        6803,
        8021
      ],
      "op": "POP",
      "path": "66"
    },
    "6112": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        6803,
        8021
      ],
      "op": "POP",
      "path": "66"
    },
    "6113": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        6803,
        8021
      ],
      "op": "POP",
      "path": "66"
    },
    "6114": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        6803,
        8021
      ],
      "op": "POP",
      "path": "66"
    },
    "6115": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "jump": "o",
      "offset": [
        6803,
        8021
      ],
      "op": "JUMP",
      "path": "66"
    },
    "6116": {
      "offset": [
        373,
        403
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6117": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        373,
        403
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x43"
    },
    "6119": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        373,
        403
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "6120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6124": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6126": {
      "op": "SHL"
    },
    "6127": {
      "op": "SUB"
    },
    "6128": {
      "offset": [
        373,
        403
      ],
      "op": "AND",
      "path": "24"
    },
    "6129": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "offset": [
        373,
        403
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6130": {
      "fn": "SushiswapSpellV1.addLiquidityWMasterChef",
      "jump": "o",
      "offset": [
        373,
        403
      ],
      "op": "JUMP",
      "path": "24"
    },
    "6131": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1234,
        1444
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6132": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1297,
        1312
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 42,
      "value": "0x43"
    },
    "6134": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1297,
        1312
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "6135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6139": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6141": {
      "op": "SHL"
    },
    "6142": {
      "op": "SUB"
    },
    "6143": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1297,
        1312
      ],
      "op": "AND",
      "path": "24"
    },
    "6144": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1283,
        1293
      ],
      "op": "CALLER",
      "path": "24"
    },
    "6145": {
      "branch": 197,
      "fn": "Governable.acceptGovernor",
      "offset": [
        1283,
        1312
      ],
      "op": "EQ",
      "path": "24"
    },
    "6146": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x181D"
    },
    "6149": {
      "branch": 197,
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "6150": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "6152": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6153": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6157": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6159": {
      "op": "SHL"
    },
    "6160": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6161": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6162": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "6164": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "ADD",
      "path": "24"
    },
    "6165": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x19C"
    },
    "6168": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6169": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x4089"
    },
    "6172": {
      "fn": "Governable.acceptGovernor",
      "jump": "i",
      "offset": [
        1275,
        1341
      ],
      "op": "JUMP",
      "path": "24"
    },
    "6173": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6174": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1347,
        1362
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 43,
      "value": "0x43"
    },
    "6176": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1347,
        1375
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6177": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1347,
        1375
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "6178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6182": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6184": {
      "op": "SHL"
    },
    "6185": {
      "op": "SUB"
    },
    "6186": {
      "op": "NOT"
    },
    "6187": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1347,
        1375
      ],
      "op": "AND",
      "path": "24"
    },
    "6188": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1347,
        1375
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6189": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1347,
        1375
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "6190": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1389
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 44,
      "value": "0x42"
    },
    "6192": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6193": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "6194": {
      "op": "PUSH3",
      "value": "0x10000"
    },
    "6198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6200": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "6202": {
      "op": "SHL"
    },
    "6203": {
      "op": "SUB"
    },
    "6204": {
      "op": "NOT"
    },
    "6205": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "AND",
      "path": "24"
    },
    "6206": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1392,
        1402
      ],
      "op": "CALLER",
      "path": "24"
    },
    "6207": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "PUSH3",
      "path": "24",
      "value": "0x10000"
    },
    "6211": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6212": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "MUL",
      "path": "24"
    },
    "6213": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6214": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6215": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6216": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "OR",
      "path": "24"
    },
    "6217": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6218": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6219": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "6220": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 45,
      "value": "0x40"
    },
    "6222": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6223": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0xD345D81CE68C70B119A17EEE79DC1421700BD9CB21CA148A62DC90983964E82F"
    },
    "6256": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6257": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1879"
    },
    "6260": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6261": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x3EF8"
    },
    "6264": {
      "fn": "Governable.acceptGovernor",
      "jump": "i",
      "offset": [
        1413,
        1439
      ],
      "op": "JUMP",
      "path": "24"
    },
    "6265": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6266": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "6268": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6269": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6270": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6271": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "SUB",
      "path": "24"
    },
    "6272": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6273": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "LOG1",
      "path": "24"
    },
    "6274": {
      "fn": "Governable.acceptGovernor",
      "jump": "o",
      "offset": [
        1234,
        1444
      ],
      "op": "JUMP",
      "path": "24"
    },
    "6275": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "6276": {
      "offset": [
        566,
        574
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x42"
    },
    "6278": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        566,
        574
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "6279": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        566,
        574
      ],
      "op": "PUSH3",
      "path": "24",
      "value": "0x10000"
    },
    "6283": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        566,
        574
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6284": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        566,
        574
      ],
      "op": "DIV",
      "path": "24"
    },
    "6285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6289": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6291": {
      "op": "SHL"
    },
    "6292": {
      "op": "SUB"
    },
    "6293": {
      "offset": [
        566,
        574
      ],
      "op": "AND",
      "path": "24"
    },
    "6294": {
      "offset": [
        552,
        562
      ],
      "op": "CALLER",
      "path": "24"
    },
    "6295": {
      "offset": [
        552,
        574
      ],
      "op": "EQ",
      "path": "24"
    },
    "6296": {
      "offset": [
        544,
        595
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x18B3"
    },
    "6299": {
      "offset": [
        544,
        595
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "6300": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        544,
        595
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "6302": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        544,
        595
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6303": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6307": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6309": {
      "op": "SHL"
    },
    "6310": {
      "offset": [
        544,
        595
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6311": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        544,
        595
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6312": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        544,
        595
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "6314": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        544,
        595
      ],
      "op": "ADD",
      "path": "24"
    },
    "6315": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        544,
        595
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x19C"
    },
    "6318": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        544,
        595
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6319": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        544,
        595
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x41E2"
    },
    "6322": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "jump": "i",
      "offset": [
        544,
        595
      ],
      "op": "JUMP",
      "path": "24"
    },
    "6323": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        544,
        595
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6324": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        696,
        730
      ],
      "op": "DUP3",
      "path": "68",
      "statement": 46
    },
    "6325": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        696,
        730
      ],
      "op": "DUP2",
      "path": "68"
    },
    "6326": {
      "branch": 214,
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        696,
        730
      ],
      "op": "EQ",
      "path": "68"
    },
    "6327": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        688,
        772
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x18D2"
    },
    "6330": {
      "branch": 214,
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        688,
        772
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "6331": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        688,
        772
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "6333": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        688,
        772
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "6334": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6338": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6340": {
      "op": "SHL"
    },
    "6341": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        688,
        772
      ],
      "op": "DUP2",
      "path": "68"
    },
    "6342": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        688,
        772
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "6343": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        688,
        772
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "6345": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        688,
        772
      ],
      "op": "ADD",
      "path": "68"
    },
    "6346": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        688,
        772
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x19C"
    },
    "6349": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        688,
        772
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "6350": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        688,
        772
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x420C"
    },
    "6353": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "jump": "i",
      "offset": [
        688,
        772
      ],
      "op": "JUMP",
      "path": "68"
    },
    "6354": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        688,
        772
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "6355": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        783,
        791
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "6357": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        778,
        1004
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "6358": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        797,
        818
      ],
      "op": "DUP4",
      "path": "68"
    },
    "6359": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        797,
        818
      ],
      "op": "DUP2",
      "path": "68"
    },
    "6360": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        797,
        818
      ],
      "op": "LT",
      "path": "68"
    },
    "6361": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        778,
        1004
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "6362": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        778,
        1004
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1A51"
    },
    "6365": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        778,
        1004
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "6366": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        839,
        847
      ],
      "op": "DUP3",
      "path": "68"
    },
    "6367": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        839,
        847
      ],
      "op": "DUP3",
      "path": "68"
    },
    "6368": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        848,
        851
      ],
      "op": "DUP3",
      "path": "68"
    },
    "6369": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        839,
        852
      ],
      "op": "DUP2",
      "path": "68"
    },
    "6370": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        839,
        852
      ],
      "op": "DUP2",
      "path": "68"
    },
    "6371": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        839,
        852
      ],
      "op": "LT",
      "path": "68"
    },
    "6372": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        839,
        852
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x18E9"
    },
    "6375": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        839,
        852
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "6376": {
      "dev": "Index out of range",
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        839,
        852
      ],
      "op": "INVALID",
      "path": "68"
    },
    "6377": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        839,
        852
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "6378": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        839,
        852
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "6379": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        839,
        852
      ],
      "op": "POP",
      "path": "68"
    },
    "6380": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        839,
        852
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "6382": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        839,
        852
      ],
      "op": "MUL",
      "path": "68"
    },
    "6383": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        839,
        852
      ],
      "op": "ADD",
      "path": "68"
    },
    "6384": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        839,
        852
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "6386": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        839,
        852
      ],
      "op": "DUP2",
      "path": "68"
    },
    "6387": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        839,
        852
      ],
      "op": "ADD",
      "path": "68"
    },
    "6388": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        839,
        852
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "6389": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        839,
        852
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x18FE"
    },
    "6392": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        839,
        852
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "6393": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        839,
        852
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "6394": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        839,
        852
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x3D7D"
    },
    "6397": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "jump": "i",
      "offset": [
        839,
        852
      ],
      "op": "JUMP",
      "path": "68"
    },
    "6398": {
      "branch": 215,
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        839,
        852
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "6399": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        835,
        940
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "6400": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        835,
        940
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x19DB"
    },
    "6403": {
      "branch": 215,
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        835,
        940
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "6404": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        876
      ],
      "op": "PUSH32",
      "path": "68",
      "statement": 47,
      "value": "0x0"
    },
    "6437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6441": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6443": {
      "op": "SHL"
    },
    "6444": {
      "op": "SUB"
    },
    "6445": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        884
      ],
      "op": "AND",
      "path": "68"
    },
    "6446": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        884
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xE660CC08"
    },
    "6451": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        885,
        893
      ],
      "op": "DUP7",
      "path": "68"
    },
    "6452": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        885,
        893
      ],
      "op": "DUP7",
      "path": "68"
    },
    "6453": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        894,
        897
      ],
      "op": "DUP5",
      "path": "68"
    },
    "6454": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        885,
        898
      ],
      "op": "DUP2",
      "path": "68"
    },
    "6455": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        885,
        898
      ],
      "op": "DUP2",
      "path": "68"
    },
    "6456": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        885,
        898
      ],
      "op": "LT",
      "path": "68"
    },
    "6457": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        885,
        898
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x193E"
    },
    "6460": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        885,
        898
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "6461": {
      "dev": "Index out of range",
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        885,
        898
      ],
      "op": "INVALID",
      "path": "68"
    },
    "6462": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        885,
        898
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "6463": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        885,
        898
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "6464": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        885,
        898
      ],
      "op": "POP",
      "path": "68"
    },
    "6465": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        885,
        898
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "6467": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        885,
        898
      ],
      "op": "MUL",
      "path": "68"
    },
    "6468": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        885,
        898
      ],
      "op": "ADD",
      "path": "68"
    },
    "6469": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        885,
        898
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "6471": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        885,
        898
      ],
      "op": "DUP2",
      "path": "68"
    },
    "6472": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        885,
        898
      ],
      "op": "ADD",
      "path": "68"
    },
    "6473": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        885,
        898
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "6474": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        885,
        898
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1953"
    },
    "6477": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        885,
        898
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "6478": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        885,
        898
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "6479": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        885,
        898
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x396A"
    },
    "6482": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "jump": "i",
      "offset": [
        885,
        898
      ],
      "op": "JUMP",
      "path": "68"
    },
    "6483": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        885,
        898
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "6484": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "6486": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "6487": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "DUP3",
      "path": "68"
    },
    "6488": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xFFFFFFFF"
    },
    "6493": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "AND",
      "path": "68"
    },
    "6494": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0xE0"
    },
    "6496": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "SHL",
      "path": "68"
    },
    "6497": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "DUP2",
      "path": "68"
    },
    "6498": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "6499": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "6501": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "ADD",
      "path": "68"
    },
    "6502": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x196F"
    },
    "6505": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "6506": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "6507": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x3EF8"
    },
    "6510": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "jump": "i",
      "offset": [
        872,
        899
      ],
      "op": "JUMP",
      "path": "68"
    },
    "6511": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "6512": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "6514": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "6516": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "6517": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "DUP1",
      "path": "68"
    },
    "6518": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "DUP4",
      "path": "68"
    },
    "6519": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "SUB",
      "path": "68"
    },
    "6520": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "DUP2",
      "path": "68"
    },
    "6521": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "DUP7",
      "path": "68"
    },
    "6522": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "DUP1",
      "path": "68"
    },
    "6523": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "EXTCODESIZE",
      "path": "68"
    },
    "6524": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "6525": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "DUP1",
      "path": "68"
    },
    "6526": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "6527": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1987"
    },
    "6530": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "6531": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "6533": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "DUP1",
      "path": "68"
    },
    "6534": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "REVERT",
      "path": "68"
    },
    "6535": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "6536": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "POP",
      "path": "68"
    },
    "6537": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "GAS",
      "path": "68"
    },
    "6538": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "STATICCALL",
      "path": "68"
    },
    "6539": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "6540": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "DUP1",
      "path": "68"
    },
    "6541": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "6542": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x199B"
    },
    "6545": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "6546": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "6547": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "6549": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "DUP1",
      "path": "68"
    },
    "6550": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "RETURNDATACOPY",
      "path": "68"
    },
    "6551": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "6552": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "6554": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "REVERT",
      "path": "68"
    },
    "6555": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "6556": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "POP",
      "path": "68"
    },
    "6557": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "POP",
      "path": "68"
    },
    "6558": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "POP",
      "path": "68"
    },
    "6559": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "POP",
      "path": "68"
    },
    "6560": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "6562": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "6563": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "6564": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "6566": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "NOT",
      "path": "68"
    },
    "6567": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "6569": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "DUP3",
      "path": "68"
    },
    "6570": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "ADD",
      "path": "68"
    },
    "6571": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "AND",
      "path": "68"
    },
    "6572": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "DUP3",
      "path": "68"
    },
    "6573": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "ADD",
      "path": "68"
    },
    "6574": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "DUP1",
      "path": "68"
    },
    "6575": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "6577": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "6578": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "POP",
      "path": "68"
    },
    "6579": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "DUP2",
      "path": "68"
    },
    "6580": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "ADD",
      "path": "68"
    },
    "6581": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "6582": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x19BF"
    },
    "6585": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "6586": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "6587": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x3D99"
    },
    "6590": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "jump": "i",
      "offset": [
        872,
        899
      ],
      "op": "JUMP",
      "path": "68"
    },
    "6591": {
      "branch": 216,
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "6592": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        864,
        931
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x19DB"
    },
    "6595": {
      "branch": 216,
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        864,
        931
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "6596": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        864,
        931
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "6598": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        864,
        931
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "6599": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6603": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6605": {
      "op": "SHL"
    },
    "6606": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        864,
        931
      ],
      "op": "DUP2",
      "path": "68"
    },
    "6607": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        864,
        931
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "6608": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        864,
        931
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "6610": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        864,
        931
      ],
      "op": "ADD",
      "path": "68"
    },
    "6611": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        864,
        931
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x19C"
    },
    "6614": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        864,
        931
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "6615": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        864,
        931
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x40F7"
    },
    "6618": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "jump": "i",
      "offset": [
        864,
        931
      ],
      "op": "JUMP",
      "path": "68"
    },
    "6619": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        864,
        931
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "6620": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        984,
        992
      ],
      "op": "DUP3",
      "path": "68",
      "statement": 48
    },
    "6621": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        984,
        992
      ],
      "op": "DUP3",
      "path": "68"
    },
    "6622": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        993,
        996
      ],
      "op": "DUP3",
      "path": "68"
    },
    "6623": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        984,
        997
      ],
      "op": "DUP2",
      "path": "68"
    },
    "6624": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        984,
        997
      ],
      "op": "DUP2",
      "path": "68"
    },
    "6625": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        984,
        997
      ],
      "op": "LT",
      "path": "68"
    },
    "6626": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        984,
        997
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x19E7"
    },
    "6629": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        984,
        997
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "6630": {
      "dev": "Index out of range",
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        984,
        997
      ],
      "op": "INVALID",
      "path": "68"
    },
    "6631": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        984,
        997
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "6632": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        984,
        997
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "6633": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        984,
        997
      ],
      "op": "POP",
      "path": "68"
    },
    "6634": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        984,
        997
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "6636": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        984,
        997
      ],
      "op": "MUL",
      "path": "68"
    },
    "6637": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        984,
        997
      ],
      "op": "ADD",
      "path": "68"
    },
    "6638": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        984,
        997
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "6640": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        984,
        997
      ],
      "op": "DUP2",
      "path": "68"
    },
    "6641": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        984,
        997
      ],
      "op": "ADD",
      "path": "68"
    },
    "6642": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        984,
        997
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "6643": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        984,
        997
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x19FC"
    },
    "6646": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        984,
        997
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "6647": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        984,
        997
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "6648": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        984,
        997
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x3D7D"
    },
    "6651": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "jump": "i",
      "offset": [
        984,
        997
      ],
      "op": "JUMP",
      "path": "68"
    },
    "6652": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        984,
        997
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "6653": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        947,
        966
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x84"
    },
    "6655": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        947,
        981
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "6657": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        967,
        975
      ],
      "op": "DUP8",
      "path": "68"
    },
    "6658": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        967,
        975
      ],
      "op": "DUP8",
      "path": "68"
    },
    "6659": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        976,
        979
      ],
      "op": "DUP6",
      "path": "68"
    },
    "6660": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        967,
        980
      ],
      "op": "DUP2",
      "path": "68"
    },
    "6661": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        967,
        980
      ],
      "op": "DUP2",
      "path": "68"
    },
    "6662": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        967,
        980
      ],
      "op": "LT",
      "path": "68"
    },
    "6663": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        967,
        980
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1A0C"
    },
    "6666": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        967,
        980
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "6667": {
      "dev": "Index out of range",
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        967,
        980
      ],
      "op": "INVALID",
      "path": "68"
    },
    "6668": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        967,
        980
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "6669": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        967,
        980
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "6670": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        967,
        980
      ],
      "op": "POP",
      "path": "68"
    },
    "6671": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        967,
        980
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "6673": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        967,
        980
      ],
      "op": "MUL",
      "path": "68"
    },
    "6674": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        967,
        980
      ],
      "op": "ADD",
      "path": "68"
    },
    "6675": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        967,
        980
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "6677": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        967,
        980
      ],
      "op": "DUP2",
      "path": "68"
    },
    "6678": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        967,
        980
      ],
      "op": "ADD",
      "path": "68"
    },
    "6679": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        967,
        980
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "6680": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        967,
        980
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1A21"
    },
    "6683": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        967,
        980
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "6684": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        967,
        980
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "6685": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        967,
        980
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x396A"
    },
    "6688": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "jump": "i",
      "offset": [
        967,
        980
      ],
      "op": "JUMP",
      "path": "68"
    },
    "6689": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        967,
        980
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "6690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6694": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6696": {
      "op": "SHL"
    },
    "6697": {
      "op": "SUB"
    },
    "6698": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        947,
        981
      ],
      "op": "AND",
      "path": "68"
    },
    "6699": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        947,
        981
      ],
      "op": "DUP2",
      "path": "68"
    },
    "6700": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        947,
        981
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "6701": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        947,
        981
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "6703": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        947,
        981
      ],
      "op": "DUP2",
      "path": "68"
    },
    "6704": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        947,
        981
      ],
      "op": "ADD",
      "path": "68"
    },
    "6705": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        947,
        981
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "6706": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        947,
        981
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "6707": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        947,
        981
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "6708": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        947,
        981
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "6709": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        947,
        981
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "6711": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        947,
        981
      ],
      "op": "ADD",
      "path": "68"
    },
    "6712": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6714": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        947,
        981
      ],
      "op": "KECCAK256",
      "path": "68"
    },
    "6715": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        947,
        997
      ],
      "op": "DUP1",
      "path": "68"
    },
    "6716": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        947,
        997
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "6717": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6719": {
      "op": "NOT"
    },
    "6720": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        947,
        997
      ],
      "op": "AND",
      "path": "68"
    },
    "6721": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        947,
        997
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "6722": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        947,
        997
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "6723": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        947,
        997
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "6724": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        947,
        997
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "6725": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        947,
        997
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "6726": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        947,
        997
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "6727": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        947,
        997
      ],
      "op": "OR",
      "path": "68"
    },
    "6728": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        947,
        997
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "6729": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        947,
        997
      ],
      "op": "SSTORE",
      "path": "68"
    },
    "6730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6732": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        820,
        825
      ],
      "op": "ADD",
      "path": "68",
      "statement": 49
    },
    "6733": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        778,
        1004
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x18D5"
    },
    "6736": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        778,
        1004
      ],
      "op": "JUMP",
      "path": "68"
    },
    "6737": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        778,
        1004
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "6738": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        778,
        1004
      ],
      "op": "POP",
      "path": "68"
    },
    "6739": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "POP",
      "path": "68"
    },
    "6740": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "POP",
      "path": "68"
    },
    "6741": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "POP",
      "path": "68"
    },
    "6742": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "POP",
      "path": "68"
    },
    "6743": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "jump": "o",
      "offset": [
        570,
        1008
      ],
      "op": "JUMP",
      "path": "68"
    },
    "6744": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6745": {
      "offset": [
        566,
        574
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x42"
    },
    "6747": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        566,
        574
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "6748": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        566,
        574
      ],
      "op": "PUSH3",
      "path": "24",
      "value": "0x10000"
    },
    "6752": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        566,
        574
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6753": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        566,
        574
      ],
      "op": "DIV",
      "path": "24"
    },
    "6754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6758": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6760": {
      "op": "SHL"
    },
    "6761": {
      "op": "SUB"
    },
    "6762": {
      "offset": [
        566,
        574
      ],
      "op": "AND",
      "path": "24"
    },
    "6763": {
      "offset": [
        552,
        562
      ],
      "op": "CALLER",
      "path": "24"
    },
    "6764": {
      "offset": [
        552,
        574
      ],
      "op": "EQ",
      "path": "24"
    },
    "6765": {
      "offset": [
        544,
        595
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1A88"
    },
    "6768": {
      "offset": [
        544,
        595
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "6769": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "6771": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6772": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6776": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6778": {
      "op": "SHL"
    },
    "6779": {
      "offset": [
        544,
        595
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6780": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6781": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "6783": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "ADD",
      "path": "24"
    },
    "6784": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x19C"
    },
    "6787": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6788": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x41E2"
    },
    "6791": {
      "fn": "Governable.setPendingGovernor",
      "jump": "i",
      "offset": [
        544,
        595
      ],
      "op": "JUMP",
      "path": "24"
    },
    "6792": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6793": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1073
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 50,
      "value": "0x43"
    },
    "6795": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6796": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "6797": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6799": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6801": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6803": {
      "op": "SHL"
    },
    "6804": {
      "op": "SUB"
    },
    "6805": {
      "op": "NOT"
    },
    "6806": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "AND",
      "path": "24"
    },
    "6807": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6809": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6811": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6813": {
      "op": "SHL"
    },
    "6814": {
      "op": "SUB"
    },
    "6815": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "DUP4",
      "path": "24"
    },
    "6816": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "AND",
      "path": "24"
    },
    "6817": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "OR",
      "path": "24"
    },
    "6818": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6819": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "6820": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 51,
      "value": "0x40"
    },
    "6822": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6823": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x964DEA888B00B2AB53F13DFE7CA334B46E99338C222AE232D98547A1DA019F60"
    },
    "6856": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6857": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1AD3"
    },
    "6860": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6861": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "DUP4",
      "path": "24"
    },
    "6862": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6863": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x3EF8"
    },
    "6866": {
      "fn": "Governable.setPendingGovernor",
      "jump": "i",
      "offset": [
        1103,
        1139
      ],
      "op": "JUMP",
      "path": "24"
    },
    "6867": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6868": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "6870": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6871": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6872": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6873": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "SUB",
      "path": "24"
    },
    "6874": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6875": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "LOG1",
      "path": "24"
    },
    "6876": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "POP",
      "path": "24"
    },
    "6877": {
      "fn": "Governable.setPendingGovernor",
      "jump": "o",
      "offset": [
        981,
        1144
      ],
      "op": "JUMP",
      "path": "24"
    },
    "6878": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "JUMPDEST",
      "path": "71"
    },
    "6879": {
      "op": "PUSH4",
      "value": "0xF23A6E61"
    },
    "6884": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6886": {
      "op": "SHL"
    },
    "6887": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "SWAP7",
      "path": "71"
    },
    "6888": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "SWAP6",
      "path": "71"
    },
    "6889": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "POP",
      "path": "71"
    },
    "6890": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "POP",
      "path": "71"
    },
    "6891": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "POP",
      "path": "71"
    },
    "6892": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "POP",
      "path": "71"
    },
    "6893": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "POP",
      "path": "71"
    },
    "6894": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "POP",
      "path": "71"
    },
    "6895": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "jump": "o",
      "offset": [
        259,
        498
      ],
      "op": "JUMP",
      "path": "71"
    },
    "6896": {
      "offset": [
        578,
        638
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "6897": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        578,
        638
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x41"
    },
    "6899": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        578,
        638
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "6901": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        578,
        638
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "6902": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        578,
        638
      ],
      "op": "DUP2",
      "path": "63"
    },
    "6903": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        578,
        638
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "6904": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        578,
        638
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "6906": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        578,
        638
      ],
      "op": "SWAP3",
      "path": "63"
    },
    "6907": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        578,
        638
      ],
      "op": "DUP4",
      "path": "63"
    },
    "6908": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        578,
        638
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "6909": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        578,
        638
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "6911": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        578,
        638
      ],
      "op": "DUP1",
      "path": "63"
    },
    "6912": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        578,
        638
      ],
      "op": "DUP5",
      "path": "63"
    },
    "6913": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        578,
        638
      ],
      "op": "KECCAK256",
      "path": "63"
    },
    "6914": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        578,
        638
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "6915": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        578,
        638
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "6916": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        578,
        638
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "6917": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        578,
        638
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "6918": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        578,
        638
      ],
      "op": "DUP3",
      "path": "63"
    },
    "6919": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        578,
        638
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "6920": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        578,
        638
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "6921": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        578,
        638
      ],
      "op": "KECCAK256",
      "path": "63"
    },
    "6922": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        578,
        638
      ],
      "op": "SLOAD",
      "path": "63"
    },
    "6923": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        578,
        638
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0xFF"
    },
    "6925": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        578,
        638
      ],
      "op": "AND",
      "path": "63"
    },
    "6926": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        578,
        638
      ],
      "op": "DUP2",
      "path": "63"
    },
    "6927": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "jump": "o",
      "offset": [
        578,
        638
      ],
      "op": "JUMP",
      "path": "63"
    },
    "6928": {
      "offset": [
        685,
        727
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "6929": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        685,
        727
      ],
      "op": "PUSH32",
      "path": "66",
      "value": "0x0"
    },
    "6962": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        685,
        727
      ],
      "op": "DUP2",
      "path": "66"
    },
    "6963": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "jump": "o",
      "offset": [
        685,
        727
      ],
      "op": "JUMP",
      "path": "66"
    },
    "6964": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1348,
        1961
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6965": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1713,
        1723
      ],
      "op": "DUP1",
      "path": "20",
      "statement": 52
    },
    "6966": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1713,
        1723
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "6967": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1713,
        1723
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6968": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1712,
        1774
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1BBC"
    },
    "6971": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1712,
        1774
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6972": {
      "op": "POP"
    },
    "6973": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6975": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6976": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "6981": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "6983": {
      "op": "SHL"
    },
    "6984": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6985": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6990": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6992": {
      "op": "SHL"
    },
    "6993": {
      "op": "SUB"
    },
    "6994": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1744
      ],
      "op": "DUP5",
      "path": "20"
    },
    "6995": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1744
      ],
      "op": "AND",
      "path": "20"
    },
    "6996": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1744
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6997": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1744
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xDD62ED3E"
    },
    "7002": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1744
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7003": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1B6A"
    },
    "7006": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7007": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1753,
        1757
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "7008": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1753,
        1757
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7009": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1760,
        1767
      ],
      "op": "DUP7",
      "path": "20"
    },
    "7010": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1760,
        1767
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7011": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "7013": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "ADD",
      "path": "20"
    },
    "7014": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3F0C"
    },
    "7017": {
      "fn": "SafeERC20.safeApprove",
      "jump": "i",
      "offset": [
        1729,
        1768
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7018": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7019": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "7021": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7023": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7024": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7025": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "DUP4",
      "path": "20"
    },
    "7026": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "SUB",
      "path": "20"
    },
    "7027": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7028": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "DUP7",
      "path": "20"
    },
    "7029": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7030": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "7031": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "7032": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7033": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "7034": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1B82"
    },
    "7037": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7038": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "7040": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7041": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "REVERT",
      "path": "20"
    },
    "7042": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7043": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "POP",
      "path": "20"
    },
    "7044": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "GAS",
      "path": "20"
    },
    "7045": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "STATICCALL",
      "path": "20"
    },
    "7046": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "7047": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7048": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "7049": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1B96"
    },
    "7052": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7053": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "7054": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "7056": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7057": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "RETURNDATACOPY",
      "path": "20"
    },
    "7058": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "7059": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "7061": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "REVERT",
      "path": "20"
    },
    "7062": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7063": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "POP",
      "path": "20"
    },
    "7064": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "POP",
      "path": "20"
    },
    "7065": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "POP",
      "path": "20"
    },
    "7066": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "POP",
      "path": "20"
    },
    "7067": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7069": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7070": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "7071": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1F"
    },
    "7073": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "NOT",
      "path": "20"
    },
    "7074": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1F"
    },
    "7076": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7077": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "ADD",
      "path": "20"
    },
    "7078": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "AND",
      "path": "20"
    },
    "7079": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7080": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "ADD",
      "path": "20"
    },
    "7081": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7082": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7084": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7085": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "POP",
      "path": "20"
    },
    "7086": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7087": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "ADD",
      "path": "20"
    },
    "7088": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7089": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1BBA"
    },
    "7092": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7093": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7094": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3E31"
    },
    "7097": {
      "fn": "SafeERC20.safeApprove",
      "jump": "i",
      "offset": [
        1729,
        1768
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7098": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7099": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1773
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "7100": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1712,
        1774
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7101": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1704,
        1854
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1BD8"
    },
    "7104": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1704,
        1854
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7105": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1704,
        1854
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7107": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1704,
        1854
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7108": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7112": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7114": {
      "op": "SHL"
    },
    "7115": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1704,
        1854
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7116": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1704,
        1854
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7117": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1704,
        1854
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "7119": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1704,
        1854
      ],
      "op": "ADD",
      "path": "20"
    },
    "7120": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1704,
        1854
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x19C"
    },
    "7123": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1704,
        1854
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7124": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1704,
        1854
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x44B4"
    },
    "7127": {
      "fn": "SafeERC20.safeApprove",
      "jump": "i",
      "offset": [
        1704,
        1854
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7128": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1704,
        1854
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7129": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1864,
        1954
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 53,
      "value": "0x1C2E"
    },
    "7132": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1884,
        1889
      ],
      "op": "DUP4",
      "path": "20"
    },
    "7133": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1914,
        1936
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x95EA7B3"
    },
    "7138": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1914,
        1936
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE0"
    },
    "7140": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1914,
        1936
      ],
      "op": "SHL",
      "path": "20"
    },
    "7141": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1938,
        1945
      ],
      "op": "DUP5",
      "path": "20"
    },
    "7142": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1947,
        1952
      ],
      "op": "DUP5",
      "path": "20"
    },
    "7143": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7145": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7146": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "7148": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "ADD",
      "path": "20"
    },
    "7149": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1BF7"
    },
    "7152": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "7153": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7154": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7155": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3FAF"
    },
    "7158": {
      "fn": "SafeERC20.safeApprove",
      "jump": "i",
      "offset": [
        1891,
        1953
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7159": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7160": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7162": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7163": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7164": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7166": {
      "op": "NOT"
    },
    "7167": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7168": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "DUP5",
      "path": "20"
    },
    "7169": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "SUB",
      "path": "20"
    },
    "7170": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "ADD",
      "path": "20"
    },
    "7171": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7172": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7173": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7174": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7175": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7176": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "7178": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7179": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "ADD",
      "path": "20"
    },
    "7180": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7181": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7184": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7186": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7188": {
      "op": "SHL"
    },
    "7189": {
      "op": "SUB"
    },
    "7190": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "AND",
      "path": "20"
    },
    "7191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7195": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7197": {
      "op": "SHL"
    },
    "7198": {
      "op": "SUB"
    },
    "7199": {
      "op": "NOT"
    },
    "7200": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7201": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "7202": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "AND",
      "path": "20"
    },
    "7203": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "7204": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7205": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "7206": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "OR",
      "path": "20"
    },
    "7207": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7208": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7209": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7210": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1864,
        1883
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x323C"
    },
    "7213": {
      "fn": "SafeERC20.safeApprove",
      "jump": "i",
      "offset": [
        1864,
        1954
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7214": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1864,
        1954
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7215": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1348,
        1961
      ],
      "op": "POP",
      "path": "20"
    },
    "7216": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1348,
        1961
      ],
      "op": "POP",
      "path": "20"
    },
    "7217": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1348,
        1961
      ],
      "op": "POP",
      "path": "20"
    },
    "7218": {
      "fn": "SafeERC20.safeApprove",
      "jump": "o",
      "offset": [
        1348,
        1961
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7219": {
      "fn": "Address.isContract",
      "offset": [
        726,
        1139
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "7220": {
      "fn": "Address.isContract",
      "offset": [
        1086,
        1106
      ],
      "op": "EXTCODESIZE",
      "path": "21"
    },
    "7221": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "ISZERO",
      "path": "21",
      "statement": 54
    },
    "7222": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "7223": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "7224": {
      "fn": "Address.isContract",
      "jump": "o",
      "offset": [
        726,
        1139
      ],
      "op": "JUMP",
      "path": "21"
    },
    "7225": {
      "fn": "Address.functionCall",
      "offset": [
        3581,
        3774
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "7226": {
      "fn": "Address.functionCall",
      "offset": [
        3684,
        3696
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x60"
    },
    "7228": {
      "fn": "Address.functionCall",
      "offset": [
        3715,
        3767
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 55,
      "value": "0x1C48"
    },
    "7231": {
      "fn": "Address.functionCall",
      "offset": [
        3737,
        3743
      ],
      "op": "DUP5",
      "path": "21"
    },
    "7232": {
      "fn": "Address.functionCall",
      "offset": [
        3745,
        3749
      ],
      "op": "DUP5",
      "path": "21"
    },
    "7233": {
      "fn": "Address.functionCall",
      "offset": [
        3751,
        3752
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "7235": {
      "fn": "Address.functionCall",
      "offset": [
        3754,
        3766
      ],
      "op": "DUP6",
      "path": "21"
    },
    "7236": {
      "fn": "Address.functionCall",
      "offset": [
        3715,
        3736
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x32CB"
    },
    "7239": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        3715,
        3767
      ],
      "op": "JUMP",
      "path": "21"
    },
    "7240": {
      "fn": "Address.functionCall",
      "offset": [
        3715,
        3767
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "7241": {
      "fn": "Address.functionCall",
      "offset": [
        3708,
        3767
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "7242": {
      "fn": "Address.functionCall",
      "offset": [
        3708,
        3767
      ],
      "op": "POP",
      "path": "21"
    },
    "7243": {
      "fn": "Address.functionCall",
      "offset": [
        3581,
        3774
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "7244": {
      "fn": "Address.functionCall",
      "offset": [
        3581,
        3774
      ],
      "op": "SWAP4",
      "path": "21"
    },
    "7245": {
      "fn": "Address.functionCall",
      "offset": [
        3581,
        3774
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "7246": {
      "fn": "Address.functionCall",
      "offset": [
        3581,
        3774
      ],
      "op": "POP",
      "path": "21"
    },
    "7247": {
      "fn": "Address.functionCall",
      "offset": [
        3581,
        3774
      ],
      "op": "POP",
      "path": "21"
    },
    "7248": {
      "fn": "Address.functionCall",
      "offset": [
        3581,
        3774
      ],
      "op": "POP",
      "path": "21"
    },
    "7249": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3581,
        3774
      ],
      "op": "JUMP",
      "path": "21"
    },
    "7250": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4031,
        4322
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "7251": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4104,
        4114
      ],
      "op": "DUP1",
      "path": "63"
    },
    "7252": {
      "branch": 186,
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4104,
        4114
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "7253": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4100,
        4318
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1E19"
    },
    "7256": {
      "branch": 186,
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4100,
        4318
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "7257": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7259": {
      "op": "NOT"
    },
    "7260": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4128,
        4134
      ],
      "op": "DUP2",
      "path": "63"
    },
    "7261": {
      "branch": 187,
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4128,
        4146
      ],
      "op": "EQ",
      "path": "63"
    },
    "7262": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4124,
        4213
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "7263": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4124,
        4213
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1CF9"
    },
    "7266": {
      "branch": 187,
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4124,
        4213
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "7267": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4179
      ],
      "op": "PUSH32",
      "path": "63",
      "statement": 56,
      "value": "0x0"
    },
    "7300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7304": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7306": {
      "op": "SHL"
    },
    "7307": {
      "op": "SUB"
    },
    "7308": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4202
      ],
      "op": "AND",
      "path": "63"
    },
    "7309": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4202
      ],
      "op": "PUSH4",
      "path": "63",
      "value": "0xF70AEDD9"
    },
    "7314": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "7316": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "7317": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "DUP2",
      "path": "63"
    },
    "7318": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "PUSH4",
      "path": "63",
      "value": "0xFFFFFFFF"
    },
    "7323": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "AND",
      "path": "63"
    },
    "7324": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0xE0"
    },
    "7326": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "SHL",
      "path": "63"
    },
    "7327": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "DUP2",
      "path": "63"
    },
    "7328": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "7329": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "7331": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "ADD",
      "path": "63"
    },
    "7332": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x80"
    },
    "7334": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "7336": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "7337": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "DUP1",
      "path": "63"
    },
    "7338": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "DUP4",
      "path": "63"
    },
    "7339": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "SUB",
      "path": "63"
    },
    "7340": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "DUP2",
      "path": "63"
    },
    "7341": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "DUP7",
      "path": "63"
    },
    "7342": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "DUP1",
      "path": "63"
    },
    "7343": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "EXTCODESIZE",
      "path": "63"
    },
    "7344": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "7345": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "DUP1",
      "path": "63"
    },
    "7346": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "7347": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1CBB"
    },
    "7350": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "7351": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "7353": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "DUP1",
      "path": "63"
    },
    "7354": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "REVERT",
      "path": "63"
    },
    "7355": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "7356": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "POP",
      "path": "63"
    },
    "7357": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "GAS",
      "path": "63"
    },
    "7358": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "STATICCALL",
      "path": "63"
    },
    "7359": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "7360": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "DUP1",
      "path": "63"
    },
    "7361": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "7362": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1CCF"
    },
    "7365": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "7366": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "RETURNDATASIZE",
      "path": "63"
    },
    "7367": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "7369": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "DUP1",
      "path": "63"
    },
    "7370": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "RETURNDATACOPY",
      "path": "63"
    },
    "7371": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "RETURNDATASIZE",
      "path": "63"
    },
    "7372": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "7374": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "REVERT",
      "path": "63"
    },
    "7375": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "7376": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "POP",
      "path": "63"
    },
    "7377": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "POP",
      "path": "63"
    },
    "7378": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "POP",
      "path": "63"
    },
    "7379": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "POP",
      "path": "63"
    },
    "7380": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "7382": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "7383": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "RETURNDATASIZE",
      "path": "63"
    },
    "7384": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x1F"
    },
    "7386": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "NOT",
      "path": "63"
    },
    "7387": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x1F"
    },
    "7389": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "DUP3",
      "path": "63"
    },
    "7390": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "ADD",
      "path": "63"
    },
    "7391": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "AND",
      "path": "63"
    },
    "7392": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "DUP3",
      "path": "63"
    },
    "7393": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "ADD",
      "path": "63"
    },
    "7394": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "DUP1",
      "path": "63"
    },
    "7395": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "7397": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "7398": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "POP",
      "path": "63"
    },
    "7399": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "DUP2",
      "path": "63"
    },
    "7400": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "ADD",
      "path": "63"
    },
    "7401": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "7402": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1CF3"
    },
    "7405": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "7406": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "7407": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x3B80"
    },
    "7410": {
      "fn": "BasicSpell.doTakeCollateral",
      "jump": "i",
      "offset": [
        4175,
        4204
      ],
      "op": "JUMP",
      "path": "63"
    },
    "7411": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4175,
        4204
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "7412": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4158,
        4204
      ],
      "op": "SWAP4",
      "path": "63"
    },
    "7413": {
      "op": "POP"
    },
    "7414": {
      "op": "POP"
    },
    "7415": {
      "op": "POP"
    },
    "7416": {
      "op": "POP"
    },
    "7417": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4124,
        4213
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "7418": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4220,
        4277
      ],
      "op": "PUSH1",
      "path": "63",
      "statement": 57,
      "value": "0x40"
    },
    "7420": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4220,
        4277
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "7421": {
      "op": "PUSH4",
      "value": "0xD1D6975"
    },
    "7426": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "7428": {
      "op": "SHL"
    },
    "7429": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4220,
        4277
      ],
      "op": "DUP2",
      "path": "63"
    },
    "7430": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4220,
        4277
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "7431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7435": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7437": {
      "op": "SHL"
    },
    "7438": {
      "op": "SUB"
    },
    "7439": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4220,
        4224
      ],
      "op": "PUSH32",
      "path": "63",
      "value": "0x0"
    },
    "7472": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4220,
        4239
      ],
      "op": "DUP2",
      "path": "63"
    },
    "7473": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4220,
        4239
      ],
      "op": "AND",
      "path": "63"
    },
    "7474": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4220,
        4239
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "7475": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4220,
        4239
      ],
      "op": "PUSH4",
      "path": "63",
      "value": "0x68EB4BA8"
    },
    "7480": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4220,
        4239
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "7481": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4220,
        4277
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1D6B"
    },
    "7484": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4220,
        4277
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "7485": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4248,
        4254
      ],
      "op": "PUSH32",
      "path": "63",
      "value": "0x0"
    },
    "7518": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4248,
        4254
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "7519": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4257,
        4268
      ],
      "op": "DUP8",
      "path": "63"
    },
    "7520": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4257,
        4268
      ],
      "op": "AND",
      "path": "63"
    },
    "7521": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4257,
        4268
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "7522": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4270,
        4276
      ],
      "op": "DUP7",
      "path": "63"
    },
    "7523": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4270,
        4276
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "7524": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4220,
        4277
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "7526": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4220,
        4277
      ],
      "op": "ADD",
      "path": "63"
    },
    "7527": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4220,
        4277
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x3FC8"
    },
    "7530": {
      "fn": "BasicSpell.doTakeCollateral",
      "jump": "i",
      "offset": [
        4220,
        4277
      ],
      "op": "JUMP",
      "path": "63"
    },
    "7531": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4220,
        4277
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "7532": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4220,
        4277
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "7534": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4220,
        4277
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "7536": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4220,
        4277
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "7537": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4220,
        4277
      ],
      "op": "DUP1",
      "path": "63"
    },
    "7538": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4220,
        4277
      ],
      "op": "DUP4",
      "path": "63"
    },
    "7539": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4220,
        4277
      ],
      "op": "SUB",
      "path": "63"
    },
    "7540": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4220,
        4277
      ],
      "op": "DUP2",
      "path": "63"
    },
    "7541": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4220,
        4277
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "7543": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4220,
        4277
      ],
      "op": "DUP8",
      "path": "63"
    },
    "7544": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4220,
        4277
      ],
      "op": "DUP1",
      "path": "63"
    },
    "7545": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4220,
        4277
      ],
      "op": "EXTCODESIZE",
      "path": "63"
    },
    "7546": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4220,
        4277
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "7547": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4220,
        4277
      ],
      "op": "DUP1",
      "path": "63"
    },
    "7548": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4220,
        4277
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "7549": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4220,
        4277
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1D85"
    },
    "7552": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4220,
        4277
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "7553": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4220,
        4277
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "7555": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4220,
        4277
      ],
      "op": "DUP1",
      "path": "63"
    },
    "7556": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4220,
        4277
      ],
      "op": "REVERT",
      "path": "63"
    },
    "7557": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4220,
        4277
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "7558": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4220,
        4277
      ],
      "op": "POP",
      "path": "63"
    },
    "7559": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4220,
        4277
      ],
      "op": "GAS",
      "path": "63"
    },
    "7560": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4220,
        4277
      ],
      "op": "CALL",
      "path": "63"
    },
    "7561": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4220,
        4277
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "7562": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4220,
        4277
      ],
      "op": "DUP1",
      "path": "63"
    },
    "7563": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4220,
        4277
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "7564": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4220,
        4277
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1D99"
    },
    "7567": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4220,
        4277
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "7568": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4220,
        4277
      ],
      "op": "RETURNDATASIZE",
      "path": "63"
    },
    "7569": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4220,
        4277
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "7571": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4220,
        4277
      ],
      "op": "DUP1",
      "path": "63"
    },
    "7572": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4220,
        4277
      ],
      "op": "RETURNDATACOPY",
      "path": "63"
    },
    "7573": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4220,
        4277
      ],
      "op": "RETURNDATASIZE",
      "path": "63"
    },
    "7574": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4220,
        4277
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "7576": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4220,
        4277
      ],
      "op": "REVERT",
      "path": "63"
    },
    "7577": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4220,
        4277
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "7578": {
      "op": "POP"
    },
    "7579": {
      "op": "POP"
    },
    "7580": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4285,
        4311
      ],
      "op": "PUSH1",
      "path": "63",
      "statement": 58,
      "value": "0x40"
    },
    "7582": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4285,
        4311
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "7583": {
      "op": "PUSH4",
      "value": "0x2770A7EB"
    },
    "7588": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "7590": {
      "op": "SHL"
    },
    "7591": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4285,
        4311
      ],
      "op": "DUP2",
      "path": "63"
    },
    "7592": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4285,
        4311
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "7593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7597": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7599": {
      "op": "SHL"
    },
    "7600": {
      "op": "SUB"
    },
    "7601": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4285,
        4291
      ],
      "op": "PUSH32",
      "path": "63",
      "value": "0x0"
    },
    "7634": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4285,
        4296
      ],
      "op": "AND",
      "path": "63"
    },
    "7635": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4285,
        4296
      ],
      "op": "SWAP3",
      "path": "63"
    },
    "7636": {
      "op": "POP"
    },
    "7637": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4285,
        4296
      ],
      "op": "PUSH4",
      "path": "63",
      "value": "0x9DC29FAC"
    },
    "7642": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4285,
        4296
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "7643": {
      "op": "POP"
    },
    "7644": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4285,
        4311
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1DEB"
    },
    "7647": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4285,
        4311
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "7648": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4297,
        4302
      ],
      "op": "DUP6",
      "path": "63"
    },
    "7649": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4297,
        4302
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "7650": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4304,
        4310
      ],
      "op": "DUP6",
      "path": "63"
    },
    "7651": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4304,
        4310
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "7652": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4285,
        4311
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "7654": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4285,
        4311
      ],
      "op": "ADD",
      "path": "63"
    },
    "7655": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4285,
        4311
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x3FAF"
    },
    "7658": {
      "fn": "BasicSpell.doTakeCollateral",
      "jump": "i",
      "offset": [
        4285,
        4311
      ],
      "op": "JUMP",
      "path": "63"
    },
    "7659": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4285,
        4311
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "7660": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4285,
        4311
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "7662": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4285,
        4311
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "7664": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4285,
        4311
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "7665": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4285,
        4311
      ],
      "op": "DUP1",
      "path": "63"
    },
    "7666": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4285,
        4311
      ],
      "op": "DUP4",
      "path": "63"
    },
    "7667": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4285,
        4311
      ],
      "op": "SUB",
      "path": "63"
    },
    "7668": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4285,
        4311
      ],
      "op": "DUP2",
      "path": "63"
    },
    "7669": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4285,
        4311
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "7671": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4285,
        4311
      ],
      "op": "DUP8",
      "path": "63"
    },
    "7672": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4285,
        4311
      ],
      "op": "DUP1",
      "path": "63"
    },
    "7673": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4285,
        4311
      ],
      "op": "EXTCODESIZE",
      "path": "63"
    },
    "7674": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4285,
        4311
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "7675": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4285,
        4311
      ],
      "op": "DUP1",
      "path": "63"
    },
    "7676": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4285,
        4311
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "7677": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4285,
        4311
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1E05"
    },
    "7680": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4285,
        4311
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "7681": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4285,
        4311
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "7683": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4285,
        4311
      ],
      "op": "DUP1",
      "path": "63"
    },
    "7684": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4285,
        4311
      ],
      "op": "REVERT",
      "path": "63"
    },
    "7685": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4285,
        4311
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "7686": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4285,
        4311
      ],
      "op": "POP",
      "path": "63"
    },
    "7687": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4285,
        4311
      ],
      "op": "GAS",
      "path": "63"
    },
    "7688": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4285,
        4311
      ],
      "op": "CALL",
      "path": "63"
    },
    "7689": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4285,
        4311
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "7690": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4285,
        4311
      ],
      "op": "DUP1",
      "path": "63"
    },
    "7691": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4285,
        4311
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "7692": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4285,
        4311
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0xC8B"
    },
    "7695": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4285,
        4311
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "7696": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4285,
        4311
      ],
      "op": "RETURNDATASIZE",
      "path": "63"
    },
    "7697": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4285,
        4311
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "7699": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4285,
        4311
      ],
      "op": "DUP1",
      "path": "63"
    },
    "7700": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4285,
        4311
      ],
      "op": "RETURNDATACOPY",
      "path": "63"
    },
    "7701": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4285,
        4311
      ],
      "op": "RETURNDATASIZE",
      "path": "63"
    },
    "7702": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4285,
        4311
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "7704": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4285,
        4311
      ],
      "op": "REVERT",
      "path": "63"
    },
    "7705": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4100,
        4318
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "7706": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4031,
        4322
      ],
      "op": "POP",
      "path": "63"
    },
    "7707": {
      "fn": "BasicSpell.doTakeCollateral",
      "offset": [
        4031,
        4322
      ],
      "op": "POP",
      "path": "63"
    },
    "7708": {
      "fn": "BasicSpell.doTakeCollateral",
      "jump": "o",
      "offset": [
        4031,
        4322
      ],
      "op": "JUMP",
      "path": "63"
    },
    "7709": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8607,
        10971
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "7710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7714": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7716": {
      "op": "SHL"
    },
    "7717": {
      "op": "SUB"
    },
    "7718": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8754,
        8777
      ],
      "op": "DUP2",
      "path": "66",
      "statement": 59
    },
    "7719": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8754,
        8777
      ],
      "op": "AND",
      "path": "66"
    },
    "7720": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8754,
        8777
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "7722": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8754,
        8777
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "7723": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8754,
        8777
      ],
      "op": "DUP2",
      "path": "66"
    },
    "7724": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8754,
        8777
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "7725": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8754,
        8773
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x84"
    },
    "7727": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8754,
        8777
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x20"
    },
    "7729": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8754,
        8777
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "7730": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8754,
        8777
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "7732": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8754,
        8777
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "7733": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8754,
        8777
      ],
      "op": "KECCAK256",
      "path": "66"
    },
    "7734": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8754,
        8777
      ],
      "op": "SLOAD",
      "path": "66"
    },
    "7735": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8754,
        8777
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0xFF"
    },
    "7737": {
      "branch": 159,
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8754,
        8777
      ],
      "op": "AND",
      "path": "66"
    },
    "7738": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8746,
        8806
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x1E55"
    },
    "7741": {
      "branch": 159,
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8746,
        8806
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "7742": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8746,
        8806
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "7744": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8746,
        8806
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "7745": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7749": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7751": {
      "op": "SHL"
    },
    "7752": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8746,
        8806
      ],
      "op": "DUP2",
      "path": "66"
    },
    "7753": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8746,
        8806
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "7754": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8746,
        8806
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "7756": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8746,
        8806
      ],
      "op": "ADD",
      "path": "66"
    },
    "7757": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8746,
        8806
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x19C"
    },
    "7760": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8746,
        8806
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "7761": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8746,
        8806
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x42A2"
    },
    "7764": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "jump": "i",
      "offset": [
        8746,
        8806
      ],
      "op": "JUMP",
      "path": "66"
    },
    "7765": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8746,
        8806
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "7766": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8812,
        8827
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "7768": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8834
      ],
      "op": "PUSH32",
      "path": "66",
      "value": "0x0"
    },
    "7801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7805": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7807": {
      "op": "SHL"
    },
    "7808": {
      "op": "SUB"
    },
    "7809": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8846
      ],
      "op": "AND",
      "path": "66"
    },
    "7810": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8846
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0xD7AC71FF"
    },
    "7815": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "7817": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "7818": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "DUP2",
      "path": "66"
    },
    "7819": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0xFFFFFFFF"
    },
    "7824": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "AND",
      "path": "66"
    },
    "7825": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0xE0"
    },
    "7827": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "SHL",
      "path": "66"
    },
    "7828": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "DUP2",
      "path": "66"
    },
    "7829": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "7830": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "7832": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "ADD",
      "path": "66"
    },
    "7833": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x20"
    },
    "7835": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "7837": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "7838": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "DUP1",
      "path": "66"
    },
    "7839": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "DUP4",
      "path": "66"
    },
    "7840": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "SUB",
      "path": "66"
    },
    "7841": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "DUP2",
      "path": "66"
    },
    "7842": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "DUP7",
      "path": "66"
    },
    "7843": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "DUP1",
      "path": "66"
    },
    "7844": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "EXTCODESIZE",
      "path": "66"
    },
    "7845": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "7846": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "DUP1",
      "path": "66"
    },
    "7847": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "7848": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x1EB0"
    },
    "7851": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "7852": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "7854": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "DUP1",
      "path": "66"
    },
    "7855": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "REVERT",
      "path": "66"
    },
    "7856": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "7857": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "POP",
      "path": "66"
    },
    "7858": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "GAS",
      "path": "66"
    },
    "7859": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "STATICCALL",
      "path": "66"
    },
    "7860": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "7861": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "DUP1",
      "path": "66"
    },
    "7862": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "7863": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x1EC4"
    },
    "7866": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "7867": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "7868": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "7870": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "DUP1",
      "path": "66"
    },
    "7871": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "RETURNDATACOPY",
      "path": "66"
    },
    "7872": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "7873": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "7875": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "REVERT",
      "path": "66"
    },
    "7876": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "7877": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "POP",
      "path": "66"
    },
    "7878": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "POP",
      "path": "66"
    },
    "7879": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "POP",
      "path": "66"
    },
    "7880": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "POP",
      "path": "66"
    },
    "7881": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "7883": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "7884": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "7885": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "7887": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "NOT",
      "path": "66"
    },
    "7888": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "7890": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "DUP3",
      "path": "66"
    },
    "7891": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "ADD",
      "path": "66"
    },
    "7892": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "AND",
      "path": "66"
    },
    "7893": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "DUP3",
      "path": "66"
    },
    "7894": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "ADD",
      "path": "66"
    },
    "7895": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "DUP1",
      "path": "66"
    },
    "7896": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "7898": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "7899": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "POP",
      "path": "66"
    },
    "7900": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "DUP2",
      "path": "66"
    },
    "7901": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "ADD",
      "path": "66"
    },
    "7902": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "7903": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x1EE8"
    },
    "7906": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "7907": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "7908": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3E31"
    },
    "7911": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "jump": "i",
      "offset": [
        8830,
        8848
      ],
      "op": "JUMP",
      "path": "66"
    },
    "7912": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8830,
        8848
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "7913": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8812,
        8848
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "7914": {
      "op": "POP"
    },
    "7915": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8872,
        8885
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "7917": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8872,
        8885
      ],
      "op": "DUP4",
      "path": "66"
    },
    "7918": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8872,
        8885
      ],
      "op": "ADD",
      "path": "66"
    },
    "7919": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8872,
        8885
      ],
      "op": "CALLDATALOAD",
      "path": "66"
    },
    "7920": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8908,
        8921
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x60"
    },
    "7922": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8908,
        8921
      ],
      "op": "DUP5",
      "path": "66"
    },
    "7923": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8908,
        8921
      ],
      "op": "ADD",
      "path": "66"
    },
    "7924": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8908,
        8921
      ],
      "op": "CALLDATALOAD",
      "path": "66"
    },
    "7925": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8945,
        8959
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x80"
    },
    "7927": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8945,
        8959
      ],
      "op": "DUP6",
      "path": "66"
    },
    "7928": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8945,
        8959
      ],
      "op": "ADD",
      "path": "66"
    },
    "7929": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8945,
        8959
      ],
      "op": "CALLDATALOAD",
      "path": "66"
    },
    "7930": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7932": {
      "op": "NOT"
    },
    "7933": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9035,
        9056
      ],
      "op": "DUP4",
      "path": "66"
    },
    "7934": {
      "branch": 160,
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9035,
        9056
      ],
      "op": "EQ",
      "path": "66"
    },
    "7935": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9031,
        9130
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "7936": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9031,
        9130
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x1FA6"
    },
    "7939": {
      "branch": 160,
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9031,
        9130
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "7940": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "PUSH1",
      "path": "66",
      "statement": 60,
      "value": "0x40"
    },
    "7942": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "7943": {
      "op": "PUSH4",
      "value": "0x20A8BEE7"
    },
    "7948": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "7950": {
      "op": "SHL"
    },
    "7951": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "DUP2",
      "path": "66"
    },
    "7952": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "7953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7957": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7959": {
      "op": "SHL"
    },
    "7960": {
      "op": "SUB"
    },
    "7961": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9082
      ],
      "op": "PUSH32",
      "path": "66",
      "value": "0x0"
    },
    "7994": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9103
      ],
      "op": "AND",
      "path": "66"
    },
    "7995": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9103
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "7996": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9103
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0x82A2FB9C"
    },
    "8001": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9103
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "8002": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x1F51"
    },
    "8005": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "8006": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9104,
        9114
      ],
      "op": "DUP8",
      "path": "66"
    },
    "8007": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9104,
        9114
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "8008": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9116,
        9122
      ],
      "op": "DUP13",
      "path": "66"
    },
    "8009": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9116,
        9122
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "8010": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "8012": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "ADD",
      "path": "66"
    },
    "8013": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x4513"
    },
    "8016": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "jump": "i",
      "offset": [
        9078,
        9123
      ],
      "op": "JUMP",
      "path": "66"
    },
    "8017": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "8018": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x20"
    },
    "8020": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "8022": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "8023": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "DUP1",
      "path": "66"
    },
    "8024": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "DUP4",
      "path": "66"
    },
    "8025": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "SUB",
      "path": "66"
    },
    "8026": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "DUP2",
      "path": "66"
    },
    "8027": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "8029": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "DUP8",
      "path": "66"
    },
    "8030": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "DUP1",
      "path": "66"
    },
    "8031": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "EXTCODESIZE",
      "path": "66"
    },
    "8032": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "8033": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "DUP1",
      "path": "66"
    },
    "8034": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "8035": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x1F6B"
    },
    "8038": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "8039": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "8041": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "DUP1",
      "path": "66"
    },
    "8042": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "REVERT",
      "path": "66"
    },
    "8043": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "8044": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "POP",
      "path": "66"
    },
    "8045": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "GAS",
      "path": "66"
    },
    "8046": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "CALL",
      "path": "66"
    },
    "8047": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "8048": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "DUP1",
      "path": "66"
    },
    "8049": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "8050": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x1F7F"
    },
    "8053": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "8054": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "8055": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "8057": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "DUP1",
      "path": "66"
    },
    "8058": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "RETURNDATACOPY",
      "path": "66"
    },
    "8059": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "8060": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "8062": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "REVERT",
      "path": "66"
    },
    "8063": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "8064": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "POP",
      "path": "66"
    },
    "8065": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "POP",
      "path": "66"
    },
    "8066": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "POP",
      "path": "66"
    },
    "8067": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "POP",
      "path": "66"
    },
    "8068": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "8070": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "8071": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "8072": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "8074": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "NOT",
      "path": "66"
    },
    "8075": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "8077": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "DUP3",
      "path": "66"
    },
    "8078": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "ADD",
      "path": "66"
    },
    "8079": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "AND",
      "path": "66"
    },
    "8080": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "DUP3",
      "path": "66"
    },
    "8081": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "ADD",
      "path": "66"
    },
    "8082": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "DUP1",
      "path": "66"
    },
    "8083": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "8085": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "8086": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "POP",
      "path": "66"
    },
    "8087": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "DUP2",
      "path": "66"
    },
    "8088": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "ADD",
      "path": "66"
    },
    "8089": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "8090": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x1FA3"
    },
    "8093": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "8094": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "8095": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3E31"
    },
    "8098": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "jump": "i",
      "offset": [
        9078,
        9123
      ],
      "op": "JUMP",
      "path": "66"
    },
    "8099": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9078,
        9123
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "8100": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9066,
        9123
      ],
      "op": "SWAP3",
      "path": "66"
    },
    "8101": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9066,
        9123
      ],
      "op": "POP",
      "path": "66"
    },
    "8102": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9031,
        9130
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "8103": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8105": {
      "op": "NOT"
    },
    "8106": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9139,
        9148
      ],
      "op": "DUP3",
      "path": "66"
    },
    "8107": {
      "branch": 161,
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9139,
        9160
      ],
      "op": "EQ",
      "path": "66"
    },
    "8108": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9135,
        9234
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "8109": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9135,
        9234
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2053"
    },
    "8112": {
      "branch": 161,
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9135,
        9234
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "8113": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "PUSH1",
      "path": "66",
      "statement": 61,
      "value": "0x40"
    },
    "8115": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "8116": {
      "op": "PUSH4",
      "value": "0x20A8BEE7"
    },
    "8121": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "8123": {
      "op": "SHL"
    },
    "8124": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "DUP2",
      "path": "66"
    },
    "8125": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "8126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8128": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8130": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8132": {
      "op": "SHL"
    },
    "8133": {
      "op": "SUB"
    },
    "8134": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9186
      ],
      "op": "PUSH32",
      "path": "66",
      "value": "0x0"
    },
    "8167": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9207
      ],
      "op": "AND",
      "path": "66"
    },
    "8168": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9207
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "8169": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9207
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0x82A2FB9C"
    },
    "8174": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9207
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "8175": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x1FFE"
    },
    "8178": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "8179": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9208,
        9218
      ],
      "op": "DUP8",
      "path": "66"
    },
    "8180": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9208,
        9218
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "8181": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9220,
        9226
      ],
      "op": "DUP12",
      "path": "66"
    },
    "8182": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9220,
        9226
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "8183": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "8185": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "ADD",
      "path": "66"
    },
    "8186": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x4513"
    },
    "8189": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "jump": "i",
      "offset": [
        9182,
        9227
      ],
      "op": "JUMP",
      "path": "66"
    },
    "8190": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "8191": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x20"
    },
    "8193": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "8195": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "8196": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "DUP1",
      "path": "66"
    },
    "8197": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "DUP4",
      "path": "66"
    },
    "8198": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "SUB",
      "path": "66"
    },
    "8199": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "DUP2",
      "path": "66"
    },
    "8200": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "8202": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "DUP8",
      "path": "66"
    },
    "8203": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "DUP1",
      "path": "66"
    },
    "8204": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "EXTCODESIZE",
      "path": "66"
    },
    "8205": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "8206": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "DUP1",
      "path": "66"
    },
    "8207": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "8208": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2018"
    },
    "8211": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "8212": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "8214": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "DUP1",
      "path": "66"
    },
    "8215": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "REVERT",
      "path": "66"
    },
    "8216": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "8217": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "POP",
      "path": "66"
    },
    "8218": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "GAS",
      "path": "66"
    },
    "8219": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "CALL",
      "path": "66"
    },
    "8220": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "8221": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "DUP1",
      "path": "66"
    },
    "8222": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "8223": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x202C"
    },
    "8226": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "8227": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "8228": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "8230": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "DUP1",
      "path": "66"
    },
    "8231": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "RETURNDATACOPY",
      "path": "66"
    },
    "8232": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "8233": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "8235": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "REVERT",
      "path": "66"
    },
    "8236": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "8237": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "POP",
      "path": "66"
    },
    "8238": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "POP",
      "path": "66"
    },
    "8239": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "POP",
      "path": "66"
    },
    "8240": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "POP",
      "path": "66"
    },
    "8241": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "8243": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "8244": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "8245": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "8247": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "NOT",
      "path": "66"
    },
    "8248": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "8250": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "DUP3",
      "path": "66"
    },
    "8251": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "ADD",
      "path": "66"
    },
    "8252": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "AND",
      "path": "66"
    },
    "8253": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "DUP3",
      "path": "66"
    },
    "8254": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "ADD",
      "path": "66"
    },
    "8255": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "DUP1",
      "path": "66"
    },
    "8256": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "8258": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "8259": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "POP",
      "path": "66"
    },
    "8260": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "DUP2",
      "path": "66"
    },
    "8261": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "ADD",
      "path": "66"
    },
    "8262": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "8263": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2050"
    },
    "8266": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "8267": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "8268": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3E31"
    },
    "8271": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "jump": "i",
      "offset": [
        9182,
        9227
      ],
      "op": "JUMP",
      "path": "66"
    },
    "8272": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9182,
        9227
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "8273": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9170,
        9227
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "8274": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9170,
        9227
      ],
      "op": "POP",
      "path": "66"
    },
    "8275": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9135,
        9234
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "8276": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8278": {
      "op": "NOT"
    },
    "8279": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9243,
        9253
      ],
      "op": "DUP2",
      "path": "66"
    },
    "8280": {
      "branch": 162,
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9243,
        9265
      ],
      "op": "EQ",
      "path": "66"
    },
    "8281": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9239,
        9336
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "8282": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9239,
        9336
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2100"
    },
    "8285": {
      "branch": 162,
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9239,
        9336
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "8286": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "PUSH1",
      "path": "66",
      "statement": 62,
      "value": "0x40"
    },
    "8288": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "8289": {
      "op": "PUSH4",
      "value": "0x20A8BEE7"
    },
    "8294": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "8296": {
      "op": "SHL"
    },
    "8297": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "DUP2",
      "path": "66"
    },
    "8298": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "8299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8303": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8305": {
      "op": "SHL"
    },
    "8306": {
      "op": "SUB"
    },
    "8307": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9292
      ],
      "op": "PUSH32",
      "path": "66",
      "value": "0x0"
    },
    "8340": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9313
      ],
      "op": "AND",
      "path": "66"
    },
    "8341": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9313
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "8342": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9313
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0x82A2FB9C"
    },
    "8347": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9313
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "8348": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x20AB"
    },
    "8351": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "8352": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9314,
        9324
      ],
      "op": "DUP8",
      "path": "66"
    },
    "8353": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9314,
        9324
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "8354": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9326,
        9328
      ],
      "op": "DUP10",
      "path": "66"
    },
    "8355": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9326,
        9328
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "8356": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "8358": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "ADD",
      "path": "66"
    },
    "8359": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x4513"
    },
    "8362": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "jump": "i",
      "offset": [
        9288,
        9329
      ],
      "op": "JUMP",
      "path": "66"
    },
    "8363": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "8364": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x20"
    },
    "8366": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "8368": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "8369": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "DUP1",
      "path": "66"
    },
    "8370": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "DUP4",
      "path": "66"
    },
    "8371": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "SUB",
      "path": "66"
    },
    "8372": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "DUP2",
      "path": "66"
    },
    "8373": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "8375": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "DUP8",
      "path": "66"
    },
    "8376": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "DUP1",
      "path": "66"
    },
    "8377": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "EXTCODESIZE",
      "path": "66"
    },
    "8378": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "8379": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "DUP1",
      "path": "66"
    },
    "8380": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "8381": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x20C5"
    },
    "8384": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "8385": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "8387": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "DUP1",
      "path": "66"
    },
    "8388": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "REVERT",
      "path": "66"
    },
    "8389": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "8390": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "POP",
      "path": "66"
    },
    "8391": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "GAS",
      "path": "66"
    },
    "8392": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "CALL",
      "path": "66"
    },
    "8393": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "8394": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "DUP1",
      "path": "66"
    },
    "8395": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "8396": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x20D9"
    },
    "8399": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "8400": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "8401": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "8403": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "DUP1",
      "path": "66"
    },
    "8404": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "RETURNDATACOPY",
      "path": "66"
    },
    "8405": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "8406": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "8408": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "REVERT",
      "path": "66"
    },
    "8409": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "8410": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "POP",
      "path": "66"
    },
    "8411": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "POP",
      "path": "66"
    },
    "8412": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "POP",
      "path": "66"
    },
    "8413": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "POP",
      "path": "66"
    },
    "8414": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "8416": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "8417": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "8418": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "8420": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "NOT",
      "path": "66"
    },
    "8421": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "8423": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "DUP3",
      "path": "66"
    },
    "8424": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "ADD",
      "path": "66"
    },
    "8425": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "AND",
      "path": "66"
    },
    "8426": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "DUP3",
      "path": "66"
    },
    "8427": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "ADD",
      "path": "66"
    },
    "8428": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "DUP1",
      "path": "66"
    },
    "8429": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "8431": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "8432": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "POP",
      "path": "66"
    },
    "8433": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "DUP2",
      "path": "66"
    },
    "8434": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "ADD",
      "path": "66"
    },
    "8435": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "8436": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x20FD"
    },
    "8439": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "8440": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "8441": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3E31"
    },
    "8444": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "jump": "i",
      "offset": [
        9288,
        9329
      ],
      "op": "JUMP",
      "path": "66"
    },
    "8445": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9288,
        9329
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "8446": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9275,
        9329
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "8447": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9275,
        9329
      ],
      "op": "POP",
      "path": "66"
    },
    "8448": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9239,
        9336
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "8449": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9386,
        9404
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "8451": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9465
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x218C"
    },
    "8454": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9447,
        9450
      ],
      "op": "DUP8",
      "path": "66"
    },
    "8455": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9447,
        9464
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x20"
    },
    "8457": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9447,
        9464
      ],
      "op": "ADD",
      "path": "66"
    },
    "8458": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9447,
        9464
      ],
      "op": "CALLDATALOAD",
      "path": "66"
    },
    "8459": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9414,
        9416
      ],
      "op": "DUP8",
      "path": "66"
    },
    "8460": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8464": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8466": {
      "op": "SHL"
    },
    "8467": {
      "op": "SUB"
    },
    "8468": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9427
      ],
      "op": "AND",
      "path": "66"
    },
    "8469": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9427
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0x70A08231"
    },
    "8474": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9436,
        9440
      ],
      "op": "ADDRESS",
      "path": "66"
    },
    "8475": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "8477": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "8478": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "DUP3",
      "path": "66"
    },
    "8479": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0xFFFFFFFF"
    },
    "8484": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "AND",
      "path": "66"
    },
    "8485": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0xE0"
    },
    "8487": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "SHL",
      "path": "66"
    },
    "8488": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "DUP2",
      "path": "66"
    },
    "8489": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "8490": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "8492": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "ADD",
      "path": "66"
    },
    "8493": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2136"
    },
    "8496": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "8497": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "8498": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3EF8"
    },
    "8501": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "jump": "i",
      "offset": [
        9407,
        9442
      ],
      "op": "JUMP",
      "path": "66"
    },
    "8502": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "8503": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x20"
    },
    "8505": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "8507": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "8508": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "DUP1",
      "path": "66"
    },
    "8509": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "DUP4",
      "path": "66"
    },
    "8510": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "SUB",
      "path": "66"
    },
    "8511": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "DUP2",
      "path": "66"
    },
    "8512": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "DUP7",
      "path": "66"
    },
    "8513": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "DUP1",
      "path": "66"
    },
    "8514": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "EXTCODESIZE",
      "path": "66"
    },
    "8515": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "8516": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "DUP1",
      "path": "66"
    },
    "8517": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "8518": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x214E"
    },
    "8521": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "8522": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "8524": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "DUP1",
      "path": "66"
    },
    "8525": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "REVERT",
      "path": "66"
    },
    "8526": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "8527": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "POP",
      "path": "66"
    },
    "8528": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "GAS",
      "path": "66"
    },
    "8529": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "STATICCALL",
      "path": "66"
    },
    "8530": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "8531": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "DUP1",
      "path": "66"
    },
    "8532": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "8533": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2162"
    },
    "8536": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "8537": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "8538": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "8540": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "DUP1",
      "path": "66"
    },
    "8541": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "RETURNDATACOPY",
      "path": "66"
    },
    "8542": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "8543": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "8545": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "REVERT",
      "path": "66"
    },
    "8546": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "8547": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "POP",
      "path": "66"
    },
    "8548": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "POP",
      "path": "66"
    },
    "8549": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "POP",
      "path": "66"
    },
    "8550": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "POP",
      "path": "66"
    },
    "8551": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "8553": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "8554": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "8555": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "8557": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "NOT",
      "path": "66"
    },
    "8558": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "8560": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "DUP3",
      "path": "66"
    },
    "8561": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "ADD",
      "path": "66"
    },
    "8562": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "AND",
      "path": "66"
    },
    "8563": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "DUP3",
      "path": "66"
    },
    "8564": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "ADD",
      "path": "66"
    },
    "8565": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "DUP1",
      "path": "66"
    },
    "8566": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "8568": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "8569": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "POP",
      "path": "66"
    },
    "8570": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "DUP2",
      "path": "66"
    },
    "8571": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "ADD",
      "path": "66"
    },
    "8572": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "8573": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2186"
    },
    "8576": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "8577": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "8578": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3E31"
    },
    "8581": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "jump": "i",
      "offset": [
        9407,
        9442
      ],
      "op": "JUMP",
      "path": "66"
    },
    "8582": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9442
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "8583": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9446
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "8584": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9446
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x338C"
    },
    "8587": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "jump": "i",
      "offset": [
        9407,
        9465
      ],
      "op": "JUMP",
      "path": "66"
    },
    "8588": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9407,
        9465
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "8589": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9386,
        9465
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "8590": {
      "op": "POP"
    },
    "8591": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9499,
        9508
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "8593": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9499,
        9508
      ],
      "op": "DUP1",
      "path": "66"
    },
    "8594": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9533,
        9550
      ],
      "op": "DUP3",
      "path": "66"
    },
    "8595": {
      "branch": 163,
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9533,
        9550
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "8596": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9529,
        9737
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2247"
    },
    "8599": {
      "branch": 163,
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9529,
        9737
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "8600": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "PUSH1",
      "path": "66",
      "statement": 63,
      "value": "0x40"
    },
    "8602": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "8603": {
      "op": "PUSH4",
      "value": "0x5D5155EF"
    },
    "8608": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "8610": {
      "op": "SHL"
    },
    "8611": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "DUP2",
      "path": "66"
    },
    "8612": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "8613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8617": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8619": {
      "op": "SHL"
    },
    "8620": {
      "op": "SUB"
    },
    "8621": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9581
      ],
      "op": "PUSH32",
      "path": "66",
      "value": "0x0"
    },
    "8654": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9597
      ],
      "op": "AND",
      "path": "66"
    },
    "8655": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9597
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "8656": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9597
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0xBAA2ABDE"
    },
    "8661": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9597
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "8662": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x21F0"
    },
    "8665": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "8666": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9607,
        9613
      ],
      "op": "DUP15",
      "path": "66"
    },
    "8667": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9607,
        9613
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "8668": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9623,
        9629
      ],
      "op": "DUP15",
      "path": "66"
    },
    "8669": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9623,
        9629
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "8670": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9639,
        9652
      ],
      "op": "DUP9",
      "path": "66"
    },
    "8671": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9639,
        9652
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "8672": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9662,
        9663
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "8674": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9662,
        9663
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "8675": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9662,
        9663
      ],
      "op": "DUP2",
      "path": "66"
    },
    "8676": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9662,
        9663
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "8677": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9692,
        9696
      ],
      "op": "ADDRESS",
      "path": "66"
    },
    "8678": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9692,
        9696
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "8679": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9707,
        9722
      ],
      "op": "TIMESTAMP",
      "path": "66"
    },
    "8680": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9707,
        9722
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "8681": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "8683": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "ADD",
      "path": "66"
    },
    "8684": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3F26"
    },
    "8687": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "jump": "i",
      "offset": [
        9575,
        9730
      ],
      "op": "JUMP",
      "path": "66"
    },
    "8688": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "8689": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "8691": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "DUP1",
      "path": "66"
    },
    "8692": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "8693": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "DUP1",
      "path": "66"
    },
    "8694": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "DUP4",
      "path": "66"
    },
    "8695": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "SUB",
      "path": "66"
    },
    "8696": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "DUP2",
      "path": "66"
    },
    "8697": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "8699": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "DUP8",
      "path": "66"
    },
    "8700": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "DUP1",
      "path": "66"
    },
    "8701": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "EXTCODESIZE",
      "path": "66"
    },
    "8702": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "8703": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "DUP1",
      "path": "66"
    },
    "8704": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "8705": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2209"
    },
    "8708": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "8709": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "8711": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "DUP1",
      "path": "66"
    },
    "8712": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "REVERT",
      "path": "66"
    },
    "8713": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "8714": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "POP",
      "path": "66"
    },
    "8715": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "GAS",
      "path": "66"
    },
    "8716": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "CALL",
      "path": "66"
    },
    "8717": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "8718": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "DUP1",
      "path": "66"
    },
    "8719": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "8720": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x221D"
    },
    "8723": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "8724": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "8725": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "8727": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "DUP1",
      "path": "66"
    },
    "8728": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "RETURNDATACOPY",
      "path": "66"
    },
    "8729": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "8730": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "8732": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "REVERT",
      "path": "66"
    },
    "8733": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "8734": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "POP",
      "path": "66"
    },
    "8735": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "POP",
      "path": "66"
    },
    "8736": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "POP",
      "path": "66"
    },
    "8737": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "POP",
      "path": "66"
    },
    "8738": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "8740": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "8741": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "8742": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "8744": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "NOT",
      "path": "66"
    },
    "8745": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "8747": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "DUP3",
      "path": "66"
    },
    "8748": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "ADD",
      "path": "66"
    },
    "8749": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "AND",
      "path": "66"
    },
    "8750": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "DUP3",
      "path": "66"
    },
    "8751": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "ADD",
      "path": "66"
    },
    "8752": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "DUP1",
      "path": "66"
    },
    "8753": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "8755": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "8756": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "POP",
      "path": "66"
    },
    "8757": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "DUP2",
      "path": "66"
    },
    "8758": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "ADD",
      "path": "66"
    },
    "8759": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "8760": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2241"
    },
    "8763": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "8764": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "8765": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3E49"
    },
    "8768": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "jump": "i",
      "offset": [
        9575,
        9730
      ],
      "op": "JUMP",
      "path": "66"
    },
    "8769": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9575,
        9730
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "8770": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9560,
        9730
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "8771": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9560,
        9730
      ],
      "op": "SWAP3",
      "path": "66"
    },
    "8772": {
      "op": "POP"
    },
    "8773": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9560,
        9730
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "8774": {
      "op": "POP"
    },
    "8775": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9529,
        9737
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "8776": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9769,
        9785
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "8778": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9788,
        9814
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2257"
    },
    "8781": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9788,
        9797
      ],
      "op": "DUP8",
      "path": "66"
    },
    "8782": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9802,
        9813
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0xA0"
    },
    "8784": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9802,
        9813
      ],
      "op": "DUP13",
      "path": "66"
    },
    "8785": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9802,
        9813
      ],
      "op": "ADD",
      "path": "66"
    },
    "8786": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9802,
        9813
      ],
      "op": "CALLDATALOAD",
      "path": "66"
    },
    "8787": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9788,
        9801
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x33B4"
    },
    "8790": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "jump": "i",
      "offset": [
        9788,
        9814
      ],
      "op": "JUMP",
      "path": "66"
    },
    "8791": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9788,
        9814
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "8792": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9769,
        9814
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "8793": {
      "op": "POP"
    },
    "8794": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9820,
        9836
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "8796": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9839,
        9865
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2269"
    },
    "8799": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9839,
        9848
      ],
      "op": "DUP8",
      "path": "66"
    },
    "8800": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9853,
        9864
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0xC0"
    },
    "8802": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9853,
        9864
      ],
      "op": "DUP14",
      "path": "66"
    },
    "8803": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9853,
        9864
      ],
      "op": "ADD",
      "path": "66"
    },
    "8804": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9853,
        9864
      ],
      "op": "CALLDATALOAD",
      "path": "66"
    },
    "8805": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9839,
        9852
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x33B4"
    },
    "8808": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "jump": "i",
      "offset": [
        9839,
        9865
      ],
      "op": "JUMP",
      "path": "66"
    },
    "8809": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9839,
        9865
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "8810": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9820,
        9865
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "8811": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9820,
        9865
      ],
      "op": "POP",
      "path": "66"
    },
    "8812": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9883,
        9894
      ],
      "op": "DUP2",
      "path": "66"
    },
    "8813": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9876,
        9880
      ],
      "op": "DUP5",
      "path": "66"
    },
    "8814": {
      "branch": 164,
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9876,
        9894
      ],
      "op": "LT",
      "path": "66"
    },
    "8815": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9876,
        9916
      ],
      "op": "DUP1",
      "path": "66"
    },
    "8816": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9876,
        9916
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "8817": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9876,
        9916
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2279"
    },
    "8820": {
      "branch": 164,
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9876,
        9916
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "8821": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9876,
        9916
      ],
      "op": "POP",
      "path": "66"
    },
    "8822": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9905,
        9916
      ],
      "op": "DUP1",
      "path": "66"
    },
    "8823": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9898,
        9902
      ],
      "op": "DUP4",
      "path": "66"
    },
    "8824": {
      "branch": 165,
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9898,
        9916
      ],
      "op": "GT",
      "path": "66"
    },
    "8825": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9876,
        9916
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "8826": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9872,
        10512
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "8827": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9872,
        10512
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2398"
    },
    "8830": {
      "branch": 165,
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9872,
        10512
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "8831": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9950,
        9966
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "8833": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9950,
        9966
      ],
      "op": "DUP1",
      "path": "66"
    },
    "8834": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9950,
        9966
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "8835": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9964,
        9965
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x2"
    },
    "8837": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9950,
        9966
      ],
      "op": "DUP1",
      "path": "66"
    },
    "8838": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9950,
        9966
      ],
      "op": "DUP3",
      "path": "66"
    },
    "8839": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9950,
        9966
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "8840": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9926,
        9947
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x60"
    },
    "8842": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9950,
        9966
      ],
      "op": "DUP1",
      "path": "66"
    },
    "8843": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9950,
        9966
      ],
      "op": "DUP4",
      "path": "66"
    },
    "8844": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9950,
        9966
      ],
      "op": "ADD",
      "path": "66"
    },
    "8845": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9950,
        9966
      ],
      "op": "DUP5",
      "path": "66"
    },
    "8846": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9950,
        9966
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "8847": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9926,
        9947
      ],
      "op": "SWAP3",
      "path": "66"
    },
    "8848": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9950,
        9966
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x20"
    },
    "8850": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9950,
        9966
      ],
      "op": "DUP4",
      "path": "66"
    },
    "8851": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9950,
        9966
      ],
      "op": "ADD",
      "path": "66"
    },
    "8852": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9950,
        9966
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "8853": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9950,
        9966
      ],
      "op": "DUP1",
      "path": "66"
    },
    "8854": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9950,
        9966
      ],
      "op": "CALLDATASIZE",
      "path": "66"
    },
    "8855": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9950,
        9966
      ],
      "op": "DUP4",
      "path": "66"
    },
    "8856": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9950,
        9966
      ],
      "op": "CALLDATACOPY",
      "path": "66"
    },
    "8857": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9950,
        9966
      ],
      "op": "ADD",
      "path": "66"
    },
    "8858": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9950,
        9966
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "8859": {
      "op": "POP"
    },
    "8860": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9950,
        9966
      ],
      "op": "POP",
      "path": "66"
    },
    "8861": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9926,
        9966
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "8862": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9926,
        9966
      ],
      "op": "POP",
      "path": "66"
    },
    "8863": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9996,
        10002
      ],
      "op": "DUP13",
      "path": "66",
      "statement": 64
    },
    "8864": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10004,
        10010
      ],
      "op": "DUP15",
      "path": "66"
    },
    "8865": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9975,
        9979
      ],
      "op": "DUP3",
      "path": "66"
    },
    "8866": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9980,
        9981
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "8868": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9975,
        9982
      ],
      "op": "DUP2",
      "path": "66"
    },
    "8869": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9975,
        9982
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "8870": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9975,
        9982
      ],
      "op": "DUP2",
      "path": "66"
    },
    "8871": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9975,
        9982
      ],
      "op": "LT",
      "path": "66"
    },
    "8872": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9975,
        9982
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x22AD"
    },
    "8875": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9975,
        9982
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "8876": {
      "dev": "Index out of range",
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9975,
        9982
      ],
      "op": "INVALID",
      "path": "66"
    },
    "8877": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9975,
        9982
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "8878": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9975,
        9982
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x20"
    },
    "8880": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9975,
        9982
      ],
      "op": "MUL",
      "path": "66"
    },
    "8881": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9975,
        9982
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x20"
    },
    "8883": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9975,
        9982
      ],
      "op": "ADD",
      "path": "66"
    },
    "8884": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9975,
        9982
      ],
      "op": "ADD",
      "path": "66"
    },
    "8885": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9984,
        9988
      ],
      "op": "DUP4",
      "path": "66"
    },
    "8886": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9989,
        9990
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1"
    },
    "8888": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9984,
        9991
      ],
      "op": "DUP2",
      "path": "66"
    },
    "8889": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9984,
        9991
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "8890": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9984,
        9991
      ],
      "op": "DUP2",
      "path": "66"
    },
    "8891": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9984,
        9991
      ],
      "op": "LT",
      "path": "66"
    },
    "8892": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9984,
        9991
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x22C1"
    },
    "8895": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9984,
        9991
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "8896": {
      "dev": "Index out of range",
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9984,
        9991
      ],
      "op": "INVALID",
      "path": "66"
    },
    "8897": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9984,
        9991
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "8898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8900": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8902": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8904": {
      "op": "SHL"
    },
    "8905": {
      "op": "SUB"
    },
    "8906": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9974,
        10011
      ],
      "op": "SWAP4",
      "path": "66"
    },
    "8907": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9974,
        10011
      ],
      "op": "DUP5",
      "path": "66"
    },
    "8908": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9974,
        10011
      ],
      "op": "AND",
      "path": "66"
    },
    "8909": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9984,
        9991
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x20"
    },
    "8911": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9984,
        9991
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "8912": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9984,
        9991
      ],
      "op": "DUP3",
      "path": "66"
    },
    "8913": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9984,
        9991
      ],
      "op": "MUL",
      "path": "66"
    },
    "8914": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9984,
        9991
      ],
      "op": "SWAP3",
      "path": "66"
    },
    "8915": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9984,
        9991
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "8916": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9984,
        9991
      ],
      "op": "SWAP3",
      "path": "66"
    },
    "8917": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9984,
        9991
      ],
      "op": "ADD",
      "path": "66"
    },
    "8918": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9984,
        9991
      ],
      "op": "ADD",
      "path": "66"
    },
    "8919": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9974,
        10011
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "8920": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9974,
        10011
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "8921": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9974,
        10011
      ],
      "op": "DUP2",
      "path": "66"
    },
    "8922": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9974,
        10011
      ],
      "op": "AND",
      "path": "66"
    },
    "8923": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9974,
        10011
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "8924": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9974,
        10011
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "8925": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9974,
        10011
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "8926": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10025
      ],
      "op": "PUSH32",
      "path": "66",
      "statement": 65,
      "value": "0x0"
    },
    "8959": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10050
      ],
      "op": "AND",
      "path": "66"
    },
    "8960": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10050
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0x8803DBEE"
    },
    "8965": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10060,
        10081
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x230E"
    },
    "8968": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10060,
        10071
      ],
      "op": "DUP6",
      "path": "66"
    },
    "8969": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10076,
        10080
      ],
      "op": "DUP9",
      "path": "66"
    },
    "8970": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10060,
        10075
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x338C"
    },
    "8973": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "jump": "i",
      "offset": [
        10060,
        10081
      ],
      "op": "JUMP",
      "path": "66"
    },
    "8974": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10060,
        10081
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "8975": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10091,
        10112
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2318"
    },
    "8978": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10091,
        10095
      ],
      "op": "DUP8",
      "path": "66"
    },
    "8979": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10100,
        10111
      ],
      "op": "DUP7",
      "path": "66"
    },
    "8980": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10091,
        10099
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x338C"
    },
    "8983": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "jump": "i",
      "offset": [
        10091,
        10112
      ],
      "op": "JUMP",
      "path": "66"
    },
    "8984": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10091,
        10112
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "8985": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10122,
        10126
      ],
      "op": "DUP5",
      "path": "66"
    },
    "8986": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10144,
        10148
      ],
      "op": "ADDRESS",
      "path": "66"
    },
    "8987": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10159,
        10174
      ],
      "op": "TIMESTAMP",
      "path": "66"
    },
    "8988": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "8990": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "8991": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "DUP7",
      "path": "66"
    },
    "8992": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0xFFFFFFFF"
    },
    "8997": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "AND",
      "path": "66"
    },
    "8998": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0xE0"
    },
    "9000": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "SHL",
      "path": "66"
    },
    "9001": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "DUP2",
      "path": "66"
    },
    "9002": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "9003": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "9005": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "ADD",
      "path": "66"
    },
    "9006": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x233B"
    },
    "9009": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "SWAP6",
      "path": "66"
    },
    "9010": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "SWAP5",
      "path": "66"
    },
    "9011": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "SWAP4",
      "path": "66"
    },
    "9012": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "SWAP3",
      "path": "66"
    },
    "9013": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "9014": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "9015": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x452A"
    },
    "9018": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "jump": "i",
      "offset": [
        10019,
        10182
      ],
      "op": "JUMP",
      "path": "66"
    },
    "9019": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "9020": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "9022": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "9024": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "9025": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "DUP1",
      "path": "66"
    },
    "9026": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "DUP4",
      "path": "66"
    },
    "9027": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "SUB",
      "path": "66"
    },
    "9028": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "DUP2",
      "path": "66"
    },
    "9029": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "9031": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "DUP8",
      "path": "66"
    },
    "9032": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "DUP1",
      "path": "66"
    },
    "9033": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "EXTCODESIZE",
      "path": "66"
    },
    "9034": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "9035": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "DUP1",
      "path": "66"
    },
    "9036": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "9037": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2355"
    },
    "9040": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "9041": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "9043": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "DUP1",
      "path": "66"
    },
    "9044": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "REVERT",
      "path": "66"
    },
    "9045": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "9046": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "POP",
      "path": "66"
    },
    "9047": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "GAS",
      "path": "66"
    },
    "9048": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "CALL",
      "path": "66"
    },
    "9049": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "9050": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "DUP1",
      "path": "66"
    },
    "9051": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "9052": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2369"
    },
    "9055": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "9056": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "9057": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "9059": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "DUP1",
      "path": "66"
    },
    "9060": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "RETURNDATACOPY",
      "path": "66"
    },
    "9061": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "9062": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "9064": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "REVERT",
      "path": "66"
    },
    "9065": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "9066": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "POP",
      "path": "66"
    },
    "9067": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "POP",
      "path": "66"
    },
    "9068": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "POP",
      "path": "66"
    },
    "9069": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "POP",
      "path": "66"
    },
    "9070": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "9072": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "9073": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "9074": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "9076": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "DUP3",
      "path": "66"
    },
    "9077": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "RETURNDATACOPY",
      "path": "66"
    },
    "9078": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "9080": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "9081": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "9082": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "DUP2",
      "path": "66"
    },
    "9083": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "ADD",
      "path": "66"
    },
    "9084": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9086": {
      "op": "NOT"
    },
    "9087": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "AND",
      "path": "66"
    },
    "9088": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "DUP3",
      "path": "66"
    },
    "9089": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "ADD",
      "path": "66"
    },
    "9090": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "9092": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "9093": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2391"
    },
    "9096": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "9097": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "9098": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "DUP2",
      "path": "66"
    },
    "9099": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "ADD",
      "path": "66"
    },
    "9100": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "9101": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3CE8"
    },
    "9104": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "jump": "i",
      "offset": [
        10019,
        10182
      ],
      "op": "JUMP",
      "path": "66"
    },
    "9105": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "9106": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10019,
        10182
      ],
      "op": "POP",
      "path": "66"
    },
    "9107": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9872,
        10512
      ],
      "op": "POP",
      "path": "66"
    },
    "9108": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9872,
        10512
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x24C1"
    },
    "9111": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9872,
        10512
      ],
      "op": "JUMP",
      "path": "66"
    },
    "9112": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        9872,
        10512
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "9113": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10206,
        10217
      ],
      "op": "DUP2",
      "path": "66"
    },
    "9114": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10199,
        10203
      ],
      "op": "DUP5",
      "path": "66"
    },
    "9115": {
      "branch": 166,
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10199,
        10217
      ],
      "op": "GT",
      "path": "66"
    },
    "9116": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10199,
        10239
      ],
      "op": "DUP1",
      "path": "66"
    },
    "9117": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10199,
        10239
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "9118": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10199,
        10239
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x23A6"
    },
    "9121": {
      "branch": 166,
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10199,
        10239
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "9122": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10199,
        10239
      ],
      "op": "POP",
      "path": "66"
    },
    "9123": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10228,
        10239
      ],
      "op": "DUP1",
      "path": "66"
    },
    "9124": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10221,
        10225
      ],
      "op": "DUP4",
      "path": "66"
    },
    "9125": {
      "branch": 167,
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10221,
        10239
      ],
      "op": "LT",
      "path": "66"
    },
    "9126": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10199,
        10239
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "9127": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10195,
        10512
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "9128": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10195,
        10512
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x24C1"
    },
    "9131": {
      "branch": 167,
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10195,
        10512
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "9132": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10273,
        10289
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "9134": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10273,
        10289
      ],
      "op": "DUP1",
      "path": "66"
    },
    "9135": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10273,
        10289
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "9136": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10287,
        10288
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x2"
    },
    "9138": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10273,
        10289
      ],
      "op": "DUP1",
      "path": "66"
    },
    "9139": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10273,
        10289
      ],
      "op": "DUP3",
      "path": "66"
    },
    "9140": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10273,
        10289
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "9141": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10249,
        10270
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x60"
    },
    "9143": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10273,
        10289
      ],
      "op": "DUP1",
      "path": "66"
    },
    "9144": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10273,
        10289
      ],
      "op": "DUP4",
      "path": "66"
    },
    "9145": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10273,
        10289
      ],
      "op": "ADD",
      "path": "66"
    },
    "9146": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10273,
        10289
      ],
      "op": "DUP5",
      "path": "66"
    },
    "9147": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10273,
        10289
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "9148": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10249,
        10270
      ],
      "op": "SWAP3",
      "path": "66"
    },
    "9149": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10273,
        10289
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x20"
    },
    "9151": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10273,
        10289
      ],
      "op": "DUP4",
      "path": "66"
    },
    "9152": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10273,
        10289
      ],
      "op": "ADD",
      "path": "66"
    },
    "9153": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10273,
        10289
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "9154": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10273,
        10289
      ],
      "op": "DUP1",
      "path": "66"
    },
    "9155": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10273,
        10289
      ],
      "op": "CALLDATASIZE",
      "path": "66"
    },
    "9156": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10273,
        10289
      ],
      "op": "DUP4",
      "path": "66"
    },
    "9157": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10273,
        10289
      ],
      "op": "CALLDATACOPY",
      "path": "66"
    },
    "9158": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10273,
        10289
      ],
      "op": "ADD",
      "path": "66"
    },
    "9159": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10273,
        10289
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "9160": {
      "op": "POP"
    },
    "9161": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10273,
        10289
      ],
      "op": "POP",
      "path": "66"
    },
    "9162": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10249,
        10289
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "9163": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10249,
        10289
      ],
      "op": "POP",
      "path": "66"
    },
    "9164": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10319,
        10325
      ],
      "op": "DUP14",
      "path": "66",
      "statement": 66
    },
    "9165": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10327,
        10333
      ],
      "op": "DUP14",
      "path": "66"
    },
    "9166": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10298,
        10302
      ],
      "op": "DUP3",
      "path": "66"
    },
    "9167": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10303,
        10304
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "9169": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10298,
        10305
      ],
      "op": "DUP2",
      "path": "66"
    },
    "9170": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10298,
        10305
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "9171": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10298,
        10305
      ],
      "op": "DUP2",
      "path": "66"
    },
    "9172": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10298,
        10305
      ],
      "op": "LT",
      "path": "66"
    },
    "9173": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10298,
        10305
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x23DA"
    },
    "9176": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10298,
        10305
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "9177": {
      "dev": "Index out of range",
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10298,
        10305
      ],
      "op": "INVALID",
      "path": "66"
    },
    "9178": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10298,
        10305
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "9179": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10298,
        10305
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x20"
    },
    "9181": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10298,
        10305
      ],
      "op": "MUL",
      "path": "66"
    },
    "9182": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10298,
        10305
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x20"
    },
    "9184": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10298,
        10305
      ],
      "op": "ADD",
      "path": "66"
    },
    "9185": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10298,
        10305
      ],
      "op": "ADD",
      "path": "66"
    },
    "9186": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10307,
        10311
      ],
      "op": "DUP4",
      "path": "66"
    },
    "9187": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10312,
        10313
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1"
    },
    "9189": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10307,
        10314
      ],
      "op": "DUP2",
      "path": "66"
    },
    "9190": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10307,
        10314
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "9191": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10307,
        10314
      ],
      "op": "DUP2",
      "path": "66"
    },
    "9192": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10307,
        10314
      ],
      "op": "LT",
      "path": "66"
    },
    "9193": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10307,
        10314
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x23EE"
    },
    "9196": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10307,
        10314
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "9197": {
      "dev": "Index out of range",
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10307,
        10314
      ],
      "op": "INVALID",
      "path": "66"
    },
    "9198": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10307,
        10314
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "9199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9201": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9203": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9205": {
      "op": "SHL"
    },
    "9206": {
      "op": "SUB"
    },
    "9207": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10297,
        10334
      ],
      "op": "SWAP4",
      "path": "66"
    },
    "9208": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10297,
        10334
      ],
      "op": "DUP5",
      "path": "66"
    },
    "9209": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10297,
        10334
      ],
      "op": "AND",
      "path": "66"
    },
    "9210": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10307,
        10314
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x20"
    },
    "9212": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10307,
        10314
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "9213": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10307,
        10314
      ],
      "op": "DUP3",
      "path": "66"
    },
    "9214": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10307,
        10314
      ],
      "op": "MUL",
      "path": "66"
    },
    "9215": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10307,
        10314
      ],
      "op": "SWAP3",
      "path": "66"
    },
    "9216": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10307,
        10314
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "9217": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10307,
        10314
      ],
      "op": "SWAP3",
      "path": "66"
    },
    "9218": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10307,
        10314
      ],
      "op": "ADD",
      "path": "66"
    },
    "9219": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10307,
        10314
      ],
      "op": "ADD",
      "path": "66"
    },
    "9220": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10297,
        10334
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "9221": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10297,
        10334
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "9222": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10297,
        10334
      ],
      "op": "DUP2",
      "path": "66"
    },
    "9223": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10297,
        10334
      ],
      "op": "AND",
      "path": "66"
    },
    "9224": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10297,
        10334
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "9225": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10297,
        10334
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "9226": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10297,
        10334
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "9227": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10348
      ],
      "op": "PUSH32",
      "path": "66",
      "statement": 67,
      "value": "0x0"
    },
    "9260": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10373
      ],
      "op": "AND",
      "path": "66"
    },
    "9261": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10373
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0x8803DBEE"
    },
    "9266": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10383,
        10404
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x243B"
    },
    "9269": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10383,
        10394
      ],
      "op": "DUP5",
      "path": "66"
    },
    "9270": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10399,
        10403
      ],
      "op": "DUP8",
      "path": "66"
    },
    "9271": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10383,
        10398
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x338C"
    },
    "9274": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "jump": "i",
      "offset": [
        10383,
        10404
      ],
      "op": "JUMP",
      "path": "66"
    },
    "9275": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10383,
        10404
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "9276": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10414,
        10435
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2445"
    },
    "9279": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10414,
        10418
      ],
      "op": "DUP9",
      "path": "66"
    },
    "9280": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10423,
        10434
      ],
      "op": "DUP8",
      "path": "66"
    },
    "9281": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10414,
        10422
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x338C"
    },
    "9284": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "jump": "i",
      "offset": [
        10414,
        10435
      ],
      "op": "JUMP",
      "path": "66"
    },
    "9285": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10414,
        10435
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "9286": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10445,
        10449
      ],
      "op": "DUP5",
      "path": "66"
    },
    "9287": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10467,
        10471
      ],
      "op": "ADDRESS",
      "path": "66"
    },
    "9288": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10482,
        10497
      ],
      "op": "TIMESTAMP",
      "path": "66"
    },
    "9289": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "9291": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "9292": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "DUP7",
      "path": "66"
    },
    "9293": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0xFFFFFFFF"
    },
    "9298": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "AND",
      "path": "66"
    },
    "9299": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0xE0"
    },
    "9301": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "SHL",
      "path": "66"
    },
    "9302": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "DUP2",
      "path": "66"
    },
    "9303": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "9304": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "9306": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "ADD",
      "path": "66"
    },
    "9307": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2468"
    },
    "9310": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "SWAP6",
      "path": "66"
    },
    "9311": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "SWAP5",
      "path": "66"
    },
    "9312": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "SWAP4",
      "path": "66"
    },
    "9313": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "SWAP3",
      "path": "66"
    },
    "9314": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "9315": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "9316": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x452A"
    },
    "9319": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "jump": "i",
      "offset": [
        10342,
        10505
      ],
      "op": "JUMP",
      "path": "66"
    },
    "9320": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "9321": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "9323": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "9325": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "9326": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "DUP1",
      "path": "66"
    },
    "9327": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "DUP4",
      "path": "66"
    },
    "9328": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "SUB",
      "path": "66"
    },
    "9329": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "DUP2",
      "path": "66"
    },
    "9330": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "9332": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "DUP8",
      "path": "66"
    },
    "9333": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "DUP1",
      "path": "66"
    },
    "9334": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "EXTCODESIZE",
      "path": "66"
    },
    "9335": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "9336": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "DUP1",
      "path": "66"
    },
    "9337": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "9338": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2482"
    },
    "9341": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "9342": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "9344": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "DUP1",
      "path": "66"
    },
    "9345": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "REVERT",
      "path": "66"
    },
    "9346": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "9347": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "POP",
      "path": "66"
    },
    "9348": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "GAS",
      "path": "66"
    },
    "9349": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "CALL",
      "path": "66"
    },
    "9350": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "9351": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "DUP1",
      "path": "66"
    },
    "9352": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "9353": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2496"
    },
    "9356": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "9357": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "9358": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "9360": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "DUP1",
      "path": "66"
    },
    "9361": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "RETURNDATACOPY",
      "path": "66"
    },
    "9362": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "9363": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "9365": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "REVERT",
      "path": "66"
    },
    "9366": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "9367": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "POP",
      "path": "66"
    },
    "9368": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "POP",
      "path": "66"
    },
    "9369": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "POP",
      "path": "66"
    },
    "9370": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "POP",
      "path": "66"
    },
    "9371": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "9373": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "9374": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "9375": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "9377": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "DUP3",
      "path": "66"
    },
    "9378": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "RETURNDATACOPY",
      "path": "66"
    },
    "9379": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "9381": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "9382": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "9383": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "DUP2",
      "path": "66"
    },
    "9384": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "ADD",
      "path": "66"
    },
    "9385": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9387": {
      "op": "NOT"
    },
    "9388": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "AND",
      "path": "66"
    },
    "9389": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "DUP3",
      "path": "66"
    },
    "9390": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "ADD",
      "path": "66"
    },
    "9391": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "9393": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "9394": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x24BE"
    },
    "9397": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "9398": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "9399": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "DUP2",
      "path": "66"
    },
    "9400": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "ADD",
      "path": "66"
    },
    "9401": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "9402": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3CE8"
    },
    "9405": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "jump": "i",
      "offset": [
        10342,
        10505
      ],
      "op": "JUMP",
      "path": "66"
    },
    "9406": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "9407": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10342,
        10505
      ],
      "op": "POP",
      "path": "66"
    },
    "9408": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10195,
        10512
      ],
      "op": "POP",
      "path": "66"
    },
    "9409": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10195,
        10512
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "9410": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10534,
        10560
      ],
      "op": "PUSH2",
      "path": "66",
      "statement": 68,
      "value": "0x24CB"
    },
    "9413": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10542,
        10548
      ],
      "op": "DUP14",
      "path": "66"
    },
    "9414": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10550,
        10559
      ],
      "op": "DUP10",
      "path": "66"
    },
    "9415": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10534,
        10541
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x33D9"
    },
    "9418": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "jump": "i",
      "offset": [
        10534,
        10560
      ],
      "op": "JUMP",
      "path": "66"
    },
    "9419": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10534,
        10560
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "9420": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10566,
        10592
      ],
      "op": "PUSH2",
      "path": "66",
      "statement": 69,
      "value": "0x24D5"
    },
    "9423": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10574,
        10580
      ],
      "op": "DUP13",
      "path": "66"
    },
    "9424": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10582,
        10591
      ],
      "op": "DUP9",
      "path": "66"
    },
    "9425": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10566,
        10573
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x33D9"
    },
    "9428": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "jump": "i",
      "offset": [
        10566,
        10592
      ],
      "op": "JUMP",
      "path": "66"
    },
    "9429": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10566,
        10592
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "9430": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10598,
        10621
      ],
      "op": "PUSH2",
      "path": "66",
      "statement": 70,
      "value": "0x24DF"
    },
    "9433": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10606,
        10608
      ],
      "op": "DUP11",
      "path": "66"
    },
    "9434": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10610,
        10620
      ],
      "op": "DUP8",
      "path": "66"
    },
    "9435": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10598,
        10605
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x33D9"
    },
    "9438": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "jump": "i",
      "offset": [
        10598,
        10621
      ],
      "op": "JUMP",
      "path": "66"
    },
    "9439": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10598,
        10621
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "9440": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "PUSH1",
      "path": "66",
      "statement": 71,
      "value": "0x40"
    },
    "9442": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "9443": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "9448": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9450": {
      "op": "SHL"
    },
    "9451": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "DUP2",
      "path": "66"
    },
    "9452": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "9453": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10706,
        10717
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0xA0"
    },
    "9455": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10706,
        10717
      ],
      "op": "DUP13",
      "path": "66"
    },
    "9456": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10706,
        10717
      ],
      "op": "ADD",
      "path": "66"
    },
    "9457": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10706,
        10717
      ],
      "op": "CALLDATALOAD",
      "path": "66"
    },
    "9458": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10706,
        10717
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "9459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9463": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9465": {
      "op": "SHL"
    },
    "9466": {
      "op": "SUB"
    },
    "9467": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10687
      ],
      "op": "DUP16",
      "path": "66"
    },
    "9468": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10687
      ],
      "op": "AND",
      "path": "66"
    },
    "9469": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10687
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "9470": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10687
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0x70A08231"
    },
    "9475": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10687
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "9476": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2511"
    },
    "9479": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "9480": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10696,
        10700
      ],
      "op": "ADDRESS",
      "path": "66"
    },
    "9481": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10696,
        10700
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "9482": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "9484": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "ADD",
      "path": "66"
    },
    "9485": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3EF8"
    },
    "9488": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "jump": "i",
      "offset": [
        10663,
        10702
      ],
      "op": "JUMP",
      "path": "66"
    },
    "9489": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "9490": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x20"
    },
    "9492": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "9494": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "9495": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "DUP1",
      "path": "66"
    },
    "9496": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "DUP4",
      "path": "66"
    },
    "9497": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "SUB",
      "path": "66"
    },
    "9498": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "DUP2",
      "path": "66"
    },
    "9499": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "DUP7",
      "path": "66"
    },
    "9500": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "DUP1",
      "path": "66"
    },
    "9501": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "EXTCODESIZE",
      "path": "66"
    },
    "9502": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "9503": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "DUP1",
      "path": "66"
    },
    "9504": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "9505": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2529"
    },
    "9508": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "9509": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "9511": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "DUP1",
      "path": "66"
    },
    "9512": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "REVERT",
      "path": "66"
    },
    "9513": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "9514": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "POP",
      "path": "66"
    },
    "9515": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "GAS",
      "path": "66"
    },
    "9516": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "STATICCALL",
      "path": "66"
    },
    "9517": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "9518": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "DUP1",
      "path": "66"
    },
    "9519": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "9520": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x253D"
    },
    "9523": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "9524": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "9525": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "9527": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "DUP1",
      "path": "66"
    },
    "9528": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "RETURNDATACOPY",
      "path": "66"
    },
    "9529": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "9530": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "9532": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "REVERT",
      "path": "66"
    },
    "9533": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "9534": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "POP",
      "path": "66"
    },
    "9535": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "POP",
      "path": "66"
    },
    "9536": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "POP",
      "path": "66"
    },
    "9537": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "POP",
      "path": "66"
    },
    "9538": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "9540": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "9541": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "9542": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "9544": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "NOT",
      "path": "66"
    },
    "9545": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "9547": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "DUP3",
      "path": "66"
    },
    "9548": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "ADD",
      "path": "66"
    },
    "9549": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "AND",
      "path": "66"
    },
    "9550": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "DUP3",
      "path": "66"
    },
    "9551": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "ADD",
      "path": "66"
    },
    "9552": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "DUP1",
      "path": "66"
    },
    "9553": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "9555": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "9556": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "POP",
      "path": "66"
    },
    "9557": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "DUP2",
      "path": "66"
    },
    "9558": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "ADD",
      "path": "66"
    },
    "9559": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "9560": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2561"
    },
    "9563": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "9564": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "9565": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3E31"
    },
    "9568": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "jump": "i",
      "offset": [
        10663,
        10702
      ],
      "op": "JUMP",
      "path": "66"
    },
    "9569": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10702
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "9570": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10717
      ],
      "op": "LT",
      "path": "66"
    },
    "9571": {
      "branch": 168,
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10663,
        10717
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "9572": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10655,
        10718
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x256C"
    },
    "9575": {
      "branch": 168,
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10655,
        10718
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "9576": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10655,
        10718
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "9578": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10655,
        10718
      ],
      "op": "DUP1",
      "path": "66"
    },
    "9579": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10655,
        10718
      ],
      "op": "REVERT",
      "path": "66"
    },
    "9580": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10655,
        10718
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "9581": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "PUSH1",
      "path": "66",
      "statement": 72,
      "value": "0x40"
    },
    "9583": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "9584": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "9589": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9591": {
      "op": "SHL"
    },
    "9592": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "DUP2",
      "path": "66"
    },
    "9593": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "9594": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10775,
        10786
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0xC0"
    },
    "9596": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10775,
        10786
      ],
      "op": "DUP13",
      "path": "66"
    },
    "9597": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10775,
        10786
      ],
      "op": "ADD",
      "path": "66"
    },
    "9598": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10775,
        10786
      ],
      "op": "CALLDATALOAD",
      "path": "66"
    },
    "9599": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10775,
        10786
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "9600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9602": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9604": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9606": {
      "op": "SHL"
    },
    "9607": {
      "op": "SUB"
    },
    "9608": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10756
      ],
      "op": "DUP15",
      "path": "66"
    },
    "9609": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10756
      ],
      "op": "AND",
      "path": "66"
    },
    "9610": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10756
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "9611": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10756
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0x70A08231"
    },
    "9616": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10756
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "9617": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x259E"
    },
    "9620": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "9621": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10765,
        10769
      ],
      "op": "ADDRESS",
      "path": "66"
    },
    "9622": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10765,
        10769
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "9623": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "9625": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "ADD",
      "path": "66"
    },
    "9626": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3EF8"
    },
    "9629": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "jump": "i",
      "offset": [
        10732,
        10771
      ],
      "op": "JUMP",
      "path": "66"
    },
    "9630": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "9631": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x20"
    },
    "9633": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "9635": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "9636": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "DUP1",
      "path": "66"
    },
    "9637": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "DUP4",
      "path": "66"
    },
    "9638": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "SUB",
      "path": "66"
    },
    "9639": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "DUP2",
      "path": "66"
    },
    "9640": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "DUP7",
      "path": "66"
    },
    "9641": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "DUP1",
      "path": "66"
    },
    "9642": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "EXTCODESIZE",
      "path": "66"
    },
    "9643": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "9644": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "DUP1",
      "path": "66"
    },
    "9645": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "9646": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x25B6"
    },
    "9649": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "9650": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "9652": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "DUP1",
      "path": "66"
    },
    "9653": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "REVERT",
      "path": "66"
    },
    "9654": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "9655": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "POP",
      "path": "66"
    },
    "9656": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "GAS",
      "path": "66"
    },
    "9657": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "STATICCALL",
      "path": "66"
    },
    "9658": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "9659": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "DUP1",
      "path": "66"
    },
    "9660": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "9661": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x25CA"
    },
    "9664": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "9665": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "9666": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "9668": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "DUP1",
      "path": "66"
    },
    "9669": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "RETURNDATACOPY",
      "path": "66"
    },
    "9670": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "9671": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "9673": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "REVERT",
      "path": "66"
    },
    "9674": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "9675": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "POP",
      "path": "66"
    },
    "9676": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "POP",
      "path": "66"
    },
    "9677": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "POP",
      "path": "66"
    },
    "9678": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "POP",
      "path": "66"
    },
    "9679": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "9681": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "9682": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "9683": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "9685": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "NOT",
      "path": "66"
    },
    "9686": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "9688": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "DUP3",
      "path": "66"
    },
    "9689": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "ADD",
      "path": "66"
    },
    "9690": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "AND",
      "path": "66"
    },
    "9691": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "DUP3",
      "path": "66"
    },
    "9692": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "ADD",
      "path": "66"
    },
    "9693": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "DUP1",
      "path": "66"
    },
    "9694": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "9696": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "9697": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "POP",
      "path": "66"
    },
    "9698": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "DUP2",
      "path": "66"
    },
    "9699": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "ADD",
      "path": "66"
    },
    "9700": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "9701": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x25EE"
    },
    "9704": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "9705": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "9706": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3E31"
    },
    "9709": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "jump": "i",
      "offset": [
        10732,
        10771
      ],
      "op": "JUMP",
      "path": "66"
    },
    "9710": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10771
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "9711": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10786
      ],
      "op": "LT",
      "path": "66"
    },
    "9712": {
      "branch": 169,
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10732,
        10786
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "9713": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10724,
        10787
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x25F9"
    },
    "9716": {
      "branch": 169,
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10724,
        10787
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "9717": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10724,
        10787
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "9719": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10724,
        10787
      ],
      "op": "DUP1",
      "path": "66"
    },
    "9720": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10724,
        10787
      ],
      "op": "REVERT",
      "path": "66"
    },
    "9721": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10724,
        10787
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "9722": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "PUSH1",
      "path": "66",
      "statement": 73,
      "value": "0x40"
    },
    "9724": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "9725": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "9730": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9732": {
      "op": "SHL"
    },
    "9733": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "DUP2",
      "path": "66"
    },
    "9734": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "9735": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10840,
        10857
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x20"
    },
    "9737": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10840,
        10857
      ],
      "op": "DUP13",
      "path": "66"
    },
    "9738": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10840,
        10857
      ],
      "op": "ADD",
      "path": "66"
    },
    "9739": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10840,
        10857
      ],
      "op": "CALLDATALOAD",
      "path": "66"
    },
    "9740": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10840,
        10857
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "9741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9745": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9747": {
      "op": "SHL"
    },
    "9748": {
      "op": "SUB"
    },
    "9749": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10821
      ],
      "op": "DUP13",
      "path": "66"
    },
    "9750": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10821
      ],
      "op": "AND",
      "path": "66"
    },
    "9751": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10821
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "9752": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10821
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0x70A08231"
    },
    "9757": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10821
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "9758": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x262B"
    },
    "9761": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "9762": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10830,
        10834
      ],
      "op": "ADDRESS",
      "path": "66"
    },
    "9763": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10830,
        10834
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "9764": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "9766": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "ADD",
      "path": "66"
    },
    "9767": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3EF8"
    },
    "9770": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "jump": "i",
      "offset": [
        10801,
        10836
      ],
      "op": "JUMP",
      "path": "66"
    },
    "9771": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "9772": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x20"
    },
    "9774": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "9776": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "9777": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "DUP1",
      "path": "66"
    },
    "9778": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "DUP4",
      "path": "66"
    },
    "9779": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "SUB",
      "path": "66"
    },
    "9780": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "DUP2",
      "path": "66"
    },
    "9781": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "DUP7",
      "path": "66"
    },
    "9782": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "DUP1",
      "path": "66"
    },
    "9783": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "EXTCODESIZE",
      "path": "66"
    },
    "9784": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "9785": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "DUP1",
      "path": "66"
    },
    "9786": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "9787": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2643"
    },
    "9790": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "9791": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "9793": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "DUP1",
      "path": "66"
    },
    "9794": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "REVERT",
      "path": "66"
    },
    "9795": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "9796": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "POP",
      "path": "66"
    },
    "9797": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "GAS",
      "path": "66"
    },
    "9798": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "STATICCALL",
      "path": "66"
    },
    "9799": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "9800": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "DUP1",
      "path": "66"
    },
    "9801": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "9802": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2657"
    },
    "9805": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "9806": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "9807": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "9809": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "DUP1",
      "path": "66"
    },
    "9810": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "RETURNDATACOPY",
      "path": "66"
    },
    "9811": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "9812": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "9814": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "REVERT",
      "path": "66"
    },
    "9815": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "9816": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "POP",
      "path": "66"
    },
    "9817": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "POP",
      "path": "66"
    },
    "9818": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "POP",
      "path": "66"
    },
    "9819": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "POP",
      "path": "66"
    },
    "9820": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "9822": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "9823": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "9824": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "9826": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "NOT",
      "path": "66"
    },
    "9827": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "9829": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "DUP3",
      "path": "66"
    },
    "9830": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "ADD",
      "path": "66"
    },
    "9831": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "AND",
      "path": "66"
    },
    "9832": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "DUP3",
      "path": "66"
    },
    "9833": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "ADD",
      "path": "66"
    },
    "9834": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "DUP1",
      "path": "66"
    },
    "9835": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "9837": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "9838": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "POP",
      "path": "66"
    },
    "9839": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "DUP2",
      "path": "66"
    },
    "9840": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "ADD",
      "path": "66"
    },
    "9841": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "9842": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x267B"
    },
    "9845": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "9846": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "9847": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3E31"
    },
    "9850": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "jump": "i",
      "offset": [
        10801,
        10836
      ],
      "op": "JUMP",
      "path": "66"
    },
    "9851": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10836
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "9852": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10857
      ],
      "op": "LT",
      "path": "66"
    },
    "9853": {
      "branch": 170,
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10801,
        10857
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "9854": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10793,
        10858
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2686"
    },
    "9857": {
      "branch": 170,
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10793,
        10858
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "9858": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10793,
        10858
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "9860": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10793,
        10858
      ],
      "op": "DUP1",
      "path": "66"
    },
    "9861": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10793,
        10858
      ],
      "op": "REVERT",
      "path": "66"
    },
    "9862": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10793,
        10858
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "9863": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10891,
        10904
      ],
      "op": "PUSH2",
      "path": "66",
      "statement": 74,
      "value": "0x268E"
    },
    "9866": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10891,
        10902
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2FF3"
    },
    "9869": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "jump": "i",
      "offset": [
        10891,
        10904
      ],
      "op": "JUMP",
      "path": "66"
    },
    "9870": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10891,
        10904
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "9871": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10910,
        10926
      ],
      "op": "PUSH2",
      "path": "66",
      "statement": 75,
      "value": "0x2697"
    },
    "9874": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10919,
        10925
      ],
      "op": "DUP14",
      "path": "66"
    },
    "9875": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10910,
        10918
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x272F"
    },
    "9878": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "jump": "i",
      "offset": [
        10910,
        10926
      ],
      "op": "JUMP",
      "path": "66"
    },
    "9879": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10910,
        10926
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "9880": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10932,
        10948
      ],
      "op": "PUSH2",
      "path": "66",
      "statement": 76,
      "value": "0x26A0"
    },
    "9883": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10941,
        10947
      ],
      "op": "DUP13",
      "path": "66"
    },
    "9884": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10932,
        10940
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x272F"
    },
    "9887": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "jump": "i",
      "offset": [
        10932,
        10948
      ],
      "op": "JUMP",
      "path": "66"
    },
    "9888": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10932,
        10948
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "9889": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10954,
        10966
      ],
      "op": "PUSH2",
      "path": "66",
      "statement": 77,
      "value": "0x26A9"
    },
    "9892": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10963,
        10965
      ],
      "op": "DUP11",
      "path": "66"
    },
    "9893": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10954,
        10962
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x272F"
    },
    "9896": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "jump": "i",
      "offset": [
        10954,
        10966
      ],
      "op": "JUMP",
      "path": "66"
    },
    "9897": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        10954,
        10966
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "9898": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8607,
        10971
      ],
      "op": "POP",
      "path": "66"
    },
    "9899": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8607,
        10971
      ],
      "op": "POP",
      "path": "66"
    },
    "9900": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8607,
        10971
      ],
      "op": "POP",
      "path": "66"
    },
    "9901": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8607,
        10971
      ],
      "op": "POP",
      "path": "66"
    },
    "9902": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8607,
        10971
      ],
      "op": "POP",
      "path": "66"
    },
    "9903": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8607,
        10971
      ],
      "op": "POP",
      "path": "66"
    },
    "9904": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8607,
        10971
      ],
      "op": "POP",
      "path": "66"
    },
    "9905": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8607,
        10971
      ],
      "op": "POP",
      "path": "66"
    },
    "9906": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8607,
        10971
      ],
      "op": "POP",
      "path": "66"
    },
    "9907": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8607,
        10971
      ],
      "op": "POP",
      "path": "66"
    },
    "9908": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8607,
        10971
      ],
      "op": "POP",
      "path": "66"
    },
    "9909": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8607,
        10971
      ],
      "op": "POP",
      "path": "66"
    },
    "9910": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "offset": [
        8607,
        10971
      ],
      "op": "POP",
      "path": "66"
    },
    "9911": {
      "fn": "SushiswapSpellV1.removeLiquidityInternal",
      "jump": "o",
      "offset": [
        8607,
        10971
      ],
      "op": "JUMP",
      "path": "66"
    },
    "9912": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1230,
        1433
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "9913": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9917": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9919": {
      "op": "SHL"
    },
    "9920": {
      "op": "SUB"
    },
    "9921": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1305,
        1320
      ],
      "op": "DUP1",
      "path": "63"
    },
    "9922": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1305,
        1320
      ],
      "op": "DUP4",
      "path": "63"
    },
    "9923": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1305,
        1320
      ],
      "op": "AND",
      "path": "63"
    },
    "9924": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1305,
        1320
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "9926": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1305,
        1320
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "9927": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1305,
        1320
      ],
      "op": "DUP2",
      "path": "63"
    },
    "9928": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1305,
        1320
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "9929": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1305,
        1313
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x41"
    },
    "9931": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1305,
        1320
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "9933": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1305,
        1320
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "9934": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1305,
        1320
      ],
      "op": "DUP2",
      "path": "63"
    },
    "9935": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1305,
        1320
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "9936": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1305,
        1320
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "9938": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1305,
        1320
      ],
      "op": "DUP1",
      "path": "63"
    },
    "9939": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1305,
        1320
      ],
      "op": "DUP4",
      "path": "63"
    },
    "9940": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1305,
        1320
      ],
      "op": "KECCAK256",
      "path": "63"
    },
    "9941": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1305,
        1329
      ],
      "op": "SWAP4",
      "path": "63"
    },
    "9942": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1305,
        1329
      ],
      "op": "DUP6",
      "path": "63"
    },
    "9943": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1305,
        1329
      ],
      "op": "AND",
      "path": "63"
    },
    "9944": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1305,
        1329
      ],
      "op": "DUP4",
      "path": "63"
    },
    "9945": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1305,
        1329
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "9946": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1305,
        1329
      ],
      "op": "SWAP3",
      "path": "63"
    },
    "9947": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1305,
        1329
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "9948": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1305,
        1329
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "9949": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1305,
        1329
      ],
      "op": "KECCAK256",
      "path": "63"
    },
    "9950": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1305,
        1329
      ],
      "op": "SLOAD",
      "path": "63"
    },
    "9951": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1305,
        1329
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0xFF"
    },
    "9953": {
      "branch": 188,
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1305,
        1329
      ],
      "op": "AND",
      "path": "63"
    },
    "9954": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1300,
        1429
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1E19"
    },
    "9957": {
      "branch": 188,
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1300,
        1429
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "9958": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1339,
        1383
      ],
      "op": "PUSH2",
      "path": "63",
      "statement": 78,
      "value": "0x26FB"
    },
    "9961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9965": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9967": {
      "op": "SHL"
    },
    "9968": {
      "op": "SUB"
    },
    "9969": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1339,
        1364
      ],
      "op": "DUP4",
      "path": "63"
    },
    "9970": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1339,
        1364
      ],
      "op": "AND",
      "path": "63"
    },
    "9971": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1365,
        1372
      ],
      "op": "DUP3",
      "path": "63"
    },
    "9972": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9974": {
      "op": "NOT"
    },
    "9975": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1339,
        1364
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1B34"
    },
    "9978": {
      "fn": "BasicSpell.ensureApprove",
      "jump": "i",
      "offset": [
        1339,
        1383
      ],
      "op": "JUMP",
      "path": "63"
    },
    "9979": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1339,
        1383
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "9980": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9984": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9986": {
      "op": "SHL"
    },
    "9987": {
      "op": "SUB"
    },
    "9988": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1391,
        1406
      ],
      "op": "DUP1",
      "path": "63",
      "statement": 79
    },
    "9989": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1391,
        1406
      ],
      "op": "DUP4",
      "path": "63"
    },
    "9990": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1391,
        1406
      ],
      "op": "AND",
      "path": "63"
    },
    "9991": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1391,
        1406
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "9993": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1391,
        1406
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "9994": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1391,
        1406
      ],
      "op": "DUP2",
      "path": "63"
    },
    "9995": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1391,
        1406
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "9996": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1391,
        1399
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x41"
    },
    "9998": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1391,
        1406
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "10000": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1391,
        1406
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "10001": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1391,
        1406
      ],
      "op": "DUP2",
      "path": "63"
    },
    "10002": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1391,
        1406
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "10003": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1391,
        1406
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "10005": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1391,
        1406
      ],
      "op": "DUP1",
      "path": "63"
    },
    "10006": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1391,
        1406
      ],
      "op": "DUP4",
      "path": "63"
    },
    "10007": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1391,
        1406
      ],
      "op": "KECCAK256",
      "path": "63"
    },
    "10008": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1391,
        1415
      ],
      "op": "SWAP4",
      "path": "63"
    },
    "10009": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1391,
        1415
      ],
      "op": "DUP6",
      "path": "63"
    },
    "10010": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1391,
        1415
      ],
      "op": "AND",
      "path": "63"
    },
    "10011": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1391,
        1415
      ],
      "op": "DUP4",
      "path": "63"
    },
    "10012": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1391,
        1415
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "10013": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1391,
        1415
      ],
      "op": "SWAP3",
      "path": "63"
    },
    "10014": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1391,
        1415
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "10015": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1391,
        1415
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "10016": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1391,
        1415
      ],
      "op": "KECCAK256",
      "path": "63"
    },
    "10017": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1391,
        1422
      ],
      "op": "DUP1",
      "path": "63"
    },
    "10018": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1391,
        1422
      ],
      "op": "SLOAD",
      "path": "63"
    },
    "10019": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10021": {
      "op": "NOT"
    },
    "10022": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1391,
        1422
      ],
      "op": "AND",
      "path": "63"
    },
    "10023": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1418,
        1422
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x1"
    },
    "10025": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1391,
        1422
      ],
      "op": "OR",
      "path": "63"
    },
    "10026": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1391,
        1422
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "10027": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1391,
        1422
      ],
      "op": "SSTORE",
      "path": "63"
    },
    "10028": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1230,
        1433
      ],
      "op": "POP",
      "path": "63"
    },
    "10029": {
      "fn": "BasicSpell.ensureApprove",
      "offset": [
        1230,
        1433
      ],
      "op": "POP",
      "path": "63"
    },
    "10030": {
      "fn": "BasicSpell.ensureApprove",
      "jump": "o",
      "offset": [
        1230,
        1433
      ],
      "op": "JUMP",
      "path": "63"
    },
    "10031": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2164,
        2359
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "10032": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "10034": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "10035": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "10040": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10042": {
      "op": "SHL"
    },
    "10043": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "DUP2",
      "path": "63"
    },
    "10044": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "10045": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2212,
        2224
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "10047": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2212,
        2224
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "10048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10052": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10054": {
      "op": "SHL"
    },
    "10055": {
      "op": "SUB"
    },
    "10056": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2250
      ],
      "op": "DUP4",
      "path": "63"
    },
    "10057": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2250
      ],
      "op": "AND",
      "path": "63"
    },
    "10058": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2250
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "10059": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2250
      ],
      "op": "PUSH4",
      "path": "63",
      "value": "0x70A08231"
    },
    "10064": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2250
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "10065": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x275E"
    },
    "10068": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "10069": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2259,
        2263
      ],
      "op": "ADDRESS",
      "path": "63"
    },
    "10070": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2259,
        2263
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "10071": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "10073": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "ADD",
      "path": "63"
    },
    "10074": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x3EF8"
    },
    "10077": {
      "fn": "BasicSpell.doRefund",
      "jump": "i",
      "offset": [
        2227,
        2265
      ],
      "op": "JUMP",
      "path": "63"
    },
    "10078": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "10079": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "10081": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "10083": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "10084": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "DUP1",
      "path": "63"
    },
    "10085": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "DUP4",
      "path": "63"
    },
    "10086": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "SUB",
      "path": "63"
    },
    "10087": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "DUP2",
      "path": "63"
    },
    "10088": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "DUP7",
      "path": "63"
    },
    "10089": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "DUP1",
      "path": "63"
    },
    "10090": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "EXTCODESIZE",
      "path": "63"
    },
    "10091": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "10092": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "DUP1",
      "path": "63"
    },
    "10093": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "10094": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x2776"
    },
    "10097": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "10098": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "10100": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "DUP1",
      "path": "63"
    },
    "10101": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "REVERT",
      "path": "63"
    },
    "10102": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "10103": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "POP",
      "path": "63"
    },
    "10104": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "GAS",
      "path": "63"
    },
    "10105": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "STATICCALL",
      "path": "63"
    },
    "10106": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "10107": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "DUP1",
      "path": "63"
    },
    "10108": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "10109": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x278A"
    },
    "10112": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "10113": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "RETURNDATASIZE",
      "path": "63"
    },
    "10114": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "10116": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "DUP1",
      "path": "63"
    },
    "10117": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "RETURNDATACOPY",
      "path": "63"
    },
    "10118": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "RETURNDATASIZE",
      "path": "63"
    },
    "10119": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "10121": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "REVERT",
      "path": "63"
    },
    "10122": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "10123": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "POP",
      "path": "63"
    },
    "10124": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "POP",
      "path": "63"
    },
    "10125": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "POP",
      "path": "63"
    },
    "10126": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "POP",
      "path": "63"
    },
    "10127": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "10129": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "10130": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "RETURNDATASIZE",
      "path": "63"
    },
    "10131": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x1F"
    },
    "10133": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "NOT",
      "path": "63"
    },
    "10134": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x1F"
    },
    "10136": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "DUP3",
      "path": "63"
    },
    "10137": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "ADD",
      "path": "63"
    },
    "10138": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "AND",
      "path": "63"
    },
    "10139": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "DUP3",
      "path": "63"
    },
    "10140": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "ADD",
      "path": "63"
    },
    "10141": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "DUP1",
      "path": "63"
    },
    "10142": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "10144": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "10145": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "POP",
      "path": "63"
    },
    "10146": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "DUP2",
      "path": "63"
    },
    "10147": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "ADD",
      "path": "63"
    },
    "10148": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "10149": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x27AE"
    },
    "10152": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "10153": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "10154": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x3E31"
    },
    "10157": {
      "fn": "BasicSpell.doRefund",
      "jump": "i",
      "offset": [
        2227,
        2265
      ],
      "op": "JUMP",
      "path": "63"
    },
    "10158": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2227,
        2265
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "10159": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2212,
        2265
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "10160": {
      "op": "POP"
    },
    "10161": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2275,
        2286
      ],
      "op": "DUP1",
      "path": "63"
    },
    "10162": {
      "branch": 189,
      "fn": "BasicSpell.doRefund",
      "offset": [
        2275,
        2286
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "10163": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2271,
        2355
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1E19"
    },
    "10166": {
      "branch": 189,
      "fn": "BasicSpell.doRefund",
      "offset": [
        2271,
        2355
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "10167": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2296,
        2348
      ],
      "op": "PUSH2",
      "path": "63",
      "statement": 80,
      "value": "0x1E19"
    },
    "10170": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2327
      ],
      "op": "PUSH32",
      "path": "63",
      "value": "0x0"
    },
    "10203": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10207": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10209": {
      "op": "SHL"
    },
    "10210": {
      "op": "SUB"
    },
    "10211": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2336
      ],
      "op": "AND",
      "path": "63"
    },
    "10212": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2336
      ],
      "op": "PUSH4",
      "path": "63",
      "value": "0x630DC7CB"
    },
    "10217": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "10219": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "10220": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "DUP2",
      "path": "63"
    },
    "10221": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "PUSH4",
      "path": "63",
      "value": "0xFFFFFFFF"
    },
    "10226": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "AND",
      "path": "63"
    },
    "10227": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0xE0"
    },
    "10229": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "SHL",
      "path": "63"
    },
    "10230": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "DUP2",
      "path": "63"
    },
    "10231": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "10232": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "10234": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "ADD",
      "path": "63"
    },
    "10235": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "10237": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "10239": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "10240": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "DUP1",
      "path": "63"
    },
    "10241": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "DUP4",
      "path": "63"
    },
    "10242": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "SUB",
      "path": "63"
    },
    "10243": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "DUP2",
      "path": "63"
    },
    "10244": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "DUP7",
      "path": "63"
    },
    "10245": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "DUP1",
      "path": "63"
    },
    "10246": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "EXTCODESIZE",
      "path": "63"
    },
    "10247": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "10248": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "DUP1",
      "path": "63"
    },
    "10249": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "10250": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x2812"
    },
    "10253": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "10254": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "10256": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "DUP1",
      "path": "63"
    },
    "10257": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "REVERT",
      "path": "63"
    },
    "10258": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "10259": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "POP",
      "path": "63"
    },
    "10260": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "GAS",
      "path": "63"
    },
    "10261": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "STATICCALL",
      "path": "63"
    },
    "10262": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "10263": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "DUP1",
      "path": "63"
    },
    "10264": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "10265": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x2826"
    },
    "10268": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "10269": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "RETURNDATASIZE",
      "path": "63"
    },
    "10270": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "10272": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "DUP1",
      "path": "63"
    },
    "10273": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "RETURNDATACOPY",
      "path": "63"
    },
    "10274": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "RETURNDATASIZE",
      "path": "63"
    },
    "10275": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "10277": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "REVERT",
      "path": "63"
    },
    "10278": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "10279": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "POP",
      "path": "63"
    },
    "10280": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "POP",
      "path": "63"
    },
    "10281": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "POP",
      "path": "63"
    },
    "10282": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "POP",
      "path": "63"
    },
    "10283": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "10285": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "10286": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "RETURNDATASIZE",
      "path": "63"
    },
    "10287": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x1F"
    },
    "10289": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "NOT",
      "path": "63"
    },
    "10290": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x1F"
    },
    "10292": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "DUP3",
      "path": "63"
    },
    "10293": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "ADD",
      "path": "63"
    },
    "10294": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "AND",
      "path": "63"
    },
    "10295": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "DUP3",
      "path": "63"
    },
    "10296": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "ADD",
      "path": "63"
    },
    "10297": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "DUP1",
      "path": "63"
    },
    "10298": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "10300": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "10301": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "POP",
      "path": "63"
    },
    "10302": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "DUP2",
      "path": "63"
    },
    "10303": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "ADD",
      "path": "63"
    },
    "10304": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "10305": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x284A"
    },
    "10308": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "10309": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "10310": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x3986"
    },
    "10313": {
      "fn": "BasicSpell.doRefund",
      "jump": "i",
      "offset": [
        2323,
        2338
      ],
      "op": "JUMP",
      "path": "63"
    },
    "10314": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2323,
        2338
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "10315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10319": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10321": {
      "op": "SHL"
    },
    "10322": {
      "op": "SUB"
    },
    "10323": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2296,
        2322
      ],
      "op": "DUP5",
      "path": "63"
    },
    "10324": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2296,
        2322
      ],
      "op": "AND",
      "path": "63"
    },
    "10325": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2296,
        2322
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "10326": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2340,
        2347
      ],
      "op": "DUP4",
      "path": "63"
    },
    "10327": {
      "fn": "BasicSpell.doRefund",
      "offset": [
        2296,
        2322
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x3457"
    },
    "10330": {
      "fn": "BasicSpell.doRefund",
      "jump": "i",
      "offset": [
        2296,
        2348
      ],
      "op": "JUMP",
      "path": "63"
    },
    "10331": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4136,
        5883
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "10332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10336": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10338": {
      "op": "SHL"
    },
    "10339": {
      "op": "SUB"
    },
    "10340": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4275,
        4298
      ],
      "op": "DUP2",
      "path": "66",
      "statement": 81
    },
    "10341": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4275,
        4298
      ],
      "op": "AND",
      "path": "66"
    },
    "10342": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4275,
        4298
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "10344": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4275,
        4298
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "10345": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4275,
        4298
      ],
      "op": "DUP2",
      "path": "66"
    },
    "10346": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4275,
        4298
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "10347": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4275,
        4294
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x84"
    },
    "10349": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4275,
        4298
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x20"
    },
    "10351": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4275,
        4298
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "10352": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4275,
        4298
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "10354": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4275,
        4298
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "10355": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4275,
        4298
      ],
      "op": "KECCAK256",
      "path": "66"
    },
    "10356": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4275,
        4298
      ],
      "op": "SLOAD",
      "path": "66"
    },
    "10357": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4275,
        4298
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0xFF"
    },
    "10359": {
      "branch": 171,
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4275,
        4298
      ],
      "op": "AND",
      "path": "66"
    },
    "10360": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4267,
        4327
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2893"
    },
    "10363": {
      "branch": 171,
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4267,
        4327
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "10364": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4267,
        4327
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "10366": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4267,
        4327
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "10367": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10371": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10373": {
      "op": "SHL"
    },
    "10374": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4267,
        4327
      ],
      "op": "DUP2",
      "path": "66"
    },
    "10375": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4267,
        4327
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "10376": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4267,
        4327
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "10378": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4267,
        4327
      ],
      "op": "ADD",
      "path": "66"
    },
    "10379": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4267,
        4327
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x19C"
    },
    "10382": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4267,
        4327
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "10383": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4267,
        4327
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x42A2"
    },
    "10386": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "jump": "i",
      "offset": [
        4267,
        4327
      ],
      "op": "JUMP",
      "path": "66"
    },
    "10387": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4267,
        4327
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "10388": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4367,
        4382
      ],
      "op": "PUSH2",
      "path": "66",
      "statement": 82,
      "value": "0x289B"
    },
    "10391": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4367,
        4380
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3476"
    },
    "10394": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "jump": "i",
      "offset": [
        4367,
        4382
      ],
      "op": "JUMP",
      "path": "66"
    },
    "10395": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4367,
        4382
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "10396": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4388,
        4420
      ],
      "op": "PUSH2",
      "path": "66",
      "statement": 83,
      "value": "0x28A6"
    },
    "10399": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4399,
        4405
      ],
      "op": "DUP5",
      "path": "66"
    },
    "10400": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4407,
        4419
      ],
      "op": "DUP4",
      "path": "66"
    },
    "10401": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4407,
        4419
      ],
      "op": "CALLDATALOAD",
      "path": "66"
    },
    "10402": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4388,
        4398
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x34ED"
    },
    "10405": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "jump": "i",
      "offset": [
        4388,
        4420
      ],
      "op": "JUMP",
      "path": "66"
    },
    "10406": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4388,
        4420
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "10407": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4426,
        4458
      ],
      "op": "PUSH2",
      "path": "66",
      "statement": 84,
      "value": "0x28B4"
    },
    "10410": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4437,
        4443
      ],
      "op": "DUP4",
      "path": "66"
    },
    "10411": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4445,
        4448
      ],
      "op": "DUP4",
      "path": "66"
    },
    "10412": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4445,
        4457
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x20"
    },
    "10414": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4445,
        4457
      ],
      "op": "ADD",
      "path": "66"
    },
    "10415": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4445,
        4457
      ],
      "op": "CALLDATALOAD",
      "path": "66"
    },
    "10416": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4426,
        4436
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x34ED"
    },
    "10419": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "jump": "i",
      "offset": [
        4426,
        4458
      ],
      "op": "JUMP",
      "path": "66"
    },
    "10420": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4426,
        4458
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "10421": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4464,
        4493
      ],
      "op": "PUSH2",
      "path": "66",
      "statement": 85,
      "value": "0x28C2"
    },
    "10424": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4475,
        4477
      ],
      "op": "DUP2",
      "path": "66"
    },
    "10425": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4479,
        4482
      ],
      "op": "DUP4",
      "path": "66"
    },
    "10426": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4479,
        4492
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "10428": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4479,
        4492
      ],
      "op": "ADD",
      "path": "66"
    },
    "10429": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4479,
        4492
      ],
      "op": "CALLDATALOAD",
      "path": "66"
    },
    "10430": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4464,
        4474
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x34ED"
    },
    "10433": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "jump": "i",
      "offset": [
        4464,
        4493
      ],
      "op": "JUMP",
      "path": "66"
    },
    "10434": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4464,
        4493
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "10435": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4535,
        4567
      ],
      "op": "PUSH2",
      "path": "66",
      "statement": 86,
      "value": "0x28D0"
    },
    "10438": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4544,
        4550
      ],
      "op": "DUP5",
      "path": "66"
    },
    "10439": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4552,
        4555
      ],
      "op": "DUP4",
      "path": "66"
    },
    "10440": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4552,
        4566
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x60"
    },
    "10442": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4552,
        4566
      ],
      "op": "ADD",
      "path": "66"
    },
    "10443": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4552,
        4566
      ],
      "op": "CALLDATALOAD",
      "path": "66"
    },
    "10444": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4535,
        4543
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3541"
    },
    "10447": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "jump": "i",
      "offset": [
        4535,
        4567
      ],
      "op": "JUMP",
      "path": "66"
    },
    "10448": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4535,
        4567
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "10449": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4573,
        4605
      ],
      "op": "PUSH2",
      "path": "66",
      "statement": 87,
      "value": "0x28DE"
    },
    "10452": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4582,
        4588
      ],
      "op": "DUP4",
      "path": "66"
    },
    "10453": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4590,
        4593
      ],
      "op": "DUP4",
      "path": "66"
    },
    "10454": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4590,
        4604
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x80"
    },
    "10456": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4590,
        4604
      ],
      "op": "ADD",
      "path": "66"
    },
    "10457": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4590,
        4604
      ],
      "op": "CALLDATALOAD",
      "path": "66"
    },
    "10458": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4573,
        4581
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3541"
    },
    "10461": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "jump": "i",
      "offset": [
        4573,
        4605
      ],
      "op": "JUMP",
      "path": "66"
    },
    "10462": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4573,
        4605
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "10463": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4611,
        4640
      ],
      "op": "PUSH2",
      "path": "66",
      "statement": 88,
      "value": "0x28EC"
    },
    "10466": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4620,
        4622
      ],
      "op": "DUP2",
      "path": "66"
    },
    "10467": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4624,
        4627
      ],
      "op": "DUP4",
      "path": "66"
    },
    "10468": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4624,
        4639
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0xA0"
    },
    "10470": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4624,
        4639
      ],
      "op": "ADD",
      "path": "66"
    },
    "10471": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4624,
        4639
      ],
      "op": "CALLDATALOAD",
      "path": "66"
    },
    "10472": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4611,
        4619
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3541"
    },
    "10475": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "jump": "i",
      "offset": [
        4611,
        4640
      ],
      "op": "JUMP",
      "path": "66"
    },
    "10476": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4611,
        4640
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "10477": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4687,
        4699
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "10479": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4705,
        4720
      ],
      "op": "DUP1",
      "path": "66"
    },
    "10480": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4734,
        4743
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "10482": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4753,
        4759
      ],
      "op": "DUP7",
      "path": "66"
    },
    "10483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10487": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10489": {
      "op": "SHL"
    },
    "10490": {
      "op": "SUB"
    },
    "10491": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4770
      ],
      "op": "AND",
      "path": "66"
    },
    "10492": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4770
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0x70A08231"
    },
    "10497": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4779,
        4783
      ],
      "op": "ADDRESS",
      "path": "66"
    },
    "10498": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "10500": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "10501": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "DUP3",
      "path": "66"
    },
    "10502": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0xFFFFFFFF"
    },
    "10507": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "AND",
      "path": "66"
    },
    "10508": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0xE0"
    },
    "10510": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "SHL",
      "path": "66"
    },
    "10511": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "DUP2",
      "path": "66"
    },
    "10512": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "10513": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "10515": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "ADD",
      "path": "66"
    },
    "10516": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x291D"
    },
    "10519": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "10520": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "10521": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3EF8"
    },
    "10524": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "jump": "i",
      "offset": [
        4746,
        4785
      ],
      "op": "JUMP",
      "path": "66"
    },
    "10525": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "10526": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x20"
    },
    "10528": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "10530": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "10531": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "DUP1",
      "path": "66"
    },
    "10532": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "DUP4",
      "path": "66"
    },
    "10533": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "SUB",
      "path": "66"
    },
    "10534": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "DUP2",
      "path": "66"
    },
    "10535": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "DUP7",
      "path": "66"
    },
    "10536": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "DUP1",
      "path": "66"
    },
    "10537": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "EXTCODESIZE",
      "path": "66"
    },
    "10538": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "10539": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "DUP1",
      "path": "66"
    },
    "10540": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "10541": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2935"
    },
    "10544": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "10545": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "10547": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "DUP1",
      "path": "66"
    },
    "10548": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "REVERT",
      "path": "66"
    },
    "10549": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "10550": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "POP",
      "path": "66"
    },
    "10551": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "GAS",
      "path": "66"
    },
    "10552": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "STATICCALL",
      "path": "66"
    },
    "10553": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "10554": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "DUP1",
      "path": "66"
    },
    "10555": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "10556": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2949"
    },
    "10559": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "10560": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "10561": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "10563": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "DUP1",
      "path": "66"
    },
    "10564": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "RETURNDATACOPY",
      "path": "66"
    },
    "10565": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "10566": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "10568": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "REVERT",
      "path": "66"
    },
    "10569": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "10570": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "POP",
      "path": "66"
    },
    "10571": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "POP",
      "path": "66"
    },
    "10572": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "POP",
      "path": "66"
    },
    "10573": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "POP",
      "path": "66"
    },
    "10574": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "10576": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "10577": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "10578": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "10580": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "NOT",
      "path": "66"
    },
    "10581": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "10583": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "DUP3",
      "path": "66"
    },
    "10584": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "ADD",
      "path": "66"
    },
    "10585": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "AND",
      "path": "66"
    },
    "10586": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "DUP3",
      "path": "66"
    },
    "10587": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "ADD",
      "path": "66"
    },
    "10588": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "DUP1",
      "path": "66"
    },
    "10589": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "10591": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "10592": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "POP",
      "path": "66"
    },
    "10593": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "DUP2",
      "path": "66"
    },
    "10594": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "ADD",
      "path": "66"
    },
    "10595": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "10596": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x296D"
    },
    "10599": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "10600": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "10601": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3E31"
    },
    "10604": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "jump": "i",
      "offset": [
        4746,
        4785
      ],
      "op": "JUMP",
      "path": "66"
    },
    "10605": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4746,
        4785
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "10606": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4734,
        4785
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "10607": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4734,
        4785
      ],
      "op": "POP",
      "path": "66"
    },
    "10608": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4793,
        4802
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "10610": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4812,
        4818
      ],
      "op": "DUP7",
      "path": "66"
    },
    "10611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10615": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10617": {
      "op": "SHL"
    },
    "10618": {
      "op": "SUB"
    },
    "10619": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4829
      ],
      "op": "AND",
      "path": "66"
    },
    "10620": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4829
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0x70A08231"
    },
    "10625": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4838,
        4842
      ],
      "op": "ADDRESS",
      "path": "66"
    },
    "10626": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "10628": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "10629": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "DUP3",
      "path": "66"
    },
    "10630": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0xFFFFFFFF"
    },
    "10635": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "AND",
      "path": "66"
    },
    "10636": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0xE0"
    },
    "10638": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "SHL",
      "path": "66"
    },
    "10639": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "DUP2",
      "path": "66"
    },
    "10640": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "10641": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "10643": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "ADD",
      "path": "66"
    },
    "10644": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x299D"
    },
    "10647": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "10648": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "10649": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3EF8"
    },
    "10652": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "jump": "i",
      "offset": [
        4805,
        4844
      ],
      "op": "JUMP",
      "path": "66"
    },
    "10653": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "10654": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x20"
    },
    "10656": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "10658": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "10659": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "DUP1",
      "path": "66"
    },
    "10660": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "DUP4",
      "path": "66"
    },
    "10661": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "SUB",
      "path": "66"
    },
    "10662": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "DUP2",
      "path": "66"
    },
    "10663": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "DUP7",
      "path": "66"
    },
    "10664": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "DUP1",
      "path": "66"
    },
    "10665": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "EXTCODESIZE",
      "path": "66"
    },
    "10666": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "10667": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "DUP1",
      "path": "66"
    },
    "10668": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "10669": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x29B5"
    },
    "10672": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "10673": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "10675": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "DUP1",
      "path": "66"
    },
    "10676": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "REVERT",
      "path": "66"
    },
    "10677": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "10678": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "POP",
      "path": "66"
    },
    "10679": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "GAS",
      "path": "66"
    },
    "10680": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "STATICCALL",
      "path": "66"
    },
    "10681": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "10682": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "DUP1",
      "path": "66"
    },
    "10683": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "10684": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x29C9"
    },
    "10687": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "10688": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "10689": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "10691": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "DUP1",
      "path": "66"
    },
    "10692": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "RETURNDATACOPY",
      "path": "66"
    },
    "10693": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "10694": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "10696": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "REVERT",
      "path": "66"
    },
    "10697": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "10698": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "POP",
      "path": "66"
    },
    "10699": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "POP",
      "path": "66"
    },
    "10700": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "POP",
      "path": "66"
    },
    "10701": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "POP",
      "path": "66"
    },
    "10702": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "10704": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "10705": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "10706": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "10708": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "NOT",
      "path": "66"
    },
    "10709": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "10711": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "DUP3",
      "path": "66"
    },
    "10712": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "ADD",
      "path": "66"
    },
    "10713": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "AND",
      "path": "66"
    },
    "10714": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "DUP3",
      "path": "66"
    },
    "10715": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "ADD",
      "path": "66"
    },
    "10716": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "DUP1",
      "path": "66"
    },
    "10717": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "10719": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "10720": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "POP",
      "path": "66"
    },
    "10721": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "DUP2",
      "path": "66"
    },
    "10722": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "ADD",
      "path": "66"
    },
    "10723": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "10724": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x29ED"
    },
    "10727": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "10728": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "10729": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3E31"
    },
    "10732": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "jump": "i",
      "offset": [
        4805,
        4844
      ],
      "op": "JUMP",
      "path": "66"
    },
    "10733": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4805,
        4844
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "10734": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4793,
        4844
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "10735": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4793,
        4844
      ],
      "op": "POP",
      "path": "66"
    },
    "10736": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4852,
        4861
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "10738": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4869,
        4878
      ],
      "op": "DUP1",
      "path": "66"
    },
    "10739": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4921,
        4927
      ],
      "op": "DUP10",
      "path": "66"
    },
    "10740": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10744": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10746": {
      "op": "SHL"
    },
    "10747": {
      "op": "SUB"
    },
    "10748": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4927
      ],
      "op": "AND",
      "path": "66"
    },
    "10749": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4905,
        4907
      ],
      "op": "DUP8",
      "path": "66"
    },
    "10750": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10754": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10756": {
      "op": "SHL"
    },
    "10757": {
      "op": "SUB"
    },
    "10758": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4915
      ],
      "op": "AND",
      "path": "66"
    },
    "10759": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4915
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0xDFE1681"
    },
    "10764": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "10766": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "10767": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "DUP2",
      "path": "66"
    },
    "10768": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0xFFFFFFFF"
    },
    "10773": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "AND",
      "path": "66"
    },
    "10774": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0xE0"
    },
    "10776": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "SHL",
      "path": "66"
    },
    "10777": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "DUP2",
      "path": "66"
    },
    "10778": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "10779": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "10781": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "ADD",
      "path": "66"
    },
    "10782": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x20"
    },
    "10784": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "10786": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "10787": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "DUP1",
      "path": "66"
    },
    "10788": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "DUP4",
      "path": "66"
    },
    "10789": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "SUB",
      "path": "66"
    },
    "10790": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "DUP2",
      "path": "66"
    },
    "10791": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "DUP7",
      "path": "66"
    },
    "10792": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "DUP1",
      "path": "66"
    },
    "10793": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "EXTCODESIZE",
      "path": "66"
    },
    "10794": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "10795": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "DUP1",
      "path": "66"
    },
    "10796": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "10797": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2A35"
    },
    "10800": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "10801": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "10803": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "DUP1",
      "path": "66"
    },
    "10804": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "REVERT",
      "path": "66"
    },
    "10805": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "10806": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "POP",
      "path": "66"
    },
    "10807": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "GAS",
      "path": "66"
    },
    "10808": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "STATICCALL",
      "path": "66"
    },
    "10809": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "10810": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "DUP1",
      "path": "66"
    },
    "10811": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "10812": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2A49"
    },
    "10815": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "10816": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "10817": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "10819": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "DUP1",
      "path": "66"
    },
    "10820": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "RETURNDATACOPY",
      "path": "66"
    },
    "10821": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "10822": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "10824": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "REVERT",
      "path": "66"
    },
    "10825": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "10826": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "POP",
      "path": "66"
    },
    "10827": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "POP",
      "path": "66"
    },
    "10828": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "POP",
      "path": "66"
    },
    "10829": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "POP",
      "path": "66"
    },
    "10830": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "10832": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "10833": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "10834": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "10836": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "NOT",
      "path": "66"
    },
    "10837": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "10839": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "DUP3",
      "path": "66"
    },
    "10840": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "ADD",
      "path": "66"
    },
    "10841": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "AND",
      "path": "66"
    },
    "10842": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "DUP3",
      "path": "66"
    },
    "10843": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "ADD",
      "path": "66"
    },
    "10844": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "DUP1",
      "path": "66"
    },
    "10845": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "10847": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "10848": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "POP",
      "path": "66"
    },
    "10849": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "DUP2",
      "path": "66"
    },
    "10850": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "ADD",
      "path": "66"
    },
    "10851": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "10852": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2A6D"
    },
    "10855": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "10856": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "10857": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3986"
    },
    "10860": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "jump": "i",
      "offset": [
        4890,
        4917
      ],
      "op": "JUMP",
      "path": "66"
    },
    "10861": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4917
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "10862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10866": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10868": {
      "op": "SHL"
    },
    "10869": {
      "op": "SUB"
    },
    "10870": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4927
      ],
      "op": "AND",
      "path": "66"
    },
    "10871": {
      "branch": 172,
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4890,
        4927
      ],
      "op": "EQ",
      "path": "66"
    },
    "10872": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4886,
        5071
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "10873": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4886,
        5071
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2B03"
    },
    "10876": {
      "branch": 172,
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4886,
        5071
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "10877": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4971,
        4973
      ],
      "op": "DUP7",
      "path": "66",
      "statement": 89
    },
    "10878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10880": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10882": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10884": {
      "op": "SHL"
    },
    "10885": {
      "op": "SUB"
    },
    "10886": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4986
      ],
      "op": "AND",
      "path": "66"
    },
    "10887": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4986
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0x902F1AC"
    },
    "10892": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "10894": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "10895": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "DUP2",
      "path": "66"
    },
    "10896": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0xFFFFFFFF"
    },
    "10901": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "AND",
      "path": "66"
    },
    "10902": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0xE0"
    },
    "10904": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "SHL",
      "path": "66"
    },
    "10905": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "DUP2",
      "path": "66"
    },
    "10906": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "10907": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "10909": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "ADD",
      "path": "66"
    },
    "10910": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x60"
    },
    "10912": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "10914": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "10915": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "DUP1",
      "path": "66"
    },
    "10916": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "DUP4",
      "path": "66"
    },
    "10917": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "SUB",
      "path": "66"
    },
    "10918": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "DUP2",
      "path": "66"
    },
    "10919": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "DUP7",
      "path": "66"
    },
    "10920": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "DUP1",
      "path": "66"
    },
    "10921": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "EXTCODESIZE",
      "path": "66"
    },
    "10922": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "10923": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "DUP1",
      "path": "66"
    },
    "10924": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "10925": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2AB5"
    },
    "10928": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "10929": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "10931": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "DUP1",
      "path": "66"
    },
    "10932": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "REVERT",
      "path": "66"
    },
    "10933": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "10934": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "POP",
      "path": "66"
    },
    "10935": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "GAS",
      "path": "66"
    },
    "10936": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "STATICCALL",
      "path": "66"
    },
    "10937": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "10938": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "DUP1",
      "path": "66"
    },
    "10939": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "10940": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2AC9"
    },
    "10943": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "10944": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "10945": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "10947": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "DUP1",
      "path": "66"
    },
    "10948": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "RETURNDATACOPY",
      "path": "66"
    },
    "10949": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "10950": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "10952": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "REVERT",
      "path": "66"
    },
    "10953": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "10954": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "POP",
      "path": "66"
    },
    "10955": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "POP",
      "path": "66"
    },
    "10956": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "POP",
      "path": "66"
    },
    "10957": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "POP",
      "path": "66"
    },
    "10958": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "10960": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "10961": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "10962": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "10964": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "NOT",
      "path": "66"
    },
    "10965": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "10967": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "DUP3",
      "path": "66"
    },
    "10968": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "ADD",
      "path": "66"
    },
    "10969": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "AND",
      "path": "66"
    },
    "10970": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "DUP3",
      "path": "66"
    },
    "10971": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "ADD",
      "path": "66"
    },
    "10972": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "DUP1",
      "path": "66"
    },
    "10973": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "10975": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "10976": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "POP",
      "path": "66"
    },
    "10977": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "DUP2",
      "path": "66"
    },
    "10978": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "ADD",
      "path": "66"
    },
    "10979": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "10980": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2AED"
    },
    "10983": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "10984": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "10985": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3DDD"
    },
    "10988": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "jump": "i",
      "offset": [
        4956,
        4988
      ],
      "op": "JUMP",
      "path": "66"
    },
    "10989": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4956,
        4988
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "10990": {
      "op": "POP"
    },
    "10991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10995": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "10997": {
      "op": "SHL"
    },
    "10998": {
      "op": "SUB"
    },
    "10999": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4939,
        4988
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "11000": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4939,
        4988
      ],
      "op": "DUP3",
      "path": "66"
    },
    "11001": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4939,
        4988
      ],
      "op": "AND",
      "path": "66"
    },
    "11002": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4939,
        4988
      ],
      "op": "SWAP4",
      "path": "66"
    },
    "11003": {
      "op": "POP"
    },
    "11004": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4939,
        4988
      ],
      "op": "AND",
      "path": "66"
    },
    "11005": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4939,
        4988
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "11006": {
      "op": "POP"
    },
    "11007": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4886,
        5071
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2B86"
    },
    "11010": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4886,
        5071
      ],
      "op": "JUMP",
      "path": "66"
    },
    "11011": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4886,
        5071
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "11012": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5045,
        5047
      ],
      "op": "DUP7",
      "path": "66",
      "statement": 90
    },
    "11013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11017": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11019": {
      "op": "SHL"
    },
    "11020": {
      "op": "SUB"
    },
    "11021": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5060
      ],
      "op": "AND",
      "path": "66"
    },
    "11022": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5060
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0x902F1AC"
    },
    "11027": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "11029": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "11030": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "DUP2",
      "path": "66"
    },
    "11031": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0xFFFFFFFF"
    },
    "11036": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "AND",
      "path": "66"
    },
    "11037": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0xE0"
    },
    "11039": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "SHL",
      "path": "66"
    },
    "11040": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "DUP2",
      "path": "66"
    },
    "11041": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "11042": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "11044": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "ADD",
      "path": "66"
    },
    "11045": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x60"
    },
    "11047": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "11049": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "11050": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "DUP1",
      "path": "66"
    },
    "11051": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "DUP4",
      "path": "66"
    },
    "11052": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "SUB",
      "path": "66"
    },
    "11053": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "DUP2",
      "path": "66"
    },
    "11054": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "DUP7",
      "path": "66"
    },
    "11055": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "DUP1",
      "path": "66"
    },
    "11056": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "EXTCODESIZE",
      "path": "66"
    },
    "11057": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "11058": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "DUP1",
      "path": "66"
    },
    "11059": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "11060": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2B3C"
    },
    "11063": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "11064": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "11066": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "DUP1",
      "path": "66"
    },
    "11067": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "REVERT",
      "path": "66"
    },
    "11068": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "11069": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "POP",
      "path": "66"
    },
    "11070": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "GAS",
      "path": "66"
    },
    "11071": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "STATICCALL",
      "path": "66"
    },
    "11072": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "11073": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "DUP1",
      "path": "66"
    },
    "11074": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "11075": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2B50"
    },
    "11078": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "11079": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "11080": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "11082": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "DUP1",
      "path": "66"
    },
    "11083": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "RETURNDATACOPY",
      "path": "66"
    },
    "11084": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "11085": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "11087": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "REVERT",
      "path": "66"
    },
    "11088": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "11089": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "POP",
      "path": "66"
    },
    "11090": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "POP",
      "path": "66"
    },
    "11091": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "POP",
      "path": "66"
    },
    "11092": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "POP",
      "path": "66"
    },
    "11093": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "11095": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "11096": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "11097": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "11099": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "NOT",
      "path": "66"
    },
    "11100": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "11102": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "DUP3",
      "path": "66"
    },
    "11103": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "ADD",
      "path": "66"
    },
    "11104": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "AND",
      "path": "66"
    },
    "11105": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "DUP3",
      "path": "66"
    },
    "11106": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "ADD",
      "path": "66"
    },
    "11107": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "DUP1",
      "path": "66"
    },
    "11108": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "11110": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "11111": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "POP",
      "path": "66"
    },
    "11112": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "DUP2",
      "path": "66"
    },
    "11113": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "ADD",
      "path": "66"
    },
    "11114": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "11115": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2B74"
    },
    "11118": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "11119": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "11120": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3DDD"
    },
    "11123": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "jump": "i",
      "offset": [
        5030,
        5062
      ],
      "op": "JUMP",
      "path": "66"
    },
    "11124": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5030,
        5062
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "11125": {
      "op": "POP"
    },
    "11126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11128": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11130": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "11132": {
      "op": "SHL"
    },
    "11133": {
      "op": "SUB"
    },
    "11134": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5013,
        5062
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "11135": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5013,
        5062
      ],
      "op": "DUP2",
      "path": "66"
    },
    "11136": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5013,
        5062
      ],
      "op": "AND",
      "path": "66"
    },
    "11137": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5013,
        5062
      ],
      "op": "SWAP4",
      "path": "66"
    },
    "11138": {
      "op": "POP"
    },
    "11139": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5013,
        5062
      ],
      "op": "AND",
      "path": "66"
    },
    "11140": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5013,
        5062
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "11141": {
      "op": "POP"
    },
    "11142": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4886,
        5071
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "11143": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5102,
        5140
      ],
      "op": "PUSH2",
      "path": "66",
      "statement": 91,
      "value": "0x2B92"
    },
    "11146": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5117,
        5121
      ],
      "op": "DUP5",
      "path": "66"
    },
    "11147": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5123,
        5127
      ],
      "op": "DUP5",
      "path": "66"
    },
    "11148": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5129,
        5133
      ],
      "op": "DUP5",
      "path": "66"
    },
    "11149": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5135,
        5139
      ],
      "op": "DUP5",
      "path": "66"
    },
    "11150": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5102,
        5116
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3595"
    },
    "11153": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "jump": "i",
      "offset": [
        5102,
        5140
      ],
      "op": "JUMP",
      "path": "66"
    },
    "11154": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5102,
        5140
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "11155": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5078,
        5140
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "11156": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5078,
        5140
      ],
      "op": "SWAP7",
      "path": "66"
    },
    "11157": {
      "op": "POP"
    },
    "11158": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5078,
        5140
      ],
      "op": "SWAP5",
      "path": "66"
    },
    "11159": {
      "op": "POP"
    },
    "11160": {
      "op": "POP"
    },
    "11161": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5187,
        5198
      ],
      "op": "DUP5",
      "path": "66"
    },
    "11162": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5187,
        5198
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "11163": {
      "branch": 173,
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5187,
        5198
      ],
      "op": "SWAP3",
      "path": "66"
    },
    "11164": {
      "op": "POP"
    },
    "11165": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5183,
        5421
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2CB7"
    },
    "11168": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5183,
        5421
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "11169": {
      "op": "POP"
    },
    "11170": {
      "op": "POP"
    },
    "11171": {
      "branch": 173,
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5183,
        5421
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "11172": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5232,
        5248
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "11174": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5232,
        5248
      ],
      "op": "DUP1",
      "path": "66"
    },
    "11175": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5232,
        5248
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "11176": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5246,
        5247
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x2"
    },
    "11178": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5232,
        5248
      ],
      "op": "DUP1",
      "path": "66"
    },
    "11179": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5232,
        5248
      ],
      "op": "DUP3",
      "path": "66"
    },
    "11180": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5232,
        5248
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "11181": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5208,
        5229
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x60"
    },
    "11183": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5232,
        5248
      ],
      "op": "DUP1",
      "path": "66"
    },
    "11184": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5232,
        5248
      ],
      "op": "DUP4",
      "path": "66"
    },
    "11185": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5232,
        5248
      ],
      "op": "ADD",
      "path": "66"
    },
    "11186": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5232,
        5248
      ],
      "op": "DUP5",
      "path": "66"
    },
    "11187": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5232,
        5248
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "11188": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5208,
        5229
      ],
      "op": "SWAP3",
      "path": "66"
    },
    "11189": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5232,
        5248
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x20"
    },
    "11191": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5232,
        5248
      ],
      "op": "DUP4",
      "path": "66"
    },
    "11192": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5232,
        5248
      ],
      "op": "ADD",
      "path": "66"
    },
    "11193": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5232,
        5248
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "11194": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5232,
        5248
      ],
      "op": "DUP1",
      "path": "66"
    },
    "11195": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5232,
        5248
      ],
      "op": "CALLDATASIZE",
      "path": "66"
    },
    "11196": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5232,
        5248
      ],
      "op": "DUP4",
      "path": "66"
    },
    "11197": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5232,
        5248
      ],
      "op": "CALLDATACOPY",
      "path": "66"
    },
    "11198": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5232,
        5248
      ],
      "op": "ADD",
      "path": "66"
    },
    "11199": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5232,
        5248
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "11200": {
      "op": "POP"
    },
    "11201": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5232,
        5248
      ],
      "op": "POP",
      "path": "66"
    },
    "11202": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5208,
        5248
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "11203": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5208,
        5248
      ],
      "op": "POP",
      "path": "66"
    },
    "11204": {
      "branch": 174,
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5277,
        5287
      ],
      "op": "DUP2",
      "path": "66",
      "statement": 92
    },
    "11205": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5277,
        5325
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2BCF"
    },
    "11208": {
      "branch": 174,
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5277,
        5325
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "11209": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5310,
        5316
      ],
      "op": "DUP7",
      "path": "66"
    },
    "11210": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5318,
        5324
      ],
      "op": "DUP7",
      "path": "66"
    },
    "11211": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5277,
        5325
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2BD2"
    },
    "11214": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5277,
        5325
      ],
      "op": "JUMP",
      "path": "66"
    },
    "11215": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5277,
        5325
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "11216": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5291,
        5297
      ],
      "op": "DUP6",
      "path": "66"
    },
    "11217": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5299,
        5305
      ],
      "op": "DUP8",
      "path": "66"
    },
    "11218": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5277,
        5325
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "11219": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5257,
        5261
      ],
      "op": "DUP3",
      "path": "66"
    },
    "11220": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5262,
        5263
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "11222": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5257,
        5264
      ],
      "op": "DUP2",
      "path": "66"
    },
    "11223": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5257,
        5264
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "11224": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5257,
        5264
      ],
      "op": "DUP2",
      "path": "66"
    },
    "11225": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5257,
        5264
      ],
      "op": "LT",
      "path": "66"
    },
    "11226": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5257,
        5264
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2BDF"
    },
    "11229": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5257,
        5264
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "11230": {
      "dev": "Index out of range",
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5257,
        5264
      ],
      "op": "INVALID",
      "path": "66"
    },
    "11231": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5257,
        5264
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "11232": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5257,
        5264
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x20"
    },
    "11234": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5257,
        5264
      ],
      "op": "MUL",
      "path": "66"
    },
    "11235": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5257,
        5264
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x20"
    },
    "11237": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5257,
        5264
      ],
      "op": "ADD",
      "path": "66"
    },
    "11238": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5257,
        5264
      ],
      "op": "ADD",
      "path": "66"
    },
    "11239": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5266,
        5270
      ],
      "op": "DUP4",
      "path": "66"
    },
    "11240": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5271,
        5272
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1"
    },
    "11242": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5266,
        5273
      ],
      "op": "DUP2",
      "path": "66"
    },
    "11243": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5266,
        5273
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "11244": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5266,
        5273
      ],
      "op": "DUP2",
      "path": "66"
    },
    "11245": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5266,
        5273
      ],
      "op": "LT",
      "path": "66"
    },
    "11246": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5266,
        5273
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2BF3"
    },
    "11249": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5266,
        5273
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "11250": {
      "dev": "Index out of range",
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5266,
        5273
      ],
      "op": "INVALID",
      "path": "66"
    },
    "11251": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5266,
        5273
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "11252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11256": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11258": {
      "op": "SHL"
    },
    "11259": {
      "op": "SUB"
    },
    "11260": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5256,
        5325
      ],
      "op": "SWAP4",
      "path": "66"
    },
    "11261": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5256,
        5325
      ],
      "op": "DUP5",
      "path": "66"
    },
    "11262": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5256,
        5325
      ],
      "op": "AND",
      "path": "66"
    },
    "11263": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5266,
        5273
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x20"
    },
    "11265": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5266,
        5273
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "11266": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5266,
        5273
      ],
      "op": "DUP3",
      "path": "66"
    },
    "11267": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5266,
        5273
      ],
      "op": "MUL",
      "path": "66"
    },
    "11268": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5266,
        5273
      ],
      "op": "SWAP3",
      "path": "66"
    },
    "11269": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5266,
        5273
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "11270": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5266,
        5273
      ],
      "op": "SWAP3",
      "path": "66"
    },
    "11271": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5266,
        5273
      ],
      "op": "ADD",
      "path": "66"
    },
    "11272": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5266,
        5273
      ],
      "op": "ADD",
      "path": "66"
    },
    "11273": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5256,
        5325
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "11274": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5256,
        5325
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "11275": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5256,
        5325
      ],
      "op": "DUP2",
      "path": "66"
    },
    "11276": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5256,
        5325
      ],
      "op": "AND",
      "path": "66"
    },
    "11277": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5256,
        5325
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "11278": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5256,
        5325
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "11279": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5256,
        5325
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "11280": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "PUSH1",
      "path": "66",
      "statement": 93,
      "value": "0x40"
    },
    "11282": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "11283": {
      "op": "PUSH4",
      "value": "0x38ED1739"
    },
    "11288": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11290": {
      "op": "SHL"
    },
    "11291": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "DUP2",
      "path": "66"
    },
    "11292": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "11293": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5339
      ],
      "op": "PUSH32",
      "path": "66",
      "value": "0x0"
    },
    "11326": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5364
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "11327": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5364
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "11328": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5364
      ],
      "op": "AND",
      "path": "66"
    },
    "11329": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5364
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "11330": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5364
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0x38ED1739"
    },
    "11335": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5364
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "11336": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2C5E"
    },
    "11339": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "11340": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5365,
        5372
      ],
      "op": "DUP7",
      "path": "66"
    },
    "11341": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5365,
        5372
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "11342": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5374,
        5375
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "11344": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5374,
        5375
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "11345": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5377,
        5381
      ],
      "op": "DUP7",
      "path": "66"
    },
    "11346": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5377,
        5381
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "11347": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5391,
        5395
      ],
      "op": "ADDRESS",
      "path": "66"
    },
    "11348": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5391,
        5395
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "11349": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5398,
        5413
      ],
      "op": "TIMESTAMP",
      "path": "66"
    },
    "11350": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5398,
        5413
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "11351": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "11353": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "ADD",
      "path": "66"
    },
    "11354": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x452A"
    },
    "11357": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "jump": "i",
      "offset": [
        5333,
        5414
      ],
      "op": "JUMP",
      "path": "66"
    },
    "11358": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "11359": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "11361": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "11363": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "11364": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "DUP1",
      "path": "66"
    },
    "11365": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "DUP4",
      "path": "66"
    },
    "11366": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "SUB",
      "path": "66"
    },
    "11367": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "DUP2",
      "path": "66"
    },
    "11368": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "11370": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "DUP8",
      "path": "66"
    },
    "11371": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "DUP1",
      "path": "66"
    },
    "11372": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "EXTCODESIZE",
      "path": "66"
    },
    "11373": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "11374": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "DUP1",
      "path": "66"
    },
    "11375": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "11376": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2C78"
    },
    "11379": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "11380": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "11382": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "DUP1",
      "path": "66"
    },
    "11383": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "REVERT",
      "path": "66"
    },
    "11384": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "11385": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "POP",
      "path": "66"
    },
    "11386": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "GAS",
      "path": "66"
    },
    "11387": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "CALL",
      "path": "66"
    },
    "11388": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "11389": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "DUP1",
      "path": "66"
    },
    "11390": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "11391": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2C8C"
    },
    "11394": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "11395": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "11396": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "11398": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "DUP1",
      "path": "66"
    },
    "11399": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "RETURNDATACOPY",
      "path": "66"
    },
    "11400": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "11401": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "11403": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "REVERT",
      "path": "66"
    },
    "11404": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "11405": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "POP",
      "path": "66"
    },
    "11406": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "POP",
      "path": "66"
    },
    "11407": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "POP",
      "path": "66"
    },
    "11408": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "POP",
      "path": "66"
    },
    "11409": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "11411": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "11412": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "11413": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "11415": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "DUP3",
      "path": "66"
    },
    "11416": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "RETURNDATACOPY",
      "path": "66"
    },
    "11417": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "11419": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "11420": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "11421": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "DUP2",
      "path": "66"
    },
    "11422": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "ADD",
      "path": "66"
    },
    "11423": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11425": {
      "op": "NOT"
    },
    "11426": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "AND",
      "path": "66"
    },
    "11427": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "DUP3",
      "path": "66"
    },
    "11428": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "ADD",
      "path": "66"
    },
    "11429": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "11431": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "11432": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2CB4"
    },
    "11435": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "11436": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "11437": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "DUP2",
      "path": "66"
    },
    "11438": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "ADD",
      "path": "66"
    },
    "11439": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "11440": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3CE8"
    },
    "11443": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "jump": "i",
      "offset": [
        5333,
        5414
      ],
      "op": "JUMP",
      "path": "66"
    },
    "11444": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "11445": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5333,
        5414
      ],
      "op": "POP",
      "path": "66"
    },
    "11446": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5183,
        5421
      ],
      "op": "POP",
      "path": "66"
    },
    "11447": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5183,
        5421
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "11448": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "11450": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "11451": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "11456": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11458": {
      "op": "SHL"
    },
    "11459": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "DUP2",
      "path": "66"
    },
    "11460": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "11461": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5451,
        5460
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "11463": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5451,
        5460
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "11464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11468": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11470": {
      "op": "SHL"
    },
    "11471": {
      "op": "SUB"
    },
    "11472": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5487
      ],
      "op": "DUP9",
      "path": "66"
    },
    "11473": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5487
      ],
      "op": "AND",
      "path": "66"
    },
    "11474": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5487
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "11475": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5487
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0x70A08231"
    },
    "11480": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5487
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "11481": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2CE6"
    },
    "11484": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "11485": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5496,
        5500
      ],
      "op": "ADDRESS",
      "path": "66"
    },
    "11486": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5496,
        5500
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "11487": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "11489": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "ADD",
      "path": "66"
    },
    "11490": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3EF8"
    },
    "11493": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "jump": "i",
      "offset": [
        5463,
        5502
      ],
      "op": "JUMP",
      "path": "66"
    },
    "11494": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "11495": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x20"
    },
    "11497": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "11499": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "11500": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "DUP1",
      "path": "66"
    },
    "11501": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "DUP4",
      "path": "66"
    },
    "11502": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "SUB",
      "path": "66"
    },
    "11503": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "DUP2",
      "path": "66"
    },
    "11504": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "DUP7",
      "path": "66"
    },
    "11505": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "DUP1",
      "path": "66"
    },
    "11506": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "EXTCODESIZE",
      "path": "66"
    },
    "11507": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "11508": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "DUP1",
      "path": "66"
    },
    "11509": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "11510": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2CFE"
    },
    "11513": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "11514": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "11516": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "DUP1",
      "path": "66"
    },
    "11517": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "REVERT",
      "path": "66"
    },
    "11518": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "11519": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "POP",
      "path": "66"
    },
    "11520": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "GAS",
      "path": "66"
    },
    "11521": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "STATICCALL",
      "path": "66"
    },
    "11522": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "11523": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "DUP1",
      "path": "66"
    },
    "11524": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "11525": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2D12"
    },
    "11528": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "11529": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "11530": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "11532": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "DUP1",
      "path": "66"
    },
    "11533": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "RETURNDATACOPY",
      "path": "66"
    },
    "11534": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "11535": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "11537": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "REVERT",
      "path": "66"
    },
    "11538": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "11539": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "POP",
      "path": "66"
    },
    "11540": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "POP",
      "path": "66"
    },
    "11541": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "POP",
      "path": "66"
    },
    "11542": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "POP",
      "path": "66"
    },
    "11543": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "11545": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "11546": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "11547": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "11549": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "NOT",
      "path": "66"
    },
    "11550": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "11552": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "DUP3",
      "path": "66"
    },
    "11553": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "ADD",
      "path": "66"
    },
    "11554": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "AND",
      "path": "66"
    },
    "11555": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "DUP3",
      "path": "66"
    },
    "11556": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "ADD",
      "path": "66"
    },
    "11557": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "DUP1",
      "path": "66"
    },
    "11558": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "11560": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "11561": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "POP",
      "path": "66"
    },
    "11562": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "DUP2",
      "path": "66"
    },
    "11563": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "ADD",
      "path": "66"
    },
    "11564": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "11565": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2D36"
    },
    "11568": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "11569": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "11570": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3E31"
    },
    "11573": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "jump": "i",
      "offset": [
        5463,
        5502
      ],
      "op": "JUMP",
      "path": "66"
    },
    "11574": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5463,
        5502
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "11575": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5451,
        5502
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "11576": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5451,
        5502
      ],
      "op": "POP",
      "path": "66"
    },
    "11577": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5508,
        5517
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "11579": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5527,
        5533
      ],
      "op": "DUP7",
      "path": "66"
    },
    "11580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11584": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11586": {
      "op": "SHL"
    },
    "11587": {
      "op": "SUB"
    },
    "11588": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5544
      ],
      "op": "AND",
      "path": "66"
    },
    "11589": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5544
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0x70A08231"
    },
    "11594": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5553,
        5557
      ],
      "op": "ADDRESS",
      "path": "66"
    },
    "11595": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "11597": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "11598": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "DUP3",
      "path": "66"
    },
    "11599": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0xFFFFFFFF"
    },
    "11604": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "AND",
      "path": "66"
    },
    "11605": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0xE0"
    },
    "11607": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "SHL",
      "path": "66"
    },
    "11608": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "DUP2",
      "path": "66"
    },
    "11609": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "11610": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "11612": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "ADD",
      "path": "66"
    },
    "11613": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2D66"
    },
    "11616": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "11617": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "11618": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3EF8"
    },
    "11621": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "jump": "i",
      "offset": [
        5520,
        5559
      ],
      "op": "JUMP",
      "path": "66"
    },
    "11622": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "11623": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x20"
    },
    "11625": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "11627": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "11628": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "DUP1",
      "path": "66"
    },
    "11629": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "DUP4",
      "path": "66"
    },
    "11630": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "SUB",
      "path": "66"
    },
    "11631": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "DUP2",
      "path": "66"
    },
    "11632": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "DUP7",
      "path": "66"
    },
    "11633": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "DUP1",
      "path": "66"
    },
    "11634": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "EXTCODESIZE",
      "path": "66"
    },
    "11635": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "11636": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "DUP1",
      "path": "66"
    },
    "11637": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "11638": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2D7E"
    },
    "11641": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "11642": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "11644": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "DUP1",
      "path": "66"
    },
    "11645": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "REVERT",
      "path": "66"
    },
    "11646": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "11647": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "POP",
      "path": "66"
    },
    "11648": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "GAS",
      "path": "66"
    },
    "11649": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "STATICCALL",
      "path": "66"
    },
    "11650": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "11651": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "DUP1",
      "path": "66"
    },
    "11652": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "11653": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2D92"
    },
    "11656": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "11657": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "11658": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "11660": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "DUP1",
      "path": "66"
    },
    "11661": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "RETURNDATACOPY",
      "path": "66"
    },
    "11662": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "11663": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "11665": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "REVERT",
      "path": "66"
    },
    "11666": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "11667": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "POP",
      "path": "66"
    },
    "11668": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "POP",
      "path": "66"
    },
    "11669": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "POP",
      "path": "66"
    },
    "11670": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "POP",
      "path": "66"
    },
    "11671": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "11673": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "11674": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "11675": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "11677": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "NOT",
      "path": "66"
    },
    "11678": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "11680": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "DUP3",
      "path": "66"
    },
    "11681": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "ADD",
      "path": "66"
    },
    "11682": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "AND",
      "path": "66"
    },
    "11683": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "DUP3",
      "path": "66"
    },
    "11684": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "ADD",
      "path": "66"
    },
    "11685": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "DUP1",
      "path": "66"
    },
    "11686": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "11688": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "11689": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "POP",
      "path": "66"
    },
    "11690": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "DUP2",
      "path": "66"
    },
    "11691": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "ADD",
      "path": "66"
    },
    "11692": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "11693": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2DB6"
    },
    "11696": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "11697": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "11698": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3E31"
    },
    "11701": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "jump": "i",
      "offset": [
        5520,
        5559
      ],
      "op": "JUMP",
      "path": "66"
    },
    "11702": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5520,
        5559
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "11703": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5508,
        5559
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "11704": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5508,
        5559
      ],
      "op": "POP",
      "path": "66"
    },
    "11705": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5576,
        5577
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "11707": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5569,
        5573
      ],
      "op": "DUP3",
      "path": "66"
    },
    "11708": {
      "branch": 175,
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5569,
        5577
      ],
      "op": "GT",
      "path": "66"
    },
    "11709": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5569,
        5589
      ],
      "op": "DUP1",
      "path": "66"
    },
    "11710": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5569,
        5589
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2DC7"
    },
    "11713": {
      "branch": 175,
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5569,
        5589
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "11714": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5569,
        5589
      ],
      "op": "POP",
      "path": "66"
    },
    "11715": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5588,
        5589
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "11717": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5581,
        5585
      ],
      "op": "DUP2",
      "path": "66"
    },
    "11718": {
      "branch": 176,
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5581,
        5589
      ],
      "op": "GT",
      "path": "66"
    },
    "11719": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5569,
        5589
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "11720": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5565,
        5879
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "11721": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5565,
        5879
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2EC7"
    },
    "11724": {
      "branch": 176,
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5565,
        5879
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "11725": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5615,
        5618
      ],
      "op": "DUP6",
      "path": "66",
      "statement": 94
    },
    "11726": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5615,
        5626
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0xC0"
    },
    "11728": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5615,
        5626
      ],
      "op": "ADD",
      "path": "66"
    },
    "11729": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5615,
        5626
      ],
      "op": "CALLDATALOAD",
      "path": "66"
    },
    "11730": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5607,
        5611
      ],
      "op": "DUP3",
      "path": "66"
    },
    "11731": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5607,
        5626
      ],
      "op": "LT",
      "path": "66"
    },
    "11732": {
      "branch": 177,
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5607,
        5626
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "11733": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5599,
        5639
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2DF0"
    },
    "11736": {
      "branch": 177,
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5599,
        5639
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "11737": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5599,
        5639
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "11739": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5599,
        5639
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "11740": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11744": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11746": {
      "op": "SHL"
    },
    "11747": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5599,
        5639
      ],
      "op": "DUP2",
      "path": "66"
    },
    "11748": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5599,
        5639
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "11749": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5599,
        5639
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "11751": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5599,
        5639
      ],
      "op": "ADD",
      "path": "66"
    },
    "11752": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5599,
        5639
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x19C"
    },
    "11755": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5599,
        5639
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "11756": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5599,
        5639
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x4351"
    },
    "11759": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "jump": "i",
      "offset": [
        5599,
        5639
      ],
      "op": "JUMP",
      "path": "66"
    },
    "11760": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5599,
        5639
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "11761": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5663,
        5666
      ],
      "op": "DUP6",
      "path": "66",
      "statement": 95
    },
    "11762": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5663,
        5674
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0xE0"
    },
    "11764": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5663,
        5674
      ],
      "op": "ADD",
      "path": "66"
    },
    "11765": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5663,
        5674
      ],
      "op": "CALLDATALOAD",
      "path": "66"
    },
    "11766": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5655,
        5659
      ],
      "op": "DUP2",
      "path": "66"
    },
    "11767": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5655,
        5674
      ],
      "op": "LT",
      "path": "66"
    },
    "11768": {
      "branch": 178,
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5655,
        5674
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "11769": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5647,
        5687
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2E14"
    },
    "11772": {
      "branch": 178,
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5647,
        5687
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "11773": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5647,
        5687
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "11775": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5647,
        5687
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "11776": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11780": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11782": {
      "op": "SHL"
    },
    "11783": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5647,
        5687
      ],
      "op": "DUP2",
      "path": "66"
    },
    "11784": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5647,
        5687
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "11785": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5647,
        5687
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "11787": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5647,
        5687
      ],
      "op": "ADD",
      "path": "66"
    },
    "11788": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5647,
        5687
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x19C"
    },
    "11791": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5647,
        5687
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "11792": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5647,
        5687
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x4067"
    },
    "11795": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "jump": "i",
      "offset": [
        5647,
        5687
      ],
      "op": "JUMP",
      "path": "66"
    },
    "11796": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5647,
        5687
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "11797": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "PUSH1",
      "path": "66",
      "statement": 96,
      "value": "0x40"
    },
    "11799": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "11800": {
      "op": "PUSH3",
      "value": "0xE8E337"
    },
    "11804": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "11806": {
      "op": "SHL"
    },
    "11807": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "DUP2",
      "path": "66"
    },
    "11808": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "11809": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11813": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11815": {
      "op": "SHL"
    },
    "11816": {
      "op": "SUB"
    },
    "11817": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5701
      ],
      "op": "PUSH32",
      "path": "66",
      "value": "0x0"
    },
    "11850": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5714
      ],
      "op": "AND",
      "path": "66"
    },
    "11851": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5714
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "11852": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5714
      ],
      "op": "PUSH4",
      "path": "66",
      "value": "0xE8E33700"
    },
    "11857": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5714
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "11858": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2E75"
    },
    "11861": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "11862": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5724,
        5730
      ],
      "op": "DUP12",
      "path": "66"
    },
    "11863": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5724,
        5730
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "11864": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5740,
        5746
      ],
      "op": "DUP12",
      "path": "66"
    },
    "11865": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5740,
        5746
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "11866": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5756,
        5760
      ],
      "op": "DUP8",
      "path": "66"
    },
    "11867": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5756,
        5760
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "11868": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5770,
        5774
      ],
      "op": "DUP8",
      "path": "66"
    },
    "11869": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5770,
        5774
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "11870": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5784,
        5795
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0xC0"
    },
    "11872": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5784,
        5795
      ],
      "op": "DUP15",
      "path": "66"
    },
    "11873": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5784,
        5795
      ],
      "op": "ADD",
      "path": "66"
    },
    "11874": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5784,
        5795
      ],
      "op": "CALLDATALOAD",
      "path": "66"
    },
    "11875": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5784,
        5795
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "11876": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5805,
        5816
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0xE0"
    },
    "11878": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5805,
        5816
      ],
      "op": "DUP16",
      "path": "66"
    },
    "11879": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5805,
        5816
      ],
      "op": "ADD",
      "path": "66"
    },
    "11880": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5805,
        5816
      ],
      "op": "CALLDATALOAD",
      "path": "66"
    },
    "11881": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5805,
        5816
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "11882": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5834,
        5838
      ],
      "op": "ADDRESS",
      "path": "66"
    },
    "11883": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5834,
        5838
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "11884": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5849,
        5864
      ],
      "op": "TIMESTAMP",
      "path": "66"
    },
    "11885": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5849,
        5864
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "11886": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "11888": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "ADD",
      "path": "66"
    },
    "11889": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3F66"
    },
    "11892": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "jump": "i",
      "offset": [
        5695,
        5872
      ],
      "op": "JUMP",
      "path": "66"
    },
    "11893": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "11894": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x60"
    },
    "11896": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "11898": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "11899": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "DUP1",
      "path": "66"
    },
    "11900": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "DUP4",
      "path": "66"
    },
    "11901": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "SUB",
      "path": "66"
    },
    "11902": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "DUP2",
      "path": "66"
    },
    "11903": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "11905": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "DUP8",
      "path": "66"
    },
    "11906": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "DUP1",
      "path": "66"
    },
    "11907": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "EXTCODESIZE",
      "path": "66"
    },
    "11908": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "11909": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "DUP1",
      "path": "66"
    },
    "11910": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "11911": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2E8F"
    },
    "11914": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "11915": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "11917": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "DUP1",
      "path": "66"
    },
    "11918": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "REVERT",
      "path": "66"
    },
    "11919": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "11920": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "POP",
      "path": "66"
    },
    "11921": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "GAS",
      "path": "66"
    },
    "11922": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "CALL",
      "path": "66"
    },
    "11923": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "11924": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "DUP1",
      "path": "66"
    },
    "11925": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "11926": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2EA3"
    },
    "11929": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "11930": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "11931": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "11933": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "DUP1",
      "path": "66"
    },
    "11934": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "RETURNDATACOPY",
      "path": "66"
    },
    "11935": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "11936": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "11938": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "REVERT",
      "path": "66"
    },
    "11939": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "11940": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "POP",
      "path": "66"
    },
    "11941": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "POP",
      "path": "66"
    },
    "11942": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "POP",
      "path": "66"
    },
    "11943": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "POP",
      "path": "66"
    },
    "11944": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "11946": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "11947": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "RETURNDATASIZE",
      "path": "66"
    },
    "11948": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "11950": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "NOT",
      "path": "66"
    },
    "11951": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1F"
    },
    "11953": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "DUP3",
      "path": "66"
    },
    "11954": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "ADD",
      "path": "66"
    },
    "11955": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "AND",
      "path": "66"
    },
    "11956": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "DUP3",
      "path": "66"
    },
    "11957": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "ADD",
      "path": "66"
    },
    "11958": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "DUP1",
      "path": "66"
    },
    "11959": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "11961": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "11962": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "POP",
      "path": "66"
    },
    "11963": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "DUP2",
      "path": "66"
    },
    "11964": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "ADD",
      "path": "66"
    },
    "11965": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "11966": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x17D7"
    },
    "11969": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "11970": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "11971": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5695,
        5872
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3E6C"
    },
    "11974": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "jump": "i",
      "offset": [
        5695,
        5872
      ],
      "op": "JUMP",
      "path": "66"
    },
    "11975": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        5565,
        5879
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "11976": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4136,
        5883
      ],
      "op": "POP",
      "path": "66"
    },
    "11977": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4136,
        5883
      ],
      "op": "POP",
      "path": "66"
    },
    "11978": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4136,
        5883
      ],
      "op": "POP",
      "path": "66"
    },
    "11979": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4136,
        5883
      ],
      "op": "POP",
      "path": "66"
    },
    "11980": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4136,
        5883
      ],
      "op": "POP",
      "path": "66"
    },
    "11981": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4136,
        5883
      ],
      "op": "POP",
      "path": "66"
    },
    "11982": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4136,
        5883
      ],
      "op": "POP",
      "path": "66"
    },
    "11983": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "offset": [
        4136,
        5883
      ],
      "op": "POP",
      "path": "66"
    },
    "11984": {
      "fn": "SushiswapSpellV1.addLiquidityInternal",
      "jump": "o",
      "offset": [
        4136,
        5883
      ],
      "op": "JUMP",
      "path": "66"
    },
    "11985": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3635,
        3873
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "11986": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3707,
        3717
      ],
      "op": "DUP1",
      "path": "63"
    },
    "11987": {
      "branch": 190,
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3707,
        3717
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "11988": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3703,
        3869
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1E19"
    },
    "11991": {
      "branch": 190,
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3703,
        3869
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "11992": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3727,
        3764
      ],
      "op": "PUSH2",
      "path": "63",
      "statement": 97,
      "value": "0x2F01"
    },
    "11995": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3741,
        3746
      ],
      "op": "DUP3",
      "path": "63"
    },
    "11996": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3756,
        3762
      ],
      "op": "PUSH32",
      "path": "63",
      "value": "0x0"
    },
    "12029": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3727,
        3740
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x26B8"
    },
    "12032": {
      "fn": "BasicSpell.doPutCollateral",
      "jump": "i",
      "offset": [
        3727,
        3764
      ],
      "op": "JUMP",
      "path": "63"
    },
    "12033": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3727,
        3764
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "12034": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3772,
        3798
      ],
      "op": "PUSH1",
      "path": "63",
      "statement": 98,
      "value": "0x40"
    },
    "12036": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3772,
        3798
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "12037": {
      "op": "PUSH4",
      "value": "0x40C10F19"
    },
    "12042": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12044": {
      "op": "SHL"
    },
    "12045": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3772,
        3798
      ],
      "op": "DUP2",
      "path": "63"
    },
    "12046": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3772,
        3798
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "12047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12051": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12053": {
      "op": "SHL"
    },
    "12054": {
      "op": "SUB"
    },
    "12055": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3772,
        3778
      ],
      "op": "PUSH32",
      "path": "63",
      "value": "0x0"
    },
    "12088": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3772,
        3783
      ],
      "op": "AND",
      "path": "63"
    },
    "12089": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3772,
        3783
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "12090": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3772,
        3783
      ],
      "op": "PUSH4",
      "path": "63",
      "value": "0x40C10F19"
    },
    "12095": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3772,
        3783
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "12096": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3772,
        3798
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x2F4F"
    },
    "12099": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3772,
        3798
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "12100": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3784,
        3789
      ],
      "op": "DUP6",
      "path": "63"
    },
    "12101": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3784,
        3789
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "12102": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3791,
        3797
      ],
      "op": "DUP6",
      "path": "63"
    },
    "12103": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3791,
        3797
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "12104": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3772,
        3798
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "12106": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3772,
        3798
      ],
      "op": "ADD",
      "path": "63"
    },
    "12107": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3772,
        3798
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x3FAF"
    },
    "12110": {
      "fn": "BasicSpell.doPutCollateral",
      "jump": "i",
      "offset": [
        3772,
        3798
      ],
      "op": "JUMP",
      "path": "63"
    },
    "12111": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3772,
        3798
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "12112": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3772,
        3798
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "12114": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3772,
        3798
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "12116": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3772,
        3798
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "12117": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3772,
        3798
      ],
      "op": "DUP1",
      "path": "63"
    },
    "12118": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3772,
        3798
      ],
      "op": "DUP4",
      "path": "63"
    },
    "12119": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3772,
        3798
      ],
      "op": "SUB",
      "path": "63"
    },
    "12120": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3772,
        3798
      ],
      "op": "DUP2",
      "path": "63"
    },
    "12121": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3772,
        3798
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "12123": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3772,
        3798
      ],
      "op": "DUP8",
      "path": "63"
    },
    "12124": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3772,
        3798
      ],
      "op": "DUP1",
      "path": "63"
    },
    "12125": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3772,
        3798
      ],
      "op": "EXTCODESIZE",
      "path": "63"
    },
    "12126": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3772,
        3798
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "12127": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3772,
        3798
      ],
      "op": "DUP1",
      "path": "63"
    },
    "12128": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3772,
        3798
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "12129": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3772,
        3798
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x2F69"
    },
    "12132": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3772,
        3798
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "12133": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3772,
        3798
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "12135": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3772,
        3798
      ],
      "op": "DUP1",
      "path": "63"
    },
    "12136": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3772,
        3798
      ],
      "op": "REVERT",
      "path": "63"
    },
    "12137": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3772,
        3798
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "12138": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3772,
        3798
      ],
      "op": "POP",
      "path": "63"
    },
    "12139": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3772,
        3798
      ],
      "op": "GAS",
      "path": "63"
    },
    "12140": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3772,
        3798
      ],
      "op": "CALL",
      "path": "63"
    },
    "12141": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3772,
        3798
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "12142": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3772,
        3798
      ],
      "op": "DUP1",
      "path": "63"
    },
    "12143": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3772,
        3798
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "12144": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3772,
        3798
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x2F7D"
    },
    "12147": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3772,
        3798
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "12148": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3772,
        3798
      ],
      "op": "RETURNDATASIZE",
      "path": "63"
    },
    "12149": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3772,
        3798
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "12151": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3772,
        3798
      ],
      "op": "DUP1",
      "path": "63"
    },
    "12152": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3772,
        3798
      ],
      "op": "RETURNDATACOPY",
      "path": "63"
    },
    "12153": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3772,
        3798
      ],
      "op": "RETURNDATASIZE",
      "path": "63"
    },
    "12154": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3772,
        3798
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "12156": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3772,
        3798
      ],
      "op": "REVERT",
      "path": "63"
    },
    "12157": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3772,
        3798
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "12158": {
      "op": "POP"
    },
    "12159": {
      "op": "POP"
    },
    "12160": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3806,
        3862
      ],
      "op": "PUSH1",
      "path": "63",
      "statement": 99,
      "value": "0x40"
    },
    "12162": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3806,
        3862
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "12163": {
      "op": "PUSH4",
      "value": "0x314568D9"
    },
    "12168": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12170": {
      "op": "SHL"
    },
    "12171": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3806,
        3862
      ],
      "op": "DUP2",
      "path": "63"
    },
    "12172": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3806,
        3862
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "12173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12177": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12179": {
      "op": "SHL"
    },
    "12180": {
      "op": "SUB"
    },
    "12181": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3806,
        3810
      ],
      "op": "PUSH32",
      "path": "63",
      "value": "0x0"
    },
    "12214": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3806,
        3824
      ],
      "op": "DUP2",
      "path": "63"
    },
    "12215": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3806,
        3824
      ],
      "op": "AND",
      "path": "63"
    },
    "12216": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3806,
        3824
      ],
      "op": "SWAP4",
      "path": "63"
    },
    "12217": {
      "op": "POP"
    },
    "12218": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3806,
        3824
      ],
      "op": "PUSH4",
      "path": "63",
      "value": "0x314568D9"
    },
    "12223": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3806,
        3824
      ],
      "op": "SWAP3",
      "path": "63"
    },
    "12224": {
      "op": "POP"
    },
    "12225": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3806,
        3862
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1DEB"
    },
    "12228": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3806,
        3862
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "12229": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3833,
        3839
      ],
      "op": "PUSH32",
      "path": "63",
      "value": "0x0"
    },
    "12262": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3833,
        3839
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "12263": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3842,
        3853
      ],
      "op": "DUP8",
      "path": "63"
    },
    "12264": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3842,
        3853
      ],
      "op": "AND",
      "path": "63"
    },
    "12265": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3842,
        3853
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "12266": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3855,
        3861
      ],
      "op": "DUP7",
      "path": "63"
    },
    "12267": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3855,
        3861
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "12268": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3806,
        3862
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "12270": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3806,
        3862
      ],
      "op": "ADD",
      "path": "63"
    },
    "12271": {
      "fn": "BasicSpell.doPutCollateral",
      "offset": [
        3806,
        3862
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x3FC8"
    },
    "12274": {
      "fn": "BasicSpell.doPutCollateral",
      "jump": "i",
      "offset": [
        3806,
        3862
      ],
      "op": "JUMP",
      "path": "63"
    },
    "12275": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2446,
        2728
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "12276": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "12278": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "12279": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "12284": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12286": {
      "op": "SHL"
    },
    "12287": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "DUP2",
      "path": "63"
    },
    "12288": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "12289": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2484,
        2496
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "12291": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2484,
        2496
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "12292": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12294": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12296": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12298": {
      "op": "SHL"
    },
    "12299": {
      "op": "SUB"
    },
    "12300": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2505,
        2509
      ],
      "op": "PUSH32",
      "path": "63",
      "value": "0x0"
    },
    "12333": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2520
      ],
      "op": "AND",
      "path": "63"
    },
    "12334": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2520
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "12335": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2520
      ],
      "op": "PUSH4",
      "path": "63",
      "value": "0x70A08231"
    },
    "12340": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2520
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "12341": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x3042"
    },
    "12344": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "12345": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2529,
        2533
      ],
      "op": "ADDRESS",
      "path": "63"
    },
    "12346": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2529,
        2533
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "12347": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "12349": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "ADD",
      "path": "63"
    },
    "12350": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x3EF8"
    },
    "12353": {
      "fn": "BasicSpell.doRefundETH",
      "jump": "i",
      "offset": [
        2499,
        2535
      ],
      "op": "JUMP",
      "path": "63"
    },
    "12354": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "12355": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "12357": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "12359": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "12360": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "DUP1",
      "path": "63"
    },
    "12361": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "DUP4",
      "path": "63"
    },
    "12362": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "SUB",
      "path": "63"
    },
    "12363": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "DUP2",
      "path": "63"
    },
    "12364": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "12366": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "DUP8",
      "path": "63"
    },
    "12367": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "DUP1",
      "path": "63"
    },
    "12368": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "EXTCODESIZE",
      "path": "63"
    },
    "12369": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "12370": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "DUP1",
      "path": "63"
    },
    "12371": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "12372": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x305C"
    },
    "12375": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "12376": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "12378": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "DUP1",
      "path": "63"
    },
    "12379": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "REVERT",
      "path": "63"
    },
    "12380": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "12381": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "POP",
      "path": "63"
    },
    "12382": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "GAS",
      "path": "63"
    },
    "12383": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "CALL",
      "path": "63"
    },
    "12384": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "12385": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "DUP1",
      "path": "63"
    },
    "12386": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "12387": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x3070"
    },
    "12390": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "12391": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "RETURNDATASIZE",
      "path": "63"
    },
    "12392": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "12394": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "DUP1",
      "path": "63"
    },
    "12395": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "RETURNDATACOPY",
      "path": "63"
    },
    "12396": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "RETURNDATASIZE",
      "path": "63"
    },
    "12397": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "12399": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "REVERT",
      "path": "63"
    },
    "12400": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "12401": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "POP",
      "path": "63"
    },
    "12402": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "POP",
      "path": "63"
    },
    "12403": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "POP",
      "path": "63"
    },
    "12404": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "POP",
      "path": "63"
    },
    "12405": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "12407": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "12408": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "RETURNDATASIZE",
      "path": "63"
    },
    "12409": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x1F"
    },
    "12411": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "NOT",
      "path": "63"
    },
    "12412": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x1F"
    },
    "12414": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "DUP3",
      "path": "63"
    },
    "12415": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "ADD",
      "path": "63"
    },
    "12416": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "AND",
      "path": "63"
    },
    "12417": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "DUP3",
      "path": "63"
    },
    "12418": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "ADD",
      "path": "63"
    },
    "12419": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "DUP1",
      "path": "63"
    },
    "12420": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "12422": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "12423": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "POP",
      "path": "63"
    },
    "12424": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "DUP2",
      "path": "63"
    },
    "12425": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "ADD",
      "path": "63"
    },
    "12426": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "12427": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x3094"
    },
    "12430": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "12431": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "12432": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x3E31"
    },
    "12435": {
      "fn": "BasicSpell.doRefundETH",
      "jump": "i",
      "offset": [
        2499,
        2535
      ],
      "op": "JUMP",
      "path": "63"
    },
    "12436": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2499,
        2535
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "12437": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2484,
        2535
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "12438": {
      "op": "POP"
    },
    "12439": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2545,
        2556
      ],
      "op": "DUP1",
      "path": "63"
    },
    "12440": {
      "branch": 191,
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2545,
        2556
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "12441": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2541,
        2724
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x3239"
    },
    "12444": {
      "branch": 191,
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2541,
        2724
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "12445": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2566,
        2595
      ],
      "op": "PUSH1",
      "path": "63",
      "statement": 100,
      "value": "0x40"
    },
    "12447": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2566,
        2595
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "12448": {
      "op": "PUSH4",
      "value": "0x2E1A7D4D"
    },
    "12453": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12455": {
      "op": "SHL"
    },
    "12456": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2566,
        2595
      ],
      "op": "DUP2",
      "path": "63"
    },
    "12457": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2566,
        2595
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "12458": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12460": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12462": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12464": {
      "op": "SHL"
    },
    "12465": {
      "op": "SUB"
    },
    "12466": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2572,
        2576
      ],
      "op": "PUSH32",
      "path": "63",
      "value": "0x0"
    },
    "12499": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2566,
        2586
      ],
      "op": "AND",
      "path": "63"
    },
    "12500": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2566,
        2586
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "12501": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2566,
        2586
      ],
      "op": "PUSH4",
      "path": "63",
      "value": "0x2E1A7D4D"
    },
    "12506": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2566,
        2586
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "12507": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2566,
        2595
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x30E8"
    },
    "12510": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2566,
        2595
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "12511": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2587,
        2594
      ],
      "op": "DUP5",
      "path": "63"
    },
    "12512": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2587,
        2594
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "12513": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2566,
        2595
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "12515": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2566,
        2595
      ],
      "op": "ADD",
      "path": "63"
    },
    "12516": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2566,
        2595
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x450A"
    },
    "12519": {
      "fn": "BasicSpell.doRefundETH",
      "jump": "i",
      "offset": [
        2566,
        2595
      ],
      "op": "JUMP",
      "path": "63"
    },
    "12520": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2566,
        2595
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "12521": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2566,
        2595
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "12523": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2566,
        2595
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "12525": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2566,
        2595
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "12526": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2566,
        2595
      ],
      "op": "DUP1",
      "path": "63"
    },
    "12527": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2566,
        2595
      ],
      "op": "DUP4",
      "path": "63"
    },
    "12528": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2566,
        2595
      ],
      "op": "SUB",
      "path": "63"
    },
    "12529": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2566,
        2595
      ],
      "op": "DUP2",
      "path": "63"
    },
    "12530": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2566,
        2595
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "12532": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2566,
        2595
      ],
      "op": "DUP8",
      "path": "63"
    },
    "12533": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2566,
        2595
      ],
      "op": "DUP1",
      "path": "63"
    },
    "12534": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2566,
        2595
      ],
      "op": "EXTCODESIZE",
      "path": "63"
    },
    "12535": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2566,
        2595
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "12536": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2566,
        2595
      ],
      "op": "DUP1",
      "path": "63"
    },
    "12537": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2566,
        2595
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "12538": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2566,
        2595
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x3102"
    },
    "12541": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2566,
        2595
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "12542": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2566,
        2595
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "12544": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2566,
        2595
      ],
      "op": "DUP1",
      "path": "63"
    },
    "12545": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2566,
        2595
      ],
      "op": "REVERT",
      "path": "63"
    },
    "12546": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2566,
        2595
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "12547": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2566,
        2595
      ],
      "op": "POP",
      "path": "63"
    },
    "12548": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2566,
        2595
      ],
      "op": "GAS",
      "path": "63"
    },
    "12549": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2566,
        2595
      ],
      "op": "CALL",
      "path": "63"
    },
    "12550": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2566,
        2595
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "12551": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2566,
        2595
      ],
      "op": "DUP1",
      "path": "63"
    },
    "12552": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2566,
        2595
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "12553": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2566,
        2595
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x3116"
    },
    "12556": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2566,
        2595
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "12557": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2566,
        2595
      ],
      "op": "RETURNDATASIZE",
      "path": "63"
    },
    "12558": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2566,
        2595
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "12560": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2566,
        2595
      ],
      "op": "DUP1",
      "path": "63"
    },
    "12561": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2566,
        2595
      ],
      "op": "RETURNDATACOPY",
      "path": "63"
    },
    "12562": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2566,
        2595
      ],
      "op": "RETURNDATASIZE",
      "path": "63"
    },
    "12563": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2566,
        2595
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "12565": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2566,
        2595
      ],
      "op": "REVERT",
      "path": "63"
    },
    "12566": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2566,
        2595
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "12567": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2566,
        2595
      ],
      "op": "POP",
      "path": "63"
    },
    "12568": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2566,
        2595
      ],
      "op": "POP",
      "path": "63"
    },
    "12569": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2566,
        2595
      ],
      "op": "POP",
      "path": "63"
    },
    "12570": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2566,
        2595
      ],
      "op": "POP",
      "path": "63"
    },
    "12571": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2604,
        2616
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "12573": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2626
      ],
      "op": "PUSH32",
      "path": "63",
      "value": "0x0"
    },
    "12606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12610": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12612": {
      "op": "SHL"
    },
    "12613": {
      "op": "SUB"
    },
    "12614": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2635
      ],
      "op": "AND",
      "path": "63"
    },
    "12615": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2635
      ],
      "op": "PUSH4",
      "path": "63",
      "value": "0x630DC7CB"
    },
    "12620": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "12622": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "12623": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "DUP2",
      "path": "63"
    },
    "12624": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "PUSH4",
      "path": "63",
      "value": "0xFFFFFFFF"
    },
    "12629": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "AND",
      "path": "63"
    },
    "12630": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0xE0"
    },
    "12632": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "SHL",
      "path": "63"
    },
    "12633": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "DUP2",
      "path": "63"
    },
    "12634": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "12635": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "12637": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "ADD",
      "path": "63"
    },
    "12638": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "12640": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "12642": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "12643": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "DUP1",
      "path": "63"
    },
    "12644": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "DUP4",
      "path": "63"
    },
    "12645": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "SUB",
      "path": "63"
    },
    "12646": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "DUP2",
      "path": "63"
    },
    "12647": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "DUP7",
      "path": "63"
    },
    "12648": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "DUP1",
      "path": "63"
    },
    "12649": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "EXTCODESIZE",
      "path": "63"
    },
    "12650": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "12651": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "DUP1",
      "path": "63"
    },
    "12652": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "12653": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x3175"
    },
    "12656": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "12657": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "12659": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "DUP1",
      "path": "63"
    },
    "12660": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "REVERT",
      "path": "63"
    },
    "12661": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "12662": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "POP",
      "path": "63"
    },
    "12663": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "GAS",
      "path": "63"
    },
    "12664": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "STATICCALL",
      "path": "63"
    },
    "12665": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "12666": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "DUP1",
      "path": "63"
    },
    "12667": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "12668": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x3189"
    },
    "12671": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "12672": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "RETURNDATASIZE",
      "path": "63"
    },
    "12673": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "12675": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "DUP1",
      "path": "63"
    },
    "12676": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "RETURNDATACOPY",
      "path": "63"
    },
    "12677": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "RETURNDATASIZE",
      "path": "63"
    },
    "12678": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "12680": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "REVERT",
      "path": "63"
    },
    "12681": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "12682": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "POP",
      "path": "63"
    },
    "12683": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "POP",
      "path": "63"
    },
    "12684": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "POP",
      "path": "63"
    },
    "12685": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "POP",
      "path": "63"
    },
    "12686": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "12688": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "12689": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "RETURNDATASIZE",
      "path": "63"
    },
    "12690": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x1F"
    },
    "12692": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "NOT",
      "path": "63"
    },
    "12693": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x1F"
    },
    "12695": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "DUP3",
      "path": "63"
    },
    "12696": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "ADD",
      "path": "63"
    },
    "12697": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "AND",
      "path": "63"
    },
    "12698": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "DUP3",
      "path": "63"
    },
    "12699": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "ADD",
      "path": "63"
    },
    "12700": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "DUP1",
      "path": "63"
    },
    "12701": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "12703": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "12704": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "POP",
      "path": "63"
    },
    "12705": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "DUP2",
      "path": "63"
    },
    "12706": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "ADD",
      "path": "63"
    },
    "12707": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "12708": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x31AD"
    },
    "12711": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "12712": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "12713": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x3986"
    },
    "12716": {
      "fn": "BasicSpell.doRefundETH",
      "jump": "i",
      "offset": [
        2622,
        2637
      ],
      "op": "JUMP",
      "path": "63"
    },
    "12717": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2637
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "12718": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2659,
        2671
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "12720": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2659,
        2671
      ],
      "op": "DUP1",
      "path": "63"
    },
    "12721": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2659,
        2671
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "12722": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2669,
        2670
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "12724": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2659,
        2671
      ],
      "op": "DUP2",
      "path": "63"
    },
    "12725": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2659,
        2671
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "12726": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2659,
        2671
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "12728": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2659,
        2671
      ],
      "op": "DUP2",
      "path": "63"
    },
    "12729": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2659,
        2671
      ],
      "op": "ADD",
      "path": "63"
    },
    "12730": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2659,
        2671
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "12731": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2659,
        2671
      ],
      "op": "DUP3",
      "path": "63"
    },
    "12732": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2659,
        2671
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "12733": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2659,
        2671
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "12734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12738": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12740": {
      "op": "SHL"
    },
    "12741": {
      "op": "SUB"
    },
    "12742": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2642
      ],
      "op": "SWAP3",
      "path": "63"
    },
    "12743": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2642
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "12744": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2642
      ],
      "op": "SWAP3",
      "path": "63"
    },
    "12745": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2642
      ],
      "op": "AND",
      "path": "63"
    },
    "12746": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2642
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "12747": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2650,
        2657
      ],
      "op": "DUP5",
      "path": "63"
    },
    "12748": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2650,
        2657
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "12749": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x31D6"
    },
    "12752": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "12753": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2659,
        2671
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "12754": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x3EDC"
    },
    "12757": {
      "fn": "BasicSpell.doRefundETH",
      "jump": "i",
      "offset": [
        2622,
        2672
      ],
      "op": "JUMP",
      "path": "63"
    },
    "12758": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "12759": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "12761": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "12763": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "12764": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "DUP1",
      "path": "63"
    },
    "12765": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "DUP4",
      "path": "63"
    },
    "12766": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "SUB",
      "path": "63"
    },
    "12767": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "DUP2",
      "path": "63"
    },
    "12768": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "DUP6",
      "path": "63"
    },
    "12769": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "DUP8",
      "path": "63"
    },
    "12770": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "GAS",
      "path": "63"
    },
    "12771": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "CALL",
      "path": "63"
    },
    "12772": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "SWAP3",
      "path": "63"
    },
    "12773": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "POP",
      "path": "63"
    },
    "12774": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "POP",
      "path": "63"
    },
    "12775": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "POP",
      "path": "63"
    },
    "12776": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "RETURNDATASIZE",
      "path": "63"
    },
    "12777": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "DUP1",
      "path": "63"
    },
    "12778": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "12780": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "DUP2",
      "path": "63"
    },
    "12781": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "EQ",
      "path": "63"
    },
    "12782": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x3213"
    },
    "12785": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "12786": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "12788": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "12789": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "12790": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "POP",
      "path": "63"
    },
    "12791": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x1F"
    },
    "12793": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "NOT",
      "path": "63"
    },
    "12794": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x3F"
    },
    "12796": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "RETURNDATASIZE",
      "path": "63"
    },
    "12797": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "ADD",
      "path": "63"
    },
    "12798": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "AND",
      "path": "63"
    },
    "12799": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "DUP3",
      "path": "63"
    },
    "12800": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "ADD",
      "path": "63"
    },
    "12801": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "12803": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "12804": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "RETURNDATASIZE",
      "path": "63"
    },
    "12805": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "DUP3",
      "path": "63"
    },
    "12806": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "12807": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "RETURNDATASIZE",
      "path": "63"
    },
    "12808": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "12810": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "12812": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "DUP5",
      "path": "63"
    },
    "12813": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "ADD",
      "path": "63"
    },
    "12814": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "RETURNDATACOPY",
      "path": "63"
    },
    "12815": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x3218"
    },
    "12818": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "JUMP",
      "path": "63"
    },
    "12819": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "12820": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x60"
    },
    "12822": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "12823": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "POP",
      "path": "63"
    },
    "12824": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "12825": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2622,
        2672
      ],
      "op": "POP",
      "path": "63"
    },
    "12826": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2603,
        2672
      ],
      "op": "POP",
      "path": "63"
    },
    "12827": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2603,
        2672
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "12828": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2603,
        2672
      ],
      "op": "POP",
      "path": "63"
    },
    "12829": {
      "branch": 192,
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2688,
        2695
      ],
      "op": "DUP1",
      "path": "63",
      "statement": 101
    },
    "12830": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2680,
        2717
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1E19"
    },
    "12833": {
      "branch": 192,
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2680,
        2717
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "12834": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2680,
        2717
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "12836": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2680,
        2717
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "12837": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12841": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12843": {
      "op": "SHL"
    },
    "12844": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2680,
        2717
      ],
      "op": "DUP2",
      "path": "63"
    },
    "12845": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2680,
        2717
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "12846": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2680,
        2717
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "12848": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2680,
        2717
      ],
      "op": "ADD",
      "path": "63"
    },
    "12849": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2680,
        2717
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x19C"
    },
    "12852": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2680,
        2717
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "12853": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2680,
        2717
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x403C"
    },
    "12856": {
      "fn": "BasicSpell.doRefundETH",
      "jump": "i",
      "offset": [
        2680,
        2717
      ],
      "op": "JUMP",
      "path": "63"
    },
    "12857": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2541,
        2724
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "12858": {
      "fn": "BasicSpell.doRefundETH",
      "offset": [
        2446,
        2728
      ],
      "op": "POP",
      "path": "63"
    },
    "12859": {
      "fn": "BasicSpell.doRefundETH",
      "jump": "o",
      "offset": [
        2446,
        2728
      ],
      "op": "JUMP",
      "path": "63"
    },
    "12860": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        2967,
        3718
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "12861": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3386,
        3409
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "12863": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3291"
    },
    "12866": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3440,
        3444
      ],
      "op": "DUP3",
      "path": "20"
    },
    "12867": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "12869": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "12870": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12871": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "12873": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "ADD",
      "path": "20"
    },
    "12874": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "12876": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "12877": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12878": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "12880": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12881": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "12882": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "12884": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "ADD",
      "path": "20"
    },
    "12885": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "12918": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12919": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "12920": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "POP",
      "path": "20"
    },
    "12921": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3420,
        3425
      ],
      "op": "DUP6",
      "path": "20"
    },
    "12922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12926": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12928": {
      "op": "SHL"
    },
    "12929": {
      "op": "SUB"
    },
    "12930": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3439
      ],
      "op": "AND",
      "path": "20"
    },
    "12931": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3439
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1C39"
    },
    "12934": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3439
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12935": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "12936": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "12937": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12938": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "12943": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "AND",
      "path": "20"
    },
    "12944": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3412,
        3481
      ],
      "op": "JUMP",
      "path": "20"
    },
    "12945": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "12946": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3495,
        3512
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12947": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3495,
        3512
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "12948": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3386,
        3481
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12949": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3386,
        3481
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "12950": {
      "op": "POP"
    },
    "12951": {
      "branch": 207,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3495,
        3516
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "12952": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3491,
        3712
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1C2E"
    },
    "12955": {
      "branch": 207,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3491,
        3712
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "12956": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3635,
        3645
      ],
      "op": "DUP1",
      "path": "20",
      "statement": 102
    },
    "12957": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12958": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "12960": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "ADD",
      "path": "20"
    },
    "12961": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12962": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "12963": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12964": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "ADD",
      "path": "20"
    },
    "12965": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12966": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x32AF"
    },
    "12969": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "12970": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12971": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3D99"
    },
    "12974": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3624,
        3654
      ],
      "op": "JUMP",
      "path": "20"
    },
    "12975": {
      "branch": 208,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "12976": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1C2E"
    },
    "12979": {
      "branch": 208,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "12980": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "12982": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "12983": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12987": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12989": {
      "op": "SHL"
    },
    "12990": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12991": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "12992": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "12994": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "ADD",
      "path": "20"
    },
    "12995": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x19C"
    },
    "12998": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12999": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x446A"
    },
    "13002": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3616,
        3701
      ],
      "op": "JUMP",
      "path": "20"
    },
    "13003": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4608,
        5131
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "13004": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4735,
        4747
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x60"
    },
    "13006": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4792,
        4797
      ],
      "op": "DUP3",
      "path": "21",
      "statement": 103
    },
    "13007": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4767,
        4788
      ],
      "op": "SELFBALANCE",
      "path": "21"
    },
    "13008": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4767,
        4797
      ],
      "op": "LT",
      "path": "21"
    },
    "13009": {
      "branch": 181,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4767,
        4797
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "13010": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x32ED"
    },
    "13013": {
      "branch": 181,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "13014": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "13016": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "13017": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13021": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13023": {
      "op": "SHL"
    },
    "13024": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP2",
      "path": "21"
    },
    "13025": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "13026": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "13028": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "ADD",
      "path": "21"
    },
    "13029": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x19C"
    },
    "13032": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "13033": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x4165"
    },
    "13036": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        4759,
        4840
      ],
      "op": "JUMP",
      "path": "21"
    },
    "13037": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "13038": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4858,
        4876
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 104,
      "value": "0x32F6"
    },
    "13041": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4869,
        4875
      ],
      "op": "DUP6",
      "path": "21"
    },
    "13042": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4858,
        4868
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1C33"
    },
    "13045": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        4858,
        4876
      ],
      "op": "JUMP",
      "path": "21"
    },
    "13046": {
      "branch": 182,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4858,
        4876
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "13047": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x3312"
    },
    "13050": {
      "branch": 182,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "13051": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "13053": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "13054": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13058": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13060": {
      "op": "SHL"
    },
    "13061": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "DUP2",
      "path": "21"
    },
    "13062": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "13063": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "13065": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "ADD",
      "path": "21"
    },
    "13066": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x19C"
    },
    "13069": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "13070": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x4405"
    },
    "13073": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        4850,
        4910
      ],
      "op": "JUMP",
      "path": "21"
    },
    "13074": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "13075": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4981,
        4993
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "13077": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4995,
        5018
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x60"
    },
    "13079": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5028
      ],
      "op": "DUP7",
      "path": "21"
    },
    "13080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13082": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13084": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13086": {
      "op": "SHL"
    },
    "13087": {
      "op": "SUB"
    },
    "13088": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5033
      ],
      "op": "AND",
      "path": "21"
    },
    "13089": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5042,
        5047
      ],
      "op": "DUP6",
      "path": "21"
    },
    "13090": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5050,
        5054
      ],
      "op": "DUP8",
      "path": "21"
    },
    "13091": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "13093": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "13094": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x332F"
    },
    "13097": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "13098": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "13099": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x3EDC"
    },
    "13102": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMP",
      "path": "21"
    },
    "13103": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "13104": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "13106": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "13108": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "13109": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "21"
    },
    "13110": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP4",
      "path": "21"
    },
    "13111": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SUB",
      "path": "21"
    },
    "13112": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP2",
      "path": "21"
    },
    "13113": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP6",
      "path": "21"
    },
    "13114": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP8",
      "path": "21"
    },
    "13115": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "GAS",
      "path": "21"
    },
    "13116": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "CALL",
      "path": "21"
    },
    "13117": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "13118": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "21"
    },
    "13119": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "21"
    },
    "13120": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "21"
    },
    "13121": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "RETURNDATASIZE",
      "path": "21"
    },
    "13122": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "21"
    },
    "13123": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "13125": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP2",
      "path": "21"
    },
    "13126": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "EQ",
      "path": "21"
    },
    "13127": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x336C"
    },
    "13130": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "13131": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "13133": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "13134": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "13135": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "21"
    },
    "13136": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1F"
    },
    "13138": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "NOT",
      "path": "21"
    },
    "13139": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x3F"
    },
    "13141": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "RETURNDATASIZE",
      "path": "21"
    },
    "13142": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "21"
    },
    "13143": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "AND",
      "path": "21"
    },
    "13144": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "21"
    },
    "13145": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "21"
    },
    "13146": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "13148": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "13149": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "RETURNDATASIZE",
      "path": "21"
    },
    "13150": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "21"
    },
    "13151": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "13152": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "RETURNDATASIZE",
      "path": "21"
    },
    "13153": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "13155": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "13157": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP5",
      "path": "21"
    },
    "13158": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "21"
    },
    "13159": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "RETURNDATACOPY",
      "path": "21"
    },
    "13160": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x3371"
    },
    "13163": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMP",
      "path": "21"
    },
    "13164": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "13165": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x60"
    },
    "13167": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "13168": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "21"
    },
    "13169": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "13170": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "21"
    },
    "13171": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4980,
        5055
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "13172": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4980,
        5055
      ],
      "op": "POP",
      "path": "21"
    },
    "13173": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4980,
        5055
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "13174": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4980,
        5055
      ],
      "op": "POP",
      "path": "21"
    },
    "13175": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5072,
        5124
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 105,
      "value": "0x3381"
    },
    "13178": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5090,
        5097
      ],
      "op": "DUP3",
      "path": "21"
    },
    "13179": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5099,
        5109
      ],
      "op": "DUP3",
      "path": "21"
    },
    "13180": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5111,
        5123
      ],
      "op": "DUP7",
      "path": "21"
    },
    "13181": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5072,
        5089
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x35E4"
    },
    "13184": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5072,
        5124
      ],
      "op": "JUMP",
      "path": "21"
    },
    "13185": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5072,
        5124
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "13186": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5065,
        5124
      ],
      "op": "SWAP8",
      "path": "21"
    },
    "13187": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4608,
        5131
      ],
      "op": "SWAP7",
      "path": "21"
    },
    "13188": {
      "op": "POP"
    },
    "13189": {
      "op": "POP"
    },
    "13190": {
      "op": "POP"
    },
    "13191": {
      "op": "POP"
    },
    "13192": {
      "op": "POP"
    },
    "13193": {
      "op": "POP"
    },
    "13194": {
      "op": "POP"
    },
    "13195": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4608,
        5131
      ],
      "op": "JUMP",
      "path": "21"
    },
    "13196": {
      "fn": "SafeMath.sub",
      "offset": [
        3136,
        3291
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "13197": {
      "fn": "SafeMath.sub",
      "offset": [
        3194,
        3201
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "13199": {
      "fn": "SafeMath.sub",
      "offset": [
        3226,
        3227
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 106
    },
    "13200": {
      "fn": "SafeMath.sub",
      "offset": [
        3221,
        3222
      ],
      "op": "DUP3",
      "path": "7"
    },
    "13201": {
      "fn": "SafeMath.sub",
      "offset": [
        3221,
        3227
      ],
      "op": "GT",
      "path": "7"
    },
    "13202": {
      "branch": 209,
      "fn": "SafeMath.sub",
      "offset": [
        3221,
        3227
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "13203": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x33AE"
    },
    "13206": {
      "branch": 209,
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "13207": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "13209": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "13210": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13214": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13216": {
      "op": "SHL"
    },
    "13217": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP2",
      "path": "7"
    },
    "13218": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "13219": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "13221": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "ADD",
      "path": "7"
    },
    "13222": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x19C"
    },
    "13225": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "13226": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x412E"
    },
    "13229": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        3213,
        3262
      ],
      "op": "JUMP",
      "path": "7"
    },
    "13230": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "13231": {
      "op": "POP"
    },
    "13232": {
      "fn": "SafeMath.sub",
      "offset": [
        3279,
        3284
      ],
      "op": "SWAP1",
      "path": "7",
      "statement": 107
    },
    "13233": {
      "fn": "SafeMath.sub",
      "offset": [
        3279,
        3284
      ],
      "op": "SUB",
      "path": "7"
    },
    "13234": {
      "fn": "SafeMath.sub",
      "offset": [
        3279,
        3284
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "13235": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        3136,
        3291
      ],
      "op": "JUMP",
      "path": "7"
    },
    "13236": {
      "fn": "SafeMath.add",
      "offset": [
        2690,
        2865
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "13237": {
      "fn": "SafeMath.add",
      "offset": [
        2748,
        2755
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "13239": {
      "fn": "SafeMath.add",
      "offset": [
        2779,
        2784
      ],
      "op": "DUP3",
      "path": "7"
    },
    "13240": {
      "fn": "SafeMath.add",
      "offset": [
        2779,
        2784
      ],
      "op": "DUP3",
      "path": "7"
    },
    "13241": {
      "fn": "SafeMath.add",
      "offset": [
        2779,
        2784
      ],
      "op": "ADD",
      "path": "7"
    },
    "13242": {
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "DUP4",
      "path": "7",
      "statement": 108
    },
    "13243": {
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "DUP2",
      "path": "7"
    },
    "13244": {
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "LT",
      "path": "7"
    },
    "13245": {
      "branch": 210,
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "13246": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x697"
    },
    "13249": {
      "branch": 210,
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "13250": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "13252": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "13253": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13257": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13259": {
      "op": "SHL"
    },
    "13260": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP2",
      "path": "7"
    },
    "13261": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "13262": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "13264": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "ADD",
      "path": "7"
    },
    "13265": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x19C"
    },
    "13268": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "13269": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x40C0"
    },
    "13272": {
      "fn": "SafeMath.add",
      "jump": "i",
      "offset": [
        2794,
        2840
      ],
      "op": "JUMP",
      "path": "7"
    },
    "13273": {
      "fn": "BasicSpell.doRepay",
      "offset": [
        3305,
        3468
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "13274": {
      "fn": "BasicSpell.doRepay",
      "offset": [
        3369,
        3379
      ],
      "op": "DUP1",
      "path": "63"
    },
    "13275": {
      "branch": 193,
      "fn": "BasicSpell.doRepay",
      "offset": [
        3369,
        3379
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "13276": {
      "fn": "BasicSpell.doRepay",
      "offset": [
        3365,
        3464
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1E19"
    },
    "13279": {
      "branch": 193,
      "fn": "BasicSpell.doRepay",
      "offset": [
        3365,
        3464
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "13280": {
      "fn": "BasicSpell.doRepay",
      "offset": [
        3389,
        3424
      ],
      "op": "PUSH2",
      "path": "63",
      "statement": 109,
      "value": "0x3409"
    },
    "13283": {
      "fn": "BasicSpell.doRepay",
      "offset": [
        3403,
        3408
      ],
      "op": "DUP3",
      "path": "63"
    },
    "13284": {
      "fn": "BasicSpell.doRepay",
      "offset": [
        3418,
        3422
      ],
      "op": "PUSH32",
      "path": "63",
      "value": "0x0"
    },
    "13317": {
      "fn": "BasicSpell.doRepay",
      "offset": [
        3389,
        3402
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x26B8"
    },
    "13320": {
      "fn": "BasicSpell.doRepay",
      "jump": "i",
      "offset": [
        3389,
        3424
      ],
      "op": "JUMP",
      "path": "63"
    },
    "13321": {
      "fn": "BasicSpell.doRepay",
      "offset": [
        3389,
        3424
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "13322": {
      "fn": "BasicSpell.doRepay",
      "offset": [
        3432,
        3457
      ],
      "op": "PUSH1",
      "path": "63",
      "statement": 110,
      "value": "0x40"
    },
    "13324": {
      "fn": "BasicSpell.doRepay",
      "offset": [
        3432,
        3457
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "13325": {
      "op": "PUSH4",
      "value": "0x450CFAF"
    },
    "13330": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "13332": {
      "op": "SHL"
    },
    "13333": {
      "fn": "BasicSpell.doRepay",
      "offset": [
        3432,
        3457
      ],
      "op": "DUP2",
      "path": "63"
    },
    "13334": {
      "fn": "BasicSpell.doRepay",
      "offset": [
        3432,
        3457
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "13335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13339": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13341": {
      "op": "SHL"
    },
    "13342": {
      "op": "SUB"
    },
    "13343": {
      "fn": "BasicSpell.doRepay",
      "offset": [
        3432,
        3436
      ],
      "op": "PUSH32",
      "path": "63",
      "value": "0x0"
    },
    "13376": {
      "fn": "BasicSpell.doRepay",
      "offset": [
        3432,
        3442
      ],
      "op": "AND",
      "path": "63"
    },
    "13377": {
      "fn": "BasicSpell.doRepay",
      "offset": [
        3432,
        3442
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "13378": {
      "fn": "BasicSpell.doRepay",
      "offset": [
        3432,
        3442
      ],
      "op": "PUSH4",
      "path": "63",
      "value": "0x22867D78"
    },
    "13383": {
      "fn": "BasicSpell.doRepay",
      "offset": [
        3432,
        3442
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "13384": {
      "fn": "BasicSpell.doRepay",
      "offset": [
        3432,
        3457
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1DEB"
    },
    "13387": {
      "fn": "BasicSpell.doRepay",
      "offset": [
        3432,
        3457
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "13388": {
      "fn": "BasicSpell.doRepay",
      "offset": [
        3443,
        3448
      ],
      "op": "DUP6",
      "path": "63"
    },
    "13389": {
      "fn": "BasicSpell.doRepay",
      "offset": [
        3443,
        3448
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "13390": {
      "fn": "BasicSpell.doRepay",
      "offset": [
        3450,
        3456
      ],
      "op": "DUP6",
      "path": "63"
    },
    "13391": {
      "fn": "BasicSpell.doRepay",
      "offset": [
        3450,
        3456
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "13392": {
      "fn": "BasicSpell.doRepay",
      "offset": [
        3432,
        3457
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "13394": {
      "fn": "BasicSpell.doRepay",
      "offset": [
        3432,
        3457
      ],
      "op": "ADD",
      "path": "63"
    },
    "13395": {
      "fn": "BasicSpell.doRepay",
      "offset": [
        3432,
        3457
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x3FAF"
    },
    "13398": {
      "fn": "BasicSpell.doRepay",
      "jump": "i",
      "offset": [
        3432,
        3457
      ],
      "op": "JUMP",
      "path": "63"
    },
    "13399": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        704,
        879
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13400": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        786,
        872
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 111,
      "value": "0x1C2E"
    },
    "13403": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        806,
        811
      ],
      "op": "DUP4",
      "path": "20"
    },
    "13404": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        836,
        859
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xA9059CBB"
    },
    "13409": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        836,
        859
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE0"
    },
    "13411": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        836,
        859
      ],
      "op": "SHL",
      "path": "20"
    },
    "13412": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        861,
        863
      ],
      "op": "DUP5",
      "path": "20"
    },
    "13413": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        865,
        870
      ],
      "op": "DUP5",
      "path": "20"
    },
    "13414": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "13416": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "13417": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "13419": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "ADD",
      "path": "20"
    },
    "13420": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1BF7"
    },
    "13423": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "13424": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "13425": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13426": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3FAF"
    },
    "13429": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [
        813,
        871
      ],
      "op": "JUMP",
      "path": "20"
    },
    "13430": {
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1516,
        1633
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "13431": {
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1560,
        1569
      ],
      "op": "CALLVALUE",
      "path": "63"
    },
    "13432": {
      "branch": 194,
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1560,
        1573
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "13433": {
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1556,
        1629
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x34EB"
    },
    "13436": {
      "branch": 194,
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1556,
        1629
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "13437": {
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1589,
        1593
      ],
      "op": "PUSH32",
      "path": "63",
      "statement": 112,
      "value": "0x0"
    },
    "13470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13474": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13476": {
      "op": "SHL"
    },
    "13477": {
      "op": "SUB"
    },
    "13478": {
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1583,
        1602
      ],
      "op": "AND",
      "path": "63"
    },
    "13479": {
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1583,
        1602
      ],
      "op": "PUSH4",
      "path": "63",
      "value": "0xD0E30DB0"
    },
    "13484": {
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1610,
        1619
      ],
      "op": "CALLVALUE",
      "path": "63"
    },
    "13485": {
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1583,
        1622
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "13487": {
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1583,
        1622
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "13488": {
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1583,
        1622
      ],
      "op": "DUP3",
      "path": "63"
    },
    "13489": {
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1583,
        1622
      ],
      "op": "PUSH4",
      "path": "63",
      "value": "0xFFFFFFFF"
    },
    "13494": {
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1583,
        1622
      ],
      "op": "AND",
      "path": "63"
    },
    "13495": {
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1583,
        1622
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0xE0"
    },
    "13497": {
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1583,
        1622
      ],
      "op": "SHL",
      "path": "63"
    },
    "13498": {
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1583,
        1622
      ],
      "op": "DUP2",
      "path": "63"
    },
    "13499": {
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1583,
        1622
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "13500": {
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1583,
        1622
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "13502": {
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1583,
        1622
      ],
      "op": "ADD",
      "path": "63"
    },
    "13503": {
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1583,
        1622
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "13505": {
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1583,
        1622
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "13507": {
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1583,
        1622
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "13508": {
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1583,
        1622
      ],
      "op": "DUP1",
      "path": "63"
    },
    "13509": {
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1583,
        1622
      ],
      "op": "DUP4",
      "path": "63"
    },
    "13510": {
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1583,
        1622
      ],
      "op": "SUB",
      "path": "63"
    },
    "13511": {
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1583,
        1622
      ],
      "op": "DUP2",
      "path": "63"
    },
    "13512": {
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1583,
        1622
      ],
      "op": "DUP6",
      "path": "63"
    },
    "13513": {
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1583,
        1622
      ],
      "op": "DUP9",
      "path": "63"
    },
    "13514": {
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1583,
        1622
      ],
      "op": "DUP1",
      "path": "63"
    },
    "13515": {
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1583,
        1622
      ],
      "op": "EXTCODESIZE",
      "path": "63"
    },
    "13516": {
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1583,
        1622
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "13517": {
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1583,
        1622
      ],
      "op": "DUP1",
      "path": "63"
    },
    "13518": {
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1583,
        1622
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "13519": {
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1583,
        1622
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x34D7"
    },
    "13522": {
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1583,
        1622
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "13523": {
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1583,
        1622
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "13525": {
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1583,
        1622
      ],
      "op": "DUP1",
      "path": "63"
    },
    "13526": {
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1583,
        1622
      ],
      "op": "REVERT",
      "path": "63"
    },
    "13527": {
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1583,
        1622
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "13528": {
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1583,
        1622
      ],
      "op": "POP",
      "path": "63"
    },
    "13529": {
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1583,
        1622
      ],
      "op": "GAS",
      "path": "63"
    },
    "13530": {
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1583,
        1622
      ],
      "op": "CALL",
      "path": "63"
    },
    "13531": {
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1583,
        1622
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "13532": {
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1583,
        1622
      ],
      "op": "DUP1",
      "path": "63"
    },
    "13533": {
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1583,
        1622
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "13534": {
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1583,
        1622
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1A51"
    },
    "13537": {
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1583,
        1622
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "13538": {
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1583,
        1622
      ],
      "op": "RETURNDATASIZE",
      "path": "63"
    },
    "13539": {
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1583,
        1622
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "13541": {
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1583,
        1622
      ],
      "op": "DUP1",
      "path": "63"
    },
    "13542": {
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1583,
        1622
      ],
      "op": "RETURNDATACOPY",
      "path": "63"
    },
    "13543": {
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1583,
        1622
      ],
      "op": "RETURNDATASIZE",
      "path": "63"
    },
    "13544": {
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1583,
        1622
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "13546": {
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1583,
        1622
      ],
      "op": "REVERT",
      "path": "63"
    },
    "13547": {
      "fn": "BasicSpell.doTransmitETH",
      "offset": [
        1556,
        1629
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "13548": {
      "fn": "BasicSpell.doTransmitETH",
      "jump": "o",
      "offset": [
        1516,
        1633
      ],
      "op": "JUMP",
      "path": "63"
    },
    "13549": {
      "fn": "BasicSpell.doTransmit",
      "offset": [
        1903,
        2029
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "13550": {
      "fn": "BasicSpell.doTransmit",
      "offset": [
        1970,
        1980
      ],
      "op": "DUP1",
      "path": "63"
    },
    "13551": {
      "branch": 195,
      "fn": "BasicSpell.doTransmit",
      "offset": [
        1970,
        1980
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "13552": {
      "fn": "BasicSpell.doTransmit",
      "offset": [
        1966,
        2025
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1E19"
    },
    "13555": {
      "branch": 195,
      "fn": "BasicSpell.doTransmit",
      "offset": [
        1966,
        2025
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "13556": {
      "fn": "BasicSpell.doTransmit",
      "offset": [
        1990,
        2018
      ],
      "op": "PUSH1",
      "path": "63",
      "statement": 113,
      "value": "0x40"
    },
    "13558": {
      "fn": "BasicSpell.doTransmit",
      "offset": [
        1990,
        2018
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "13559": {
      "op": "PUSH4",
      "value": "0x246B5DE1"
    },
    "13564": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "13566": {
      "op": "SHL"
    },
    "13567": {
      "fn": "BasicSpell.doTransmit",
      "offset": [
        1990,
        2018
      ],
      "op": "DUP2",
      "path": "63"
    },
    "13568": {
      "fn": "BasicSpell.doTransmit",
      "offset": [
        1990,
        2018
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "13569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13573": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13575": {
      "op": "SHL"
    },
    "13576": {
      "op": "SUB"
    },
    "13577": {
      "fn": "BasicSpell.doTransmit",
      "offset": [
        1990,
        1994
      ],
      "op": "PUSH32",
      "path": "63",
      "value": "0x0"
    },
    "13610": {
      "fn": "BasicSpell.doTransmit",
      "offset": [
        1990,
        2003
      ],
      "op": "AND",
      "path": "63"
    },
    "13611": {
      "fn": "BasicSpell.doTransmit",
      "offset": [
        1990,
        2003
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "13612": {
      "fn": "BasicSpell.doTransmit",
      "offset": [
        1990,
        2003
      ],
      "op": "PUSH4",
      "path": "63",
      "value": "0x48D6BBC2"
    },
    "13617": {
      "fn": "BasicSpell.doTransmit",
      "offset": [
        1990,
        2003
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "13618": {
      "fn": "BasicSpell.doTransmit",
      "offset": [
        1990,
        2018
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1DEB"
    },
    "13621": {
      "fn": "BasicSpell.doTransmit",
      "offset": [
        1990,
        2018
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "13622": {
      "fn": "BasicSpell.doTransmit",
      "offset": [
        2004,
        2009
      ],
      "op": "DUP6",
      "path": "63"
    },
    "13623": {
      "fn": "BasicSpell.doTransmit",
      "offset": [
        2004,
        2009
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "13624": {
      "fn": "BasicSpell.doTransmit",
      "offset": [
        2011,
        2017
      ],
      "op": "DUP6",
      "path": "63"
    },
    "13625": {
      "fn": "BasicSpell.doTransmit",
      "offset": [
        2011,
        2017
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "13626": {
      "fn": "BasicSpell.doTransmit",
      "offset": [
        1990,
        2018
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "13628": {
      "fn": "BasicSpell.doTransmit",
      "offset": [
        1990,
        2018
      ],
      "op": "ADD",
      "path": "63"
    },
    "13629": {
      "fn": "BasicSpell.doTransmit",
      "offset": [
        1990,
        2018
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x3FAF"
    },
    "13632": {
      "fn": "BasicSpell.doTransmit",
      "jump": "i",
      "offset": [
        1990,
        2018
      ],
      "op": "JUMP",
      "path": "63"
    },
    "13633": {
      "fn": "BasicSpell.doBorrow",
      "offset": [
        2999,
        3121
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "13634": {
      "fn": "BasicSpell.doBorrow",
      "offset": [
        3064,
        3074
      ],
      "op": "DUP1",
      "path": "63"
    },
    "13635": {
      "branch": 196,
      "fn": "BasicSpell.doBorrow",
      "offset": [
        3064,
        3074
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "13636": {
      "fn": "BasicSpell.doBorrow",
      "offset": [
        3060,
        3117
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1E19"
    },
    "13639": {
      "branch": 196,
      "fn": "BasicSpell.doBorrow",
      "offset": [
        3060,
        3117
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "13640": {
      "fn": "BasicSpell.doBorrow",
      "offset": [
        3084,
        3110
      ],
      "op": "PUSH1",
      "path": "63",
      "statement": 114,
      "value": "0x40"
    },
    "13642": {
      "fn": "BasicSpell.doBorrow",
      "offset": [
        3084,
        3110
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "13643": {
      "op": "PUSH4",
      "value": "0x4B8A3529"
    },
    "13648": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13650": {
      "op": "SHL"
    },
    "13651": {
      "fn": "BasicSpell.doBorrow",
      "offset": [
        3084,
        3110
      ],
      "op": "DUP2",
      "path": "63"
    },
    "13652": {
      "fn": "BasicSpell.doBorrow",
      "offset": [
        3084,
        3110
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "13653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13657": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13659": {
      "op": "SHL"
    },
    "13660": {
      "op": "SUB"
    },
    "13661": {
      "fn": "BasicSpell.doBorrow",
      "offset": [
        3084,
        3088
      ],
      "op": "PUSH32",
      "path": "63",
      "value": "0x0"
    },
    "13694": {
      "fn": "BasicSpell.doBorrow",
      "offset": [
        3084,
        3095
      ],
      "op": "AND",
      "path": "63"
    },
    "13695": {
      "fn": "BasicSpell.doBorrow",
      "offset": [
        3084,
        3095
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "13696": {
      "fn": "BasicSpell.doBorrow",
      "offset": [
        3084,
        3095
      ],
      "op": "PUSH4",
      "path": "63",
      "value": "0x4B8A3529"
    },
    "13701": {
      "fn": "BasicSpell.doBorrow",
      "offset": [
        3084,
        3095
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "13702": {
      "fn": "BasicSpell.doBorrow",
      "offset": [
        3084,
        3110
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1DEB"
    },
    "13705": {
      "fn": "BasicSpell.doBorrow",
      "offset": [
        3084,
        3110
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "13706": {
      "fn": "BasicSpell.doBorrow",
      "offset": [
        3096,
        3101
      ],
      "op": "DUP6",
      "path": "63"
    },
    "13707": {
      "fn": "BasicSpell.doBorrow",
      "offset": [
        3096,
        3101
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "13708": {
      "fn": "BasicSpell.doBorrow",
      "offset": [
        3103,
        3109
      ],
      "op": "DUP6",
      "path": "63"
    },
    "13709": {
      "fn": "BasicSpell.doBorrow",
      "offset": [
        3103,
        3109
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "13710": {
      "fn": "BasicSpell.doBorrow",
      "offset": [
        3084,
        3110
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "13712": {
      "fn": "BasicSpell.doBorrow",
      "offset": [
        3084,
        3110
      ],
      "op": "ADD",
      "path": "63"
    },
    "13713": {
      "fn": "BasicSpell.doBorrow",
      "offset": [
        3084,
        3110
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x3FAF"
    },
    "13716": {
      "fn": "BasicSpell.doBorrow",
      "jump": "i",
      "offset": [
        3084,
        3110
      ],
      "op": "JUMP",
      "path": "63"
    },
    "13717": {
      "fn": "SushiswapSpellV1.optimalDeposit",
      "offset": [
        2310,
        2687
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "13718": {
      "fn": "SushiswapSpellV1.optimalDeposit",
      "offset": [
        2421,
        2433
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "13720": {
      "fn": "SushiswapSpellV1.optimalDeposit",
      "offset": [
        2421,
        2433
      ],
      "op": "DUP1",
      "path": "66"
    },
    "13721": {
      "fn": "SushiswapSpellV1.optimalDeposit",
      "offset": [
        2480,
        2494
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x35A2"
    },
    "13724": {
      "fn": "SushiswapSpellV1.optimalDeposit",
      "offset": [
        2480,
        2484
      ],
      "op": "DUP6",
      "path": "66"
    },
    "13725": {
      "fn": "SushiswapSpellV1.optimalDeposit",
      "offset": [
        2489,
        2493
      ],
      "op": "DUP6",
      "path": "66"
    },
    "13726": {
      "fn": "SushiswapSpellV1.optimalDeposit",
      "offset": [
        2480,
        2488
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x361D"
    },
    "13729": {
      "fn": "SushiswapSpellV1.optimalDeposit",
      "jump": "i",
      "offset": [
        2480,
        2494
      ],
      "op": "JUMP",
      "path": "66"
    },
    "13730": {
      "fn": "SushiswapSpellV1.optimalDeposit",
      "offset": [
        2480,
        2494
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "13731": {
      "fn": "SushiswapSpellV1.optimalDeposit",
      "offset": [
        2462,
        2476
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x35AC"
    },
    "13734": {
      "fn": "SushiswapSpellV1.optimalDeposit",
      "offset": [
        2462,
        2466
      ],
      "op": "DUP8",
      "path": "66"
    },
    "13735": {
      "fn": "SushiswapSpellV1.optimalDeposit",
      "offset": [
        2471,
        2475
      ],
      "op": "DUP6",
      "path": "66"
    },
    "13736": {
      "fn": "SushiswapSpellV1.optimalDeposit",
      "offset": [
        2462,
        2470
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x361D"
    },
    "13739": {
      "fn": "SushiswapSpellV1.optimalDeposit",
      "jump": "i",
      "offset": [
        2462,
        2476
      ],
      "op": "JUMP",
      "path": "66"
    },
    "13740": {
      "fn": "SushiswapSpellV1.optimalDeposit",
      "offset": [
        2462,
        2476
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "13741": {
      "branch": 179,
      "fn": "SushiswapSpellV1.optimalDeposit",
      "offset": [
        2462,
        2494
      ],
      "op": "LT",
      "path": "66"
    },
    "13742": {
      "fn": "SushiswapSpellV1.optimalDeposit",
      "offset": [
        2458,
        2683
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x35C8"
    },
    "13745": {
      "branch": 179,
      "fn": "SushiswapSpellV1.optimalDeposit",
      "offset": [
        2458,
        2683
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "13746": {
      "fn": "SushiswapSpellV1.optimalDeposit",
      "offset": [
        2514,
        2554
      ],
      "op": "PUSH2",
      "path": "66",
      "statement": 115,
      "value": "0x35BD"
    },
    "13749": {
      "fn": "SushiswapSpellV1.optimalDeposit",
      "offset": [
        2531,
        2535
      ],
      "op": "DUP7",
      "path": "66"
    },
    "13750": {
      "fn": "SushiswapSpellV1.optimalDeposit",
      "offset": [
        2537,
        2541
      ],
      "op": "DUP7",
      "path": "66"
    },
    "13751": {
      "fn": "SushiswapSpellV1.optimalDeposit",
      "offset": [
        2543,
        2547
      ],
      "op": "DUP7",
      "path": "66"
    },
    "13752": {
      "fn": "SushiswapSpellV1.optimalDeposit",
      "offset": [
        2549,
        2553
      ],
      "op": "DUP7",
      "path": "66"
    },
    "13753": {
      "fn": "SushiswapSpellV1.optimalDeposit",
      "offset": [
        2514,
        2530
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3657"
    },
    "13756": {
      "fn": "SushiswapSpellV1.optimalDeposit",
      "jump": "i",
      "offset": [
        2514,
        2554
      ],
      "op": "JUMP",
      "path": "66"
    },
    "13757": {
      "fn": "SushiswapSpellV1.optimalDeposit",
      "offset": [
        2514,
        2554
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "13758": {
      "fn": "SushiswapSpellV1.optimalDeposit",
      "offset": [
        2504,
        2554
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "13759": {
      "fn": "SushiswapSpellV1.optimalDeposit",
      "offset": [
        2504,
        2554
      ],
      "op": "POP",
      "path": "66"
    },
    "13760": {
      "fn": "SushiswapSpellV1.optimalDeposit",
      "offset": [
        2575,
        2580
      ],
      "op": "PUSH1",
      "path": "66",
      "statement": 116,
      "value": "0x0"
    },
    "13762": {
      "fn": "SushiswapSpellV1.optimalDeposit",
      "offset": [
        2562,
        2580
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "13763": {
      "fn": "SushiswapSpellV1.optimalDeposit",
      "offset": [
        2562,
        2580
      ],
      "op": "POP",
      "path": "66"
    },
    "13764": {
      "fn": "SushiswapSpellV1.optimalDeposit",
      "offset": [
        2458,
        2683
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x35DB"
    },
    "13767": {
      "fn": "SushiswapSpellV1.optimalDeposit",
      "offset": [
        2458,
        2683
      ],
      "op": "JUMP",
      "path": "66"
    },
    "13768": {
      "fn": "SushiswapSpellV1.optimalDeposit",
      "offset": [
        2458,
        2683
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "13769": {
      "fn": "SushiswapSpellV1.optimalDeposit",
      "offset": [
        2611,
        2651
      ],
      "op": "PUSH2",
      "path": "66",
      "statement": 117,
      "value": "0x35D4"
    },
    "13772": {
      "fn": "SushiswapSpellV1.optimalDeposit",
      "offset": [
        2628,
        2632
      ],
      "op": "DUP6",
      "path": "66"
    },
    "13773": {
      "fn": "SushiswapSpellV1.optimalDeposit",
      "offset": [
        2634,
        2638
      ],
      "op": "DUP8",
      "path": "66"
    },
    "13774": {
      "fn": "SushiswapSpellV1.optimalDeposit",
      "offset": [
        2640,
        2644
      ],
      "op": "DUP6",
      "path": "66"
    },
    "13775": {
      "fn": "SushiswapSpellV1.optimalDeposit",
      "offset": [
        2646,
        2650
      ],
      "op": "DUP8",
      "path": "66"
    },
    "13776": {
      "fn": "SushiswapSpellV1.optimalDeposit",
      "offset": [
        2611,
        2627
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3657"
    },
    "13779": {
      "fn": "SushiswapSpellV1.optimalDeposit",
      "jump": "i",
      "offset": [
        2611,
        2651
      ],
      "op": "JUMP",
      "path": "66"
    },
    "13780": {
      "fn": "SushiswapSpellV1.optimalDeposit",
      "offset": [
        2611,
        2651
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "13781": {
      "fn": "SushiswapSpellV1.optimalDeposit",
      "offset": [
        2601,
        2651
      ],
      "op": "SWAP2",
      "path": "66"
    },
    "13782": {
      "fn": "SushiswapSpellV1.optimalDeposit",
      "offset": [
        2601,
        2651
      ],
      "op": "POP",
      "path": "66"
    },
    "13783": {
      "fn": "SushiswapSpellV1.optimalDeposit",
      "offset": [
        2672,
        2676
      ],
      "op": "PUSH1",
      "path": "66",
      "statement": 118,
      "value": "0x1"
    },
    "13785": {
      "fn": "SushiswapSpellV1.optimalDeposit",
      "offset": [
        2659,
        2676
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "13786": {
      "fn": "SushiswapSpellV1.optimalDeposit",
      "offset": [
        2659,
        2676
      ],
      "op": "POP",
      "path": "66"
    },
    "13787": {
      "fn": "SushiswapSpellV1.optimalDeposit",
      "offset": [
        2458,
        2683
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "13788": {
      "fn": "SushiswapSpellV1.optimalDeposit",
      "offset": [
        2310,
        2687
      ],
      "op": "SWAP5",
      "path": "66"
    },
    "13789": {
      "fn": "SushiswapSpellV1.optimalDeposit",
      "offset": [
        2310,
        2687
      ],
      "op": "POP",
      "path": "66"
    },
    "13790": {
      "fn": "SushiswapSpellV1.optimalDeposit",
      "offset": [
        2310,
        2687
      ],
      "op": "SWAP5",
      "path": "66"
    },
    "13791": {
      "fn": "SushiswapSpellV1.optimalDeposit",
      "offset": [
        2310,
        2687
      ],
      "op": "SWAP3",
      "path": "66"
    },
    "13792": {
      "fn": "SushiswapSpellV1.optimalDeposit",
      "offset": [
        2310,
        2687
      ],
      "op": "POP",
      "path": "66"
    },
    "13793": {
      "fn": "SushiswapSpellV1.optimalDeposit",
      "offset": [
        2310,
        2687
      ],
      "op": "POP",
      "path": "66"
    },
    "13794": {
      "fn": "SushiswapSpellV1.optimalDeposit",
      "offset": [
        2310,
        2687
      ],
      "op": "POP",
      "path": "66"
    },
    "13795": {
      "fn": "SushiswapSpellV1.optimalDeposit",
      "jump": "o",
      "offset": [
        2310,
        2687
      ],
      "op": "JUMP",
      "path": "66"
    },
    "13796": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7091,
        7816
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "13797": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7206,
        7218
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x60"
    },
    "13799": {
      "branch": 183,
      "fn": "Address._verifyCallResult",
      "offset": [
        7234,
        7241
      ],
      "op": "DUP4",
      "path": "21"
    },
    "13800": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7230,
        7810
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "13801": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7230,
        7810
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x35F3"
    },
    "13804": {
      "branch": 183,
      "fn": "Address._verifyCallResult",
      "offset": [
        7230,
        7810
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "13805": {
      "op": "POP"
    },
    "13806": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7264,
        7274
      ],
      "op": "DUP2",
      "path": "21",
      "statement": 119
    },
    "13807": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7257,
        7274
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1C4B"
    },
    "13810": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7257,
        7274
      ],
      "op": "JUMP",
      "path": "21"
    },
    "13811": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7230,
        7810
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "13812": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7375,
        7392
      ],
      "op": "DUP3",
      "path": "21"
    },
    "13813": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7375,
        7392
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "13814": {
      "branch": 184,
      "fn": "Address._verifyCallResult",
      "offset": [
        7375,
        7396
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "13815": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7371,
        7800
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x3603"
    },
    "13818": {
      "branch": 184,
      "fn": "Address._verifyCallResult",
      "offset": [
        7371,
        7800
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "13819": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7633,
        7643
      ],
      "op": "DUP3",
      "path": "21"
    },
    "13820": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7627,
        7644
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "13821": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7693,
        7708
      ],
      "op": "DUP1",
      "path": "21"
    },
    "13822": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7680,
        7690
      ],
      "op": "DUP5",
      "path": "21"
    },
    "13823": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7676,
        7678
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "13825": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7672,
        7691
      ],
      "op": "ADD",
      "path": "21"
    },
    "13826": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7665,
        7709
      ],
      "op": "REVERT",
      "path": "21"
    },
    "13827": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7582,
        7727
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "13828": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7772,
        7784
      ],
      "op": "DUP2",
      "path": "21",
      "statement": 120
    },
    "13829": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "13831": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "13832": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13836": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13838": {
      "op": "SHL"
    },
    "13839": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "21"
    },
    "13840": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "13841": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "13843": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "21"
    },
    "13844": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x19C"
    },
    "13847": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "13848": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "13849": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x4009"
    },
    "13852": {
      "fn": "Address._verifyCallResult",
      "jump": "i",
      "offset": [
        7765,
        7785
      ],
      "op": "JUMP",
      "path": "21"
    },
    "13853": {
      "fn": "SafeMath.mul",
      "offset": [
        3538,
        3753
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "13854": {
      "fn": "SafeMath.mul",
      "offset": [
        3596,
        3603
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "13856": {
      "branch": 211,
      "fn": "SafeMath.mul",
      "offset": [
        3619,
        3625
      ],
      "op": "DUP3",
      "path": "7"
    },
    "13857": {
      "fn": "SafeMath.mul",
      "offset": [
        3615,
        3635
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x362C"
    },
    "13860": {
      "branch": 211,
      "fn": "SafeMath.mul",
      "offset": [
        3615,
        3635
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "13861": {
      "op": "POP"
    },
    "13862": {
      "fn": "SafeMath.mul",
      "offset": [
        3634,
        3635
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 121,
      "value": "0x0"
    },
    "13864": {
      "fn": "SafeMath.mul",
      "offset": [
        3627,
        3635
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x69A"
    },
    "13867": {
      "fn": "SafeMath.mul",
      "offset": [
        3627,
        3635
      ],
      "op": "JUMP",
      "path": "7"
    },
    "13868": {
      "fn": "SafeMath.mul",
      "offset": [
        3615,
        3635
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "13869": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3662
      ],
      "op": "DUP3",
      "path": "7"
    },
    "13870": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3662
      ],
      "op": "DUP3",
      "path": "7"
    },
    "13871": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3662
      ],
      "op": "MUL",
      "path": "7"
    },
    "13872": {
      "fn": "SafeMath.mul",
      "offset": [
        3661,
        3662
      ],
      "op": "DUP3",
      "path": "7"
    },
    "13873": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3658
      ],
      "op": "DUP5",
      "path": "7"
    },
    "13874": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3662
      ],
      "op": "DUP3",
      "path": "7"
    },
    "13875": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3658
      ],
      "op": "DUP2",
      "path": "7"
    },
    "13876": {
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 122,
      "value": "0x3639"
    },
    "13879": {
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "13880": {
      "dev": "Division by zero",
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "INVALID",
      "path": "7"
    },
    "13881": {
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "13882": {
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "DIV",
      "path": "7"
    },
    "13883": {
      "branch": 212,
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3690
      ],
      "op": "EQ",
      "path": "7"
    },
    "13884": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x697"
    },
    "13887": {
      "branch": 212,
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "13888": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "13890": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "13891": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13895": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13897": {
      "op": "SHL"
    },
    "13898": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP2",
      "path": "7"
    },
    "13899": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "13900": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "13902": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "ADD",
      "path": "7"
    },
    "13903": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x19C"
    },
    "13906": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "13907": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4310"
    },
    "13910": {
      "fn": "SafeMath.mul",
      "jump": "i",
      "offset": [
        3672,
        3728
      ],
      "op": "JUMP",
      "path": "7"
    },
    "13911": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        2995,
        3520
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "13912": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3108,
        3112
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "13914": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3146,
        3160
      ],
      "op": "PUSH2",
      "path": "66",
      "statement": 123,
      "value": "0x3663"
    },
    "13917": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3146,
        3150
      ],
      "op": "DUP5",
      "path": "66"
    },
    "13918": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3155,
        3159
      ],
      "op": "DUP5",
      "path": "66"
    },
    "13919": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3146,
        3154
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x361D"
    },
    "13922": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "jump": "i",
      "offset": [
        3146,
        3160
      ],
      "op": "JUMP",
      "path": "66"
    },
    "13923": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3146,
        3160
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "13924": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3128,
        3142
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x366D"
    },
    "13927": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3128,
        3132
      ],
      "op": "DUP7",
      "path": "66"
    },
    "13928": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3137,
        3141
      ],
      "op": "DUP5",
      "path": "66"
    },
    "13929": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3128,
        3136
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x361D"
    },
    "13932": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "jump": "i",
      "offset": [
        3128,
        3142
      ],
      "op": "JUMP",
      "path": "66"
    },
    "13933": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3128,
        3142
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "13934": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3128,
        3160
      ],
      "op": "LT",
      "path": "66"
    },
    "13935": {
      "branch": 180,
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3128,
        3160
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "13936": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3120,
        3173
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x368B"
    },
    "13939": {
      "branch": 180,
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3120,
        3173
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "13940": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3120,
        3173
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x40"
    },
    "13942": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3120,
        3173
      ],
      "op": "MLOAD",
      "path": "66"
    },
    "13943": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13947": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13949": {
      "op": "SHL"
    },
    "13950": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3120,
        3173
      ],
      "op": "DUP2",
      "path": "66"
    },
    "13951": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3120,
        3173
      ],
      "op": "MSTORE",
      "path": "66"
    },
    "13952": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3120,
        3173
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "13954": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3120,
        3173
      ],
      "op": "ADD",
      "path": "66"
    },
    "13955": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3120,
        3173
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x19C"
    },
    "13958": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3120,
        3173
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "13959": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3120,
        3173
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x43BC"
    },
    "13962": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "jump": "i",
      "offset": [
        3120,
        3173
      ],
      "op": "JUMP",
      "path": "66"
    },
    "13963": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3120,
        3173
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "13964": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3188,
        3191
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3E5"
    },
    "13967": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3179,
        3185
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "13969": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3206,
        3226
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x369C"
    },
    "13972": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3211,
        3215
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x7CD"
    },
    "13975": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3221,
        3225
      ],
      "op": "DUP7",
      "path": "66"
    },
    "13976": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3206,
        3220
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x361D"
    },
    "13979": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "jump": "i",
      "offset": [
        3206,
        3226
      ],
      "op": "JUMP",
      "path": "66"
    },
    "13980": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3206,
        3226
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "13981": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3197,
        3226
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "13982": {
      "op": "POP"
    },
    "13983": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3232,
        3239
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "13985": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3242,
        3278
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x36B7"
    },
    "13988": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3263,
        3277
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x36AD"
    },
    "13991": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3263,
        3267
      ],
      "op": "DUP9",
      "path": "66"
    },
    "13992": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3272,
        3276
      ],
      "op": "DUP9",
      "path": "66"
    },
    "13993": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3263,
        3271
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x361D"
    },
    "13996": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "jump": "i",
      "offset": [
        3263,
        3277
      ],
      "op": "JUMP",
      "path": "66"
    },
    "13997": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3263,
        3277
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "13998": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3243,
        3257
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x2186"
    },
    "14001": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3243,
        3247
      ],
      "op": "DUP11",
      "path": "66"
    },
    "14002": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3252,
        3256
      ],
      "op": "DUP9",
      "path": "66"
    },
    "14003": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3243,
        3251
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x361D"
    },
    "14006": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "jump": "i",
      "offset": [
        3243,
        3257
      ],
      "op": "JUMP",
      "path": "66"
    },
    "14007": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3242,
        3278
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "14008": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3232,
        3278
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "14009": {
      "op": "POP"
    },
    "14010": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3284,
        3290
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "14012": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3293,
        3335
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x36E4"
    },
    "14015": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3330,
        3334
      ],
      "op": "DUP8",
      "path": "66"
    },
    "14016": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3293,
        3325
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x36DE"
    },
    "14019": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3310,
        3324
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x36CC"
    },
    "14022": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3310,
        3314
      ],
      "op": "DUP12",
      "path": "66"
    },
    "14023": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3319,
        3323
      ],
      "op": "DUP11",
      "path": "66"
    },
    "14024": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3310,
        3318
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x33B4"
    },
    "14027": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "jump": "i",
      "offset": [
        3310,
        3324
      ],
      "op": "JUMP",
      "path": "66"
    },
    "14028": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3310,
        3324
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "14029": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3293,
        3305
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x36D8"
    },
    "14032": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3293,
        3295
      ],
      "op": "DUP7",
      "path": "66"
    },
    "14033": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3300,
        3304
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3E8"
    },
    "14036": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3293,
        3299
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x361D"
    },
    "14039": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "jump": "i",
      "offset": [
        3293,
        3305
      ],
      "op": "JUMP",
      "path": "66"
    },
    "14040": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3293,
        3305
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "14041": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3293,
        3309
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "14042": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3293,
        3309
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3751"
    },
    "14045": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "jump": "i",
      "offset": [
        3293,
        3325
      ],
      "op": "JUMP",
      "path": "66"
    },
    "14046": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3293,
        3325
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "14047": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3293,
        3329
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "14048": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3293,
        3329
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x361D"
    },
    "14051": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "jump": "i",
      "offset": [
        3293,
        3335
      ],
      "op": "JUMP",
      "path": "66"
    },
    "14052": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3293,
        3335
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "14053": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3284,
        3335
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "14054": {
      "op": "POP"
    },
    "14055": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3341,
        3347
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "14057": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3350,
        3365
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x36F7"
    },
    "14060": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3363,
        3364
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x4"
    },
    "14062": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3350,
        3358
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x36DE"
    },
    "14065": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3350,
        3351
      ],
      "op": "DUP8",
      "path": "66"
    },
    "14066": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3284,
        3335
      ],
      "op": "DUP6",
      "path": "66"
    },
    "14067": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3350,
        3355
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x361D"
    },
    "14070": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "jump": "i",
      "offset": [
        3350,
        3358
      ],
      "op": "JUMP",
      "path": "66"
    },
    "14071": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3350,
        3365
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "14072": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3341,
        3365
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "14073": {
      "op": "POP"
    },
    "14074": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3371,
        3377
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "14076": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3380,
        3412
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3717"
    },
    "14079": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3396,
        3411
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3712"
    },
    "14082": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3341,
        3365
      ],
      "op": "DUP4",
      "path": "66"
    },
    "14083": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3396,
        3404
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x370C"
    },
    "14086": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3402,
        3403
      ],
      "op": "DUP9",
      "path": "66"
    },
    "14087": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3402,
        3403
      ],
      "op": "DUP1",
      "path": "66"
    },
    "14088": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3396,
        3401
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x361D"
    },
    "14091": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "jump": "i",
      "offset": [
        3396,
        3404
      ],
      "op": "JUMP",
      "path": "66"
    },
    "14092": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3396,
        3404
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "14093": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3396,
        3408
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "14094": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3396,
        3408
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x33B4"
    },
    "14097": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "jump": "i",
      "offset": [
        3396,
        3411
      ],
      "op": "JUMP",
      "path": "66"
    },
    "14098": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3396,
        3411
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "14099": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3380,
        3395
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3783"
    },
    "14102": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "jump": "i",
      "offset": [
        3380,
        3412
      ],
      "op": "JUMP",
      "path": "66"
    },
    "14103": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3380,
        3412
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "14104": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3371,
        3412
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "14105": {
      "op": "POP"
    },
    "14106": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3418,
        3432
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "14108": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3435,
        3443
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3725"
    },
    "14111": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3371,
        3412
      ],
      "op": "DUP3",
      "path": "66"
    },
    "14112": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3441,
        3442
      ],
      "op": "DUP8",
      "path": "66"
    },
    "14113": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3435,
        3440
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x338C"
    },
    "14116": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "jump": "i",
      "offset": [
        3435,
        3443
      ],
      "op": "JUMP",
      "path": "66"
    },
    "14117": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3435,
        3443
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "14118": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3418,
        3443
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "14119": {
      "op": "POP"
    },
    "14120": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3449,
        3465
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "14122": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3468,
        3476
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3734"
    },
    "14125": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3468,
        3469
      ],
      "op": "DUP9",
      "path": "66"
    },
    "14126": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3474,
        3475
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x2"
    },
    "14128": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3468,
        3473
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x361D"
    },
    "14131": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "jump": "i",
      "offset": [
        3468,
        3476
      ],
      "op": "JUMP",
      "path": "66"
    },
    "14132": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3468,
        3476
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "14133": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3449,
        3476
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "14134": {
      "op": "POP"
    },
    "14135": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3489,
        3515
      ],
      "op": "PUSH2",
      "path": "66",
      "statement": 124,
      "value": "0x3740"
    },
    "14138": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3489,
        3498
      ],
      "op": "DUP3",
      "path": "66"
    },
    "14139": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3449,
        3476
      ],
      "op": "DUP3",
      "path": "66"
    },
    "14140": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3489,
        3502
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x3751"
    },
    "14143": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "jump": "i",
      "offset": [
        3489,
        3515
      ],
      "op": "JUMP",
      "path": "66"
    },
    "14144": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3489,
        3515
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "14145": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        3482,
        3515
      ],
      "op": "SWAP14",
      "path": "66"
    },
    "14146": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "offset": [
        2995,
        3520
      ],
      "op": "SWAP13",
      "path": "66"
    },
    "14147": {
      "op": "POP"
    },
    "14148": {
      "op": "POP"
    },
    "14149": {
      "op": "POP"
    },
    "14150": {
      "op": "POP"
    },
    "14151": {
      "op": "POP"
    },
    "14152": {
      "op": "POP"
    },
    "14153": {
      "op": "POP"
    },
    "14154": {
      "op": "POP"
    },
    "14155": {
      "op": "POP"
    },
    "14156": {
      "op": "POP"
    },
    "14157": {
      "op": "POP"
    },
    "14158": {
      "op": "POP"
    },
    "14159": {
      "op": "POP"
    },
    "14160": {
      "fn": "SushiswapSpellV1._optimalDepositA",
      "jump": "o",
      "offset": [
        2995,
        3520
      ],
      "op": "JUMP",
      "path": "66"
    },
    "14161": {
      "fn": "SafeMath.div",
      "offset": [
        4217,
        4367
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "14162": {
      "fn": "SafeMath.div",
      "offset": [
        4275,
        4282
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "14164": {
      "fn": "SafeMath.div",
      "offset": [
        4306,
        4307
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 125
    },
    "14165": {
      "fn": "SafeMath.div",
      "offset": [
        4302,
        4303
      ],
      "op": "DUP3",
      "path": "7"
    },
    "14166": {
      "branch": 213,
      "fn": "SafeMath.div",
      "offset": [
        4302,
        4307
      ],
      "op": "GT",
      "path": "7"
    },
    "14167": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3772"
    },
    "14170": {
      "branch": 213,
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "14171": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "14173": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "14174": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14178": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14180": {
      "op": "SHL"
    },
    "14181": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP2",
      "path": "7"
    },
    "14182": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "14183": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "14185": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "ADD",
      "path": "7"
    },
    "14186": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x19C"
    },
    "14189": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "14190": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x41AB"
    },
    "14193": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        4294,
        4338
      ],
      "op": "JUMP",
      "path": "7"
    },
    "14194": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "14195": {
      "fn": "SafeMath.div",
      "offset": [
        4359,
        4360
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 126
    },
    "14196": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4356
      ],
      "op": "DUP4",
      "path": "7"
    },
    "14197": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "DUP2",
      "path": "7"
    },
    "14198": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x377B"
    },
    "14201": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "14202": {
      "dev": "Division by zero",
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "INVALID",
      "path": "7"
    },
    "14203": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "14204": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "DIV",
      "path": "7"
    },
    "14205": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "14206": {
      "fn": "SafeMath.div",
      "offset": [
        4217,
        4367
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "14207": {
      "op": "POP"
    },
    "14208": {
      "op": "POP"
    },
    "14209": {
      "op": "POP"
    },
    "14210": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [
        4217,
        4367
      ],
      "op": "JUMP",
      "path": "7"
    },
    "14211": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        753,
        1602
      ],
      "op": "JUMPDEST",
      "path": "72"
    },
    "14212": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        798,
        802
      ],
      "op": "PUSH1",
      "path": "72",
      "value": "0x0"
    },
    "14214": {
      "branch": 198,
      "fn": "HomoraMath.sqrt",
      "offset": [
        814,
        820
      ],
      "op": "DUP2",
      "path": "72"
    },
    "14215": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        810,
        830
      ],
      "op": "PUSH2",
      "path": "72",
      "value": "0x3792"
    },
    "14218": {
      "branch": 198,
      "fn": "HomoraMath.sqrt",
      "offset": [
        810,
        830
      ],
      "op": "JUMPI",
      "path": "72"
    },
    "14219": {
      "op": "POP"
    },
    "14220": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        829,
        830
      ],
      "op": "PUSH1",
      "path": "72",
      "statement": 127,
      "value": "0x0"
    },
    "14222": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        822,
        830
      ],
      "op": "PUSH2",
      "path": "72",
      "value": "0x467"
    },
    "14225": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        822,
        830
      ],
      "op": "JUMP",
      "path": "72"
    },
    "14226": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        810,
        830
      ],
      "op": "JUMPDEST",
      "path": "72"
    },
    "14227": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        846,
        847
      ],
      "op": "DUP2",
      "path": "72"
    },
    "14228": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        862,
        863
      ],
      "op": "PUSH1",
      "path": "72",
      "value": "0x1"
    },
    "14230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14232": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14234": {
      "op": "SHL"
    },
    "14235": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        874,
        915
      ],
      "op": "DUP3",
      "path": "72"
    },
    "14236": {
      "branch": 199,
      "fn": "HomoraMath.sqrt",
      "offset": [
        874,
        915
      ],
      "op": "LT",
      "path": "72"
    },
    "14237": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        870,
        958
      ],
      "op": "PUSH2",
      "path": "72",
      "value": "0x37AB"
    },
    "14240": {
      "branch": 199,
      "fn": "HomoraMath.sqrt",
      "offset": [
        870,
        958
      ],
      "op": "JUMPI",
      "path": "72"
    },
    "14241": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        932,
        935
      ],
      "op": "PUSH1",
      "path": "72",
      "statement": 128,
      "value": "0x80"
    },
    "14243": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        925,
        935
      ],
      "op": "SWAP2",
      "path": "72"
    },
    "14244": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        925,
        935
      ],
      "op": "SWAP1",
      "path": "72"
    },
    "14245": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        925,
        935
      ],
      "op": "SWAP2",
      "path": "72"
    },
    "14246": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        925,
        935
      ],
      "op": "SHR",
      "path": "72"
    },
    "14247": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        925,
        935
      ],
      "op": "SWAP1",
      "path": "72"
    },
    "14248": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        949,
        951
      ],
      "op": "PUSH1",
      "path": "72",
      "statement": 129,
      "value": "0x40"
    },
    "14250": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        943,
        951
      ],
      "op": "SHL",
      "path": "72"
    },
    "14251": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        870,
        958
      ],
      "op": "JUMPDEST",
      "path": "72"
    },
    "14252": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        974,
        993
      ],
      "op": "PUSH9",
      "path": "72",
      "value": "0x10000000000000000"
    },
    "14262": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        968,
        970
      ],
      "op": "DUP3",
      "path": "72"
    },
    "14263": {
      "branch": 200,
      "fn": "HomoraMath.sqrt",
      "offset": [
        968,
        993
      ],
      "op": "LT",
      "path": "72"
    },
    "14264": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        964,
        1035
      ],
      "op": "PUSH2",
      "path": "72",
      "value": "0x37C6"
    },
    "14267": {
      "branch": 200,
      "fn": "HomoraMath.sqrt",
      "offset": [
        964,
        1035
      ],
      "op": "JUMPI",
      "path": "72"
    },
    "14268": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1010,
        1012
      ],
      "op": "PUSH1",
      "path": "72",
      "statement": 130,
      "value": "0x40"
    },
    "14270": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1003,
        1012
      ],
      "op": "SWAP2",
      "path": "72"
    },
    "14271": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1003,
        1012
      ],
      "op": "SWAP1",
      "path": "72"
    },
    "14272": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1003,
        1012
      ],
      "op": "SWAP2",
      "path": "72"
    },
    "14273": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1003,
        1012
      ],
      "op": "SHR",
      "path": "72"
    },
    "14274": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1003,
        1012
      ],
      "op": "SWAP1",
      "path": "72"
    },
    "14275": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1026,
        1028
      ],
      "op": "PUSH1",
      "path": "72",
      "statement": 131,
      "value": "0x20"
    },
    "14277": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1020,
        1028
      ],
      "op": "SHL",
      "path": "72"
    },
    "14278": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        964,
        1035
      ],
      "op": "JUMPDEST",
      "path": "72"
    },
    "14279": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1050,
        1061
      ],
      "op": "PUSH5",
      "path": "72",
      "value": "0x100000000"
    },
    "14285": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1044,
        1046
      ],
      "op": "DUP3",
      "path": "72"
    },
    "14286": {
      "branch": 201,
      "fn": "HomoraMath.sqrt",
      "offset": [
        1044,
        1061
      ],
      "op": "LT",
      "path": "72"
    },
    "14287": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1040,
        1103
      ],
      "op": "PUSH2",
      "path": "72",
      "value": "0x37DD"
    },
    "14290": {
      "branch": 201,
      "fn": "HomoraMath.sqrt",
      "offset": [
        1040,
        1103
      ],
      "op": "JUMPI",
      "path": "72"
    },
    "14291": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1078,
        1080
      ],
      "op": "PUSH1",
      "path": "72",
      "statement": 132,
      "value": "0x20"
    },
    "14293": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1071,
        1080
      ],
      "op": "SWAP2",
      "path": "72"
    },
    "14294": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1071,
        1080
      ],
      "op": "SWAP1",
      "path": "72"
    },
    "14295": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1071,
        1080
      ],
      "op": "SWAP2",
      "path": "72"
    },
    "14296": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1071,
        1080
      ],
      "op": "SHR",
      "path": "72"
    },
    "14297": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1071,
        1080
      ],
      "op": "SWAP1",
      "path": "72"
    },
    "14298": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1094,
        1096
      ],
      "op": "PUSH1",
      "path": "72",
      "statement": 133,
      "value": "0x10"
    },
    "14300": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1088,
        1096
      ],
      "op": "SHL",
      "path": "72"
    },
    "14301": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1040,
        1103
      ],
      "op": "JUMPDEST",
      "path": "72"
    },
    "14302": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1118,
        1125
      ],
      "op": "PUSH3",
      "path": "72",
      "value": "0x10000"
    },
    "14306": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1112,
        1114
      ],
      "op": "DUP3",
      "path": "72"
    },
    "14307": {
      "branch": 202,
      "fn": "HomoraMath.sqrt",
      "offset": [
        1112,
        1125
      ],
      "op": "LT",
      "path": "72"
    },
    "14308": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1108,
        1166
      ],
      "op": "PUSH2",
      "path": "72",
      "value": "0x37F2"
    },
    "14311": {
      "branch": 202,
      "fn": "HomoraMath.sqrt",
      "offset": [
        1108,
        1166
      ],
      "op": "JUMPI",
      "path": "72"
    },
    "14312": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1142,
        1144
      ],
      "op": "PUSH1",
      "path": "72",
      "statement": 134,
      "value": "0x10"
    },
    "14314": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1135,
        1144
      ],
      "op": "SWAP2",
      "path": "72"
    },
    "14315": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1135,
        1144
      ],
      "op": "SWAP1",
      "path": "72"
    },
    "14316": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1135,
        1144
      ],
      "op": "SWAP2",
      "path": "72"
    },
    "14317": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1135,
        1144
      ],
      "op": "SHR",
      "path": "72"
    },
    "14318": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1135,
        1144
      ],
      "op": "SWAP1",
      "path": "72"
    },
    "14319": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1158,
        1159
      ],
      "op": "PUSH1",
      "path": "72",
      "statement": 135,
      "value": "0x8"
    },
    "14321": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1152,
        1159
      ],
      "op": "SHL",
      "path": "72"
    },
    "14322": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1108,
        1166
      ],
      "op": "JUMPDEST",
      "path": "72"
    },
    "14323": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1181,
        1186
      ],
      "op": "PUSH2",
      "path": "72",
      "value": "0x100"
    },
    "14326": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1175,
        1177
      ],
      "op": "DUP3",
      "path": "72"
    },
    "14327": {
      "branch": 203,
      "fn": "HomoraMath.sqrt",
      "offset": [
        1175,
        1186
      ],
      "op": "LT",
      "path": "72"
    },
    "14328": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1171,
        1226
      ],
      "op": "PUSH2",
      "path": "72",
      "value": "0x3806"
    },
    "14331": {
      "branch": 203,
      "fn": "HomoraMath.sqrt",
      "offset": [
        1171,
        1226
      ],
      "op": "JUMPI",
      "path": "72"
    },
    "14332": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1203,
        1204
      ],
      "op": "PUSH1",
      "path": "72",
      "statement": 136,
      "value": "0x8"
    },
    "14334": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1196,
        1204
      ],
      "op": "SWAP2",
      "path": "72"
    },
    "14335": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1196,
        1204
      ],
      "op": "SWAP1",
      "path": "72"
    },
    "14336": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1196,
        1204
      ],
      "op": "SWAP2",
      "path": "72"
    },
    "14337": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1196,
        1204
      ],
      "op": "SHR",
      "path": "72"
    },
    "14338": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1196,
        1204
      ],
      "op": "SWAP1",
      "path": "72"
    },
    "14339": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1218,
        1219
      ],
      "op": "PUSH1",
      "path": "72",
      "statement": 137,
      "value": "0x4"
    },
    "14341": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1212,
        1219
      ],
      "op": "SHL",
      "path": "72"
    },
    "14342": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1171,
        1226
      ],
      "op": "JUMPDEST",
      "path": "72"
    },
    "14343": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1241,
        1245
      ],
      "op": "PUSH1",
      "path": "72",
      "value": "0x10"
    },
    "14345": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1235,
        1237
      ],
      "op": "DUP3",
      "path": "72"
    },
    "14346": {
      "branch": 204,
      "fn": "HomoraMath.sqrt",
      "offset": [
        1235,
        1245
      ],
      "op": "LT",
      "path": "72"
    },
    "14347": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1231,
        1285
      ],
      "op": "PUSH2",
      "path": "72",
      "value": "0x3819"
    },
    "14350": {
      "branch": 204,
      "fn": "HomoraMath.sqrt",
      "offset": [
        1231,
        1285
      ],
      "op": "JUMPI",
      "path": "72"
    },
    "14351": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1262,
        1263
      ],
      "op": "PUSH1",
      "path": "72",
      "statement": 138,
      "value": "0x4"
    },
    "14353": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1255,
        1263
      ],
      "op": "SWAP2",
      "path": "72"
    },
    "14354": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1255,
        1263
      ],
      "op": "SWAP1",
      "path": "72"
    },
    "14355": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1255,
        1263
      ],
      "op": "SWAP2",
      "path": "72"
    },
    "14356": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1255,
        1263
      ],
      "op": "SHR",
      "path": "72"
    },
    "14357": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1255,
        1263
      ],
      "op": "SWAP1",
      "path": "72"
    },
    "14358": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1277,
        1278
      ],
      "op": "PUSH1",
      "path": "72",
      "statement": 139,
      "value": "0x2"
    },
    "14360": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1271,
        1278
      ],
      "op": "SHL",
      "path": "72"
    },
    "14361": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1231,
        1285
      ],
      "op": "JUMPDEST",
      "path": "72"
    },
    "14362": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1300,
        1303
      ],
      "op": "PUSH1",
      "path": "72",
      "value": "0x8"
    },
    "14364": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1294,
        1296
      ],
      "op": "DUP3",
      "path": "72"
    },
    "14365": {
      "branch": 205,
      "fn": "HomoraMath.sqrt",
      "offset": [
        1294,
        1303
      ],
      "op": "LT",
      "path": "72"
    },
    "14366": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1290,
        1327
      ],
      "op": "PUSH2",
      "path": "72",
      "value": "0x3825"
    },
    "14369": {
      "branch": 205,
      "fn": "HomoraMath.sqrt",
      "offset": [
        1290,
        1327
      ],
      "op": "JUMPI",
      "path": "72"
    },
    "14370": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1319,
        1320
      ],
      "op": "PUSH1",
      "path": "72",
      "statement": 140,
      "value": "0x1"
    },
    "14372": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1313,
        1320
      ],
      "op": "SHL",
      "path": "72"
    },
    "14373": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1290,
        1327
      ],
      "op": "JUMPDEST",
      "path": "72"
    },
    "14374": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1352,
        1353
      ],
      "op": "PUSH1",
      "path": "72",
      "statement": 141,
      "value": "0x1"
    },
    "14376": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1346,
        1347
      ],
      "op": "DUP2",
      "path": "72"
    },
    "14377": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1342,
        1343
      ],
      "op": "DUP6",
      "path": "72"
    },
    "14378": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1342,
        1347
      ],
      "op": "DUP2",
      "path": "72"
    },
    "14379": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1342,
        1347
      ],
      "op": "PUSH2",
      "path": "72",
      "value": "0x3830"
    },
    "14382": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1342,
        1347
      ],
      "op": "JUMPI",
      "path": "72"
    },
    "14383": {
      "dev": "Division by zero",
      "fn": "HomoraMath.sqrt",
      "offset": [
        1342,
        1347
      ],
      "op": "INVALID",
      "path": "72"
    },
    "14384": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1342,
        1347
      ],
      "op": "JUMPDEST",
      "path": "72"
    },
    "14385": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1342,
        1347
      ],
      "op": "DIV",
      "path": "72"
    },
    "14386": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1338,
        1339
      ],
      "op": "DUP3",
      "path": "72"
    },
    "14387": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1338,
        1347
      ],
      "op": "ADD",
      "path": "72"
    },
    "14388": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1337,
        1353
      ],
      "op": "SWAP1",
      "path": "72"
    },
    "14389": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1337,
        1353
      ],
      "op": "SHR",
      "path": "72"
    },
    "14390": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1333,
        1353
      ],
      "op": "SWAP1",
      "path": "72"
    },
    "14391": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1333,
        1353
      ],
      "op": "POP",
      "path": "72"
    },
    "14392": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1378,
        1379
      ],
      "op": "PUSH1",
      "path": "72",
      "statement": 142,
      "value": "0x1"
    },
    "14394": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1372,
        1373
      ],
      "op": "DUP2",
      "path": "72"
    },
    "14395": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1368,
        1369
      ],
      "op": "DUP6",
      "path": "72"
    },
    "14396": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1368,
        1373
      ],
      "op": "DUP2",
      "path": "72"
    },
    "14397": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1368,
        1373
      ],
      "op": "PUSH2",
      "path": "72",
      "value": "0x3842"
    },
    "14400": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1368,
        1373
      ],
      "op": "JUMPI",
      "path": "72"
    },
    "14401": {
      "dev": "Division by zero",
      "fn": "HomoraMath.sqrt",
      "offset": [
        1368,
        1373
      ],
      "op": "INVALID",
      "path": "72"
    },
    "14402": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1368,
        1373
      ],
      "op": "JUMPDEST",
      "path": "72"
    },
    "14403": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1368,
        1373
      ],
      "op": "DIV",
      "path": "72"
    },
    "14404": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1364,
        1365
      ],
      "op": "DUP3",
      "path": "72"
    },
    "14405": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1364,
        1373
      ],
      "op": "ADD",
      "path": "72"
    },
    "14406": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1363,
        1379
      ],
      "op": "SWAP1",
      "path": "72"
    },
    "14407": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1363,
        1379
      ],
      "op": "SHR",
      "path": "72"
    },
    "14408": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1359,
        1379
      ],
      "op": "SWAP1",
      "path": "72"
    },
    "14409": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1359,
        1379
      ],
      "op": "POP",
      "path": "72"
    },
    "14410": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1404,
        1405
      ],
      "op": "PUSH1",
      "path": "72",
      "statement": 143,
      "value": "0x1"
    },
    "14412": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1398,
        1399
      ],
      "op": "DUP2",
      "path": "72"
    },
    "14413": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1394,
        1395
      ],
      "op": "DUP6",
      "path": "72"
    },
    "14414": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1394,
        1399
      ],
      "op": "DUP2",
      "path": "72"
    },
    "14415": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1394,
        1399
      ],
      "op": "PUSH2",
      "path": "72",
      "value": "0x3854"
    },
    "14418": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1394,
        1399
      ],
      "op": "JUMPI",
      "path": "72"
    },
    "14419": {
      "dev": "Division by zero",
      "fn": "HomoraMath.sqrt",
      "offset": [
        1394,
        1399
      ],
      "op": "INVALID",
      "path": "72"
    },
    "14420": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1394,
        1399
      ],
      "op": "JUMPDEST",
      "path": "72"
    },
    "14421": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1394,
        1399
      ],
      "op": "DIV",
      "path": "72"
    },
    "14422": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1390,
        1391
      ],
      "op": "DUP3",
      "path": "72"
    },
    "14423": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1390,
        1399
      ],
      "op": "ADD",
      "path": "72"
    },
    "14424": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1389,
        1405
      ],
      "op": "SWAP1",
      "path": "72"
    },
    "14425": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1389,
        1405
      ],
      "op": "SHR",
      "path": "72"
    },
    "14426": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1385,
        1405
      ],
      "op": "SWAP1",
      "path": "72"
    },
    "14427": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1385,
        1405
      ],
      "op": "POP",
      "path": "72"
    },
    "14428": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1430,
        1431
      ],
      "op": "PUSH1",
      "path": "72",
      "statement": 144,
      "value": "0x1"
    },
    "14430": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1424,
        1425
      ],
      "op": "DUP2",
      "path": "72"
    },
    "14431": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1420,
        1421
      ],
      "op": "DUP6",
      "path": "72"
    },
    "14432": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1420,
        1425
      ],
      "op": "DUP2",
      "path": "72"
    },
    "14433": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1420,
        1425
      ],
      "op": "PUSH2",
      "path": "72",
      "value": "0x3866"
    },
    "14436": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1420,
        1425
      ],
      "op": "JUMPI",
      "path": "72"
    },
    "14437": {
      "dev": "Division by zero",
      "fn": "HomoraMath.sqrt",
      "offset": [
        1420,
        1425
      ],
      "op": "INVALID",
      "path": "72"
    },
    "14438": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1420,
        1425
      ],
      "op": "JUMPDEST",
      "path": "72"
    },
    "14439": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1420,
        1425
      ],
      "op": "DIV",
      "path": "72"
    },
    "14440": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1416,
        1417
      ],
      "op": "DUP3",
      "path": "72"
    },
    "14441": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1416,
        1425
      ],
      "op": "ADD",
      "path": "72"
    },
    "14442": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1415,
        1431
      ],
      "op": "SWAP1",
      "path": "72"
    },
    "14443": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1415,
        1431
      ],
      "op": "SHR",
      "path": "72"
    },
    "14444": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1411,
        1431
      ],
      "op": "SWAP1",
      "path": "72"
    },
    "14445": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1411,
        1431
      ],
      "op": "POP",
      "path": "72"
    },
    "14446": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1456,
        1457
      ],
      "op": "PUSH1",
      "path": "72",
      "statement": 145,
      "value": "0x1"
    },
    "14448": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1450,
        1451
      ],
      "op": "DUP2",
      "path": "72"
    },
    "14449": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1446,
        1447
      ],
      "op": "DUP6",
      "path": "72"
    },
    "14450": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1446,
        1451
      ],
      "op": "DUP2",
      "path": "72"
    },
    "14451": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1446,
        1451
      ],
      "op": "PUSH2",
      "path": "72",
      "value": "0x3878"
    },
    "14454": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1446,
        1451
      ],
      "op": "JUMPI",
      "path": "72"
    },
    "14455": {
      "dev": "Division by zero",
      "fn": "HomoraMath.sqrt",
      "offset": [
        1446,
        1451
      ],
      "op": "INVALID",
      "path": "72"
    },
    "14456": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1446,
        1451
      ],
      "op": "JUMPDEST",
      "path": "72"
    },
    "14457": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1446,
        1451
      ],
      "op": "DIV",
      "path": "72"
    },
    "14458": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1442,
        1443
      ],
      "op": "DUP3",
      "path": "72"
    },
    "14459": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1442,
        1451
      ],
      "op": "ADD",
      "path": "72"
    },
    "14460": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1441,
        1457
      ],
      "op": "SWAP1",
      "path": "72"
    },
    "14461": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1441,
        1457
      ],
      "op": "SHR",
      "path": "72"
    },
    "14462": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1437,
        1457
      ],
      "op": "SWAP1",
      "path": "72"
    },
    "14463": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1437,
        1457
      ],
      "op": "POP",
      "path": "72"
    },
    "14464": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1482,
        1483
      ],
      "op": "PUSH1",
      "path": "72",
      "statement": 146,
      "value": "0x1"
    },
    "14466": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1476,
        1477
      ],
      "op": "DUP2",
      "path": "72"
    },
    "14467": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1472,
        1473
      ],
      "op": "DUP6",
      "path": "72"
    },
    "14468": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1472,
        1477
      ],
      "op": "DUP2",
      "path": "72"
    },
    "14469": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1472,
        1477
      ],
      "op": "PUSH2",
      "path": "72",
      "value": "0x388A"
    },
    "14472": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1472,
        1477
      ],
      "op": "JUMPI",
      "path": "72"
    },
    "14473": {
      "dev": "Division by zero",
      "fn": "HomoraMath.sqrt",
      "offset": [
        1472,
        1477
      ],
      "op": "INVALID",
      "path": "72"
    },
    "14474": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1472,
        1477
      ],
      "op": "JUMPDEST",
      "path": "72"
    },
    "14475": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1472,
        1477
      ],
      "op": "DIV",
      "path": "72"
    },
    "14476": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1468,
        1469
      ],
      "op": "DUP3",
      "path": "72"
    },
    "14477": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1468,
        1477
      ],
      "op": "ADD",
      "path": "72"
    },
    "14478": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1467,
        1483
      ],
      "op": "SWAP1",
      "path": "72"
    },
    "14479": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1467,
        1483
      ],
      "op": "SHR",
      "path": "72"
    },
    "14480": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1463,
        1483
      ],
      "op": "SWAP1",
      "path": "72"
    },
    "14481": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1463,
        1483
      ],
      "op": "POP",
      "path": "72"
    },
    "14482": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1508,
        1509
      ],
      "op": "PUSH1",
      "path": "72",
      "statement": 147,
      "value": "0x1"
    },
    "14484": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1502,
        1503
      ],
      "op": "DUP2",
      "path": "72"
    },
    "14485": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1498,
        1499
      ],
      "op": "DUP6",
      "path": "72"
    },
    "14486": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1498,
        1503
      ],
      "op": "DUP2",
      "path": "72"
    },
    "14487": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1498,
        1503
      ],
      "op": "PUSH2",
      "path": "72",
      "value": "0x389C"
    },
    "14490": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1498,
        1503
      ],
      "op": "JUMPI",
      "path": "72"
    },
    "14491": {
      "dev": "Division by zero",
      "fn": "HomoraMath.sqrt",
      "offset": [
        1498,
        1503
      ],
      "op": "INVALID",
      "path": "72"
    },
    "14492": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1498,
        1503
      ],
      "op": "JUMPDEST",
      "path": "72"
    },
    "14493": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1498,
        1503
      ],
      "op": "DIV",
      "path": "72"
    },
    "14494": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1494,
        1495
      ],
      "op": "DUP3",
      "path": "72"
    },
    "14495": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1494,
        1503
      ],
      "op": "ADD",
      "path": "72"
    },
    "14496": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1493,
        1509
      ],
      "op": "SWAP1",
      "path": "72"
    },
    "14497": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1493,
        1509
      ],
      "op": "SHR",
      "path": "72"
    },
    "14498": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1489,
        1509
      ],
      "op": "SWAP1",
      "path": "72"
    },
    "14499": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1489,
        1509
      ],
      "op": "POP",
      "path": "72"
    },
    "14500": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1552,
        1559
      ],
      "op": "PUSH1",
      "path": "72",
      "value": "0x0"
    },
    "14502": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1566,
        1567
      ],
      "op": "DUP2",
      "path": "72"
    },
    "14503": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1562,
        1563
      ],
      "op": "DUP6",
      "path": "72"
    },
    "14504": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1562,
        1567
      ],
      "op": "DUP2",
      "path": "72"
    },
    "14505": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1562,
        1567
      ],
      "op": "PUSH2",
      "path": "72",
      "value": "0x38AE"
    },
    "14508": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1562,
        1567
      ],
      "op": "JUMPI",
      "path": "72"
    },
    "14509": {
      "dev": "Division by zero",
      "fn": "HomoraMath.sqrt",
      "offset": [
        1562,
        1567
      ],
      "op": "INVALID",
      "path": "72"
    },
    "14510": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1562,
        1567
      ],
      "op": "JUMPDEST",
      "path": "72"
    },
    "14511": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1562,
        1567
      ],
      "op": "DIV",
      "path": "72"
    },
    "14512": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1552,
        1567
      ],
      "op": "SWAP1",
      "path": "72"
    },
    "14513": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1552,
        1567
      ],
      "op": "POP",
      "path": "72"
    },
    "14514": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1585,
        1587
      ],
      "op": "DUP1",
      "path": "72",
      "statement": 148
    },
    "14515": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1581,
        1582
      ],
      "op": "DUP3",
      "path": "72"
    },
    "14516": {
      "branch": 206,
      "fn": "HomoraMath.sqrt",
      "offset": [
        1581,
        1587
      ],
      "op": "LT",
      "path": "72"
    },
    "14517": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1581,
        1596
      ],
      "op": "PUSH2",
      "path": "72",
      "value": "0x38BE"
    },
    "14520": {
      "branch": 206,
      "fn": "HomoraMath.sqrt",
      "offset": [
        1581,
        1596
      ],
      "op": "JUMPI",
      "path": "72"
    },
    "14521": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1594,
        1596
      ],
      "op": "DUP1",
      "path": "72"
    },
    "14522": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1581,
        1596
      ],
      "op": "PUSH2",
      "path": "72",
      "value": "0x38C0"
    },
    "14525": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1581,
        1596
      ],
      "op": "JUMP",
      "path": "72"
    },
    "14526": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1581,
        1596
      ],
      "op": "JUMPDEST",
      "path": "72"
    },
    "14527": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1590,
        1591
      ],
      "op": "DUP2",
      "path": "72"
    },
    "14528": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1581,
        1596
      ],
      "op": "JUMPDEST",
      "path": "72"
    },
    "14529": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1573,
        1597
      ],
      "op": "SWAP6",
      "path": "72"
    },
    "14530": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        753,
        1602
      ],
      "op": "SWAP5",
      "path": "72"
    },
    "14531": {
      "op": "POP"
    },
    "14532": {
      "op": "POP"
    },
    "14533": {
      "op": "POP"
    },
    "14534": {
      "op": "POP"
    },
    "14535": {
      "op": "POP"
    },
    "14536": {
      "fn": "HomoraMath.sqrt",
      "jump": "o",
      "offset": [
        753,
        1602
      ],
      "op": "JUMP",
      "path": "72"
    },
    "14537": {
      "op": "JUMPDEST"
    },
    "14538": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14540": {
      "op": "DUP1"
    },
    "14541": {
      "op": "DUP4"
    },
    "14542": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14544": {
      "op": "DUP5"
    },
    "14545": {
      "op": "ADD"
    },
    "14546": {
      "op": "SLT"
    },
    "14547": {
      "op": "PUSH2",
      "value": "0x38DA"
    },
    "14550": {
      "op": "JUMPI"
    },
    "14551": {
      "op": "DUP2"
    },
    "14552": {
      "op": "DUP3"
    },
    "14553": {
      "op": "REVERT"
    },
    "14554": {
      "op": "JUMPDEST"
    },
    "14555": {
      "op": "POP"
    },
    "14556": {
      "op": "DUP2"
    },
    "14557": {
      "op": "CALLDATALOAD"
    },
    "14558": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "14567": {
      "op": "DUP2"
    },
    "14568": {
      "op": "GT"
    },
    "14569": {
      "op": "ISZERO"
    },
    "14570": {
      "op": "PUSH2",
      "value": "0x38F1"
    },
    "14573": {
      "op": "JUMPI"
    },
    "14574": {
      "op": "DUP2"
    },
    "14575": {
      "op": "DUP3"
    },
    "14576": {
      "op": "REVERT"
    },
    "14577": {
      "op": "JUMPDEST"
    },
    "14578": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14580": {
      "op": "DUP4"
    },
    "14581": {
      "op": "ADD"
    },
    "14582": {
      "op": "SWAP2"
    },
    "14583": {
      "op": "POP"
    },
    "14584": {
      "op": "DUP4"
    },
    "14585": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14587": {
      "op": "DUP1"
    },
    "14588": {
      "op": "DUP4"
    },
    "14589": {
      "op": "MUL"
    },
    "14590": {
      "op": "DUP6"
    },
    "14591": {
      "op": "ADD"
    },
    "14592": {
      "op": "ADD"
    },
    "14593": {
      "op": "GT"
    },
    "14594": {
      "op": "ISZERO"
    },
    "14595": {
      "op": "PUSH2",
      "value": "0x390B"
    },
    "14598": {
      "op": "JUMPI"
    },
    "14599": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14601": {
      "op": "DUP1"
    },
    "14602": {
      "op": "REVERT"
    },
    "14603": {
      "op": "JUMPDEST"
    },
    "14604": {
      "op": "SWAP3"
    },
    "14605": {
      "op": "POP"
    },
    "14606": {
      "op": "SWAP3"
    },
    "14607": {
      "op": "SWAP1"
    },
    "14608": {
      "op": "POP"
    },
    "14609": {
      "op": "JUMP"
    },
    "14610": {
      "op": "JUMPDEST"
    },
    "14611": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14613": {
      "op": "DUP1"
    },
    "14614": {
      "op": "DUP4"
    },
    "14615": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14617": {
      "op": "DUP5"
    },
    "14618": {
      "op": "ADD"
    },
    "14619": {
      "op": "SLT"
    },
    "14620": {
      "op": "PUSH2",
      "value": "0x3923"
    },
    "14623": {
      "op": "JUMPI"
    },
    "14624": {
      "op": "DUP2"
    },
    "14625": {
      "op": "DUP3"
    },
    "14626": {
      "op": "REVERT"
    },
    "14627": {
      "op": "JUMPDEST"
    },
    "14628": {
      "op": "POP"
    },
    "14629": {
      "op": "DUP2"
    },
    "14630": {
      "op": "CALLDATALOAD"
    },
    "14631": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "14640": {
      "op": "DUP2"
    },
    "14641": {
      "op": "GT"
    },
    "14642": {
      "op": "ISZERO"
    },
    "14643": {
      "op": "PUSH2",
      "value": "0x393A"
    },
    "14646": {
      "op": "JUMPI"
    },
    "14647": {
      "op": "DUP2"
    },
    "14648": {
      "op": "DUP3"
    },
    "14649": {
      "op": "REVERT"
    },
    "14650": {
      "op": "JUMPDEST"
    },
    "14651": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14653": {
      "op": "DUP4"
    },
    "14654": {
      "op": "ADD"
    },
    "14655": {
      "op": "SWAP2"
    },
    "14656": {
      "op": "POP"
    },
    "14657": {
      "op": "DUP4"
    },
    "14658": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14660": {
      "op": "DUP3"
    },
    "14661": {
      "op": "DUP6"
    },
    "14662": {
      "op": "ADD"
    },
    "14663": {
      "op": "ADD"
    },
    "14664": {
      "op": "GT"
    },
    "14665": {
      "op": "ISZERO"
    },
    "14666": {
      "op": "PUSH2",
      "value": "0x390B"
    },
    "14669": {
      "op": "JUMPI"
    },
    "14670": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14672": {
      "op": "DUP1"
    },
    "14673": {
      "op": "REVERT"
    },
    "14674": {
      "op": "JUMPDEST"
    },
    "14675": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14677": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "14680": {
      "op": "DUP3"
    },
    "14681": {
      "op": "DUP5"
    },
    "14682": {
      "op": "SUB"
    },
    "14683": {
      "op": "SLT"
    },
    "14684": {
      "op": "ISZERO"
    },
    "14685": {
      "op": "PUSH2",
      "value": "0x3964"
    },
    "14688": {
      "op": "JUMPI"
    },
    "14689": {
      "op": "DUP1"
    },
    "14690": {
      "op": "DUP2"
    },
    "14691": {
      "op": "REVERT"
    },
    "14692": {
      "op": "JUMPDEST"
    },
    "14693": {
      "op": "POP"
    },
    "14694": {
      "op": "SWAP2"
    },
    "14695": {
      "op": "SWAP1"
    },
    "14696": {
      "op": "POP"
    },
    "14697": {
      "op": "JUMP"
    },
    "14698": {
      "op": "JUMPDEST"
    },
    "14699": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14701": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14703": {
      "op": "DUP3"
    },
    "14704": {
      "op": "DUP5"
    },
    "14705": {
      "op": "SUB"
    },
    "14706": {
      "op": "SLT"
    },
    "14707": {
      "op": "ISZERO"
    },
    "14708": {
      "op": "PUSH2",
      "value": "0x397B"
    },
    "14711": {
      "op": "JUMPI"
    },
    "14712": {
      "op": "DUP1"
    },
    "14713": {
      "op": "DUP2"
    },
    "14714": {
      "op": "REVERT"
    },
    "14715": {
      "op": "JUMPDEST"
    },
    "14716": {
      "op": "DUP2"
    },
    "14717": {
      "op": "CALLDATALOAD"
    },
    "14718": {
      "op": "PUSH2",
      "value": "0x697"
    },
    "14721": {
      "op": "DUP2"
    },
    "14722": {
      "op": "PUSH2",
      "value": "0x45E7"
    },
    "14725": {
      "op": "JUMP"
    },
    "14726": {
      "op": "JUMPDEST"
    },
    "14727": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14729": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14731": {
      "op": "DUP3"
    },
    "14732": {
      "op": "DUP5"
    },
    "14733": {
      "op": "SUB"
    },
    "14734": {
      "op": "SLT"
    },
    "14735": {
      "op": "ISZERO"
    },
    "14736": {
      "op": "PUSH2",
      "value": "0x3997"
    },
    "14739": {
      "op": "JUMPI"
    },
    "14740": {
      "op": "DUP1"
    },
    "14741": {
      "op": "DUP2"
    },
    "14742": {
      "op": "REVERT"
    },
    "14743": {
      "op": "JUMPDEST"
    },
    "14744": {
      "op": "DUP2"
    },
    "14745": {
      "op": "MLOAD"
    },
    "14746": {
      "op": "PUSH2",
      "value": "0x697"
    },
    "14749": {
      "op": "DUP2"
    },
    "14750": {
      "op": "PUSH2",
      "value": "0x45E7"
    },
    "14753": {
      "op": "JUMP"
    },
    "14754": {
      "op": "JUMPDEST"
    },
    "14755": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14757": {
      "op": "DUP1"
    },
    "14758": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14760": {
      "op": "DUP4"
    },
    "14761": {
      "op": "DUP6"
    },
    "14762": {
      "op": "SUB"
    },
    "14763": {
      "op": "SLT"
    },
    "14764": {
      "op": "ISZERO"
    },
    "14765": {
      "op": "PUSH2",
      "value": "0x39B4"
    },
    "14768": {
      "op": "JUMPI"
    },
    "14769": {
      "op": "DUP1"
    },
    "14770": {
      "op": "DUP2"
    },
    "14771": {
      "op": "REVERT"
    },
    "14772": {
      "op": "JUMPDEST"
    },
    "14773": {
      "op": "DUP3"
    },
    "14774": {
      "op": "CALLDATALOAD"
    },
    "14775": {
      "op": "PUSH2",
      "value": "0x39BF"
    },
    "14778": {
      "op": "DUP2"
    },
    "14779": {
      "op": "PUSH2",
      "value": "0x45E7"
    },
    "14782": {
      "op": "JUMP"
    },
    "14783": {
      "op": "JUMPDEST"
    },
    "14784": {
      "op": "SWAP2"
    },
    "14785": {
      "op": "POP"
    },
    "14786": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14788": {
      "op": "DUP4"
    },
    "14789": {
      "op": "ADD"
    },
    "14790": {
      "op": "CALLDATALOAD"
    },
    "14791": {
      "op": "PUSH2",
      "value": "0x39CF"
    },
    "14794": {
      "op": "DUP2"
    },
    "14795": {
      "op": "PUSH2",
      "value": "0x45E7"
    },
    "14798": {
      "op": "JUMP"
    },
    "14799": {
      "op": "JUMPDEST"
    },
    "14800": {
      "op": "DUP1"
    },
    "14801": {
      "op": "SWAP2"
    },
    "14802": {
      "op": "POP"
    },
    "14803": {
      "op": "POP"
    },
    "14804": {
      "op": "SWAP3"
    },
    "14805": {
      "op": "POP"
    },
    "14806": {
      "op": "SWAP3"
    },
    "14807": {
      "op": "SWAP1"
    },
    "14808": {
      "op": "POP"
    },
    "14809": {
      "op": "JUMP"
    },
    "14810": {
      "op": "JUMPDEST"
    },
    "14811": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14813": {
      "op": "DUP1"
    },
    "14814": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14816": {
      "op": "DUP1"
    },
    "14817": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14819": {
      "op": "DUP1"
    },
    "14820": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14822": {
      "op": "DUP1"
    },
    "14823": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14825": {
      "op": "DUP10"
    },
    "14826": {
      "op": "DUP12"
    },
    "14827": {
      "op": "SUB"
    },
    "14828": {
      "op": "SLT"
    },
    "14829": {
      "op": "ISZERO"
    },
    "14830": {
      "op": "PUSH2",
      "value": "0x39F5"
    },
    "14833": {
      "op": "JUMPI"
    },
    "14834": {
      "op": "DUP4"
    },
    "14835": {
      "op": "DUP5"
    },
    "14836": {
      "op": "REVERT"
    },
    "14837": {
      "op": "JUMPDEST"
    },
    "14838": {
      "op": "DUP9"
    },
    "14839": {
      "op": "CALLDATALOAD"
    },
    "14840": {
      "op": "PUSH2",
      "value": "0x3A00"
    },
    "14843": {
      "op": "DUP2"
    },
    "14844": {
      "op": "PUSH2",
      "value": "0x45E7"
    },
    "14847": {
      "op": "JUMP"
    },
    "14848": {
      "op": "JUMPDEST"
    },
    "14849": {
      "op": "SWAP8"
    },
    "14850": {
      "op": "POP"
    },
    "14851": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14853": {
      "op": "DUP10"
    },
    "14854": {
      "op": "ADD"
    },
    "14855": {
      "op": "CALLDATALOAD"
    },
    "14856": {
      "op": "PUSH2",
      "value": "0x3A10"
    },
    "14859": {
      "op": "DUP2"
    },
    "14860": {
      "op": "PUSH2",
      "value": "0x45E7"
    },
    "14863": {
      "op": "JUMP"
    },
    "14864": {
      "op": "JUMPDEST"
    },
    "14865": {
      "op": "SWAP7"
    },
    "14866": {
      "op": "POP"
    },
    "14867": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14869": {
      "op": "DUP10"
    },
    "14870": {
      "op": "ADD"
    },
    "14871": {
      "op": "CALLDATALOAD"
    },
    "14872": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "14881": {
      "op": "DUP1"
    },
    "14882": {
      "op": "DUP3"
    },
    "14883": {
      "op": "GT"
    },
    "14884": {
      "op": "ISZERO"
    },
    "14885": {
      "op": "PUSH2",
      "value": "0x3A2C"
    },
    "14888": {
      "op": "JUMPI"
    },
    "14889": {
      "op": "DUP6"
    },
    "14890": {
      "op": "DUP7"
    },
    "14891": {
      "op": "REVERT"
    },
    "14892": {
      "op": "JUMPDEST"
    },
    "14893": {
      "op": "PUSH2",
      "value": "0x3A38"
    },
    "14896": {
      "op": "DUP13"
    },
    "14897": {
      "op": "DUP4"
    },
    "14898": {
      "op": "DUP14"
    },
    "14899": {
      "op": "ADD"
    },
    "14900": {
      "op": "PUSH2",
      "value": "0x38C9"
    },
    "14903": {
      "op": "JUMP"
    },
    "14904": {
      "op": "JUMPDEST"
    },
    "14905": {
      "op": "SWAP1"
    },
    "14906": {
      "op": "SWAP9"
    },
    "14907": {
      "op": "POP"
    },
    "14908": {
      "op": "SWAP7"
    },
    "14909": {
      "op": "POP"
    },
    "14910": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14912": {
      "op": "DUP12"
    },
    "14913": {
      "op": "ADD"
    },
    "14914": {
      "op": "CALLDATALOAD"
    },
    "14915": {
      "op": "SWAP2"
    },
    "14916": {
      "op": "POP"
    },
    "14917": {
      "op": "DUP1"
    },
    "14918": {
      "op": "DUP3"
    },
    "14919": {
      "op": "GT"
    },
    "14920": {
      "op": "ISZERO"
    },
    "14921": {
      "op": "PUSH2",
      "value": "0x3A50"
    },
    "14924": {
      "op": "JUMPI"
    },
    "14925": {
      "op": "DUP6"
    },
    "14926": {
      "op": "DUP7"
    },
    "14927": {
      "op": "REVERT"
    },
    "14928": {
      "op": "JUMPDEST"
    },
    "14929": {
      "op": "PUSH2",
      "value": "0x3A5C"
    },
    "14932": {
      "op": "DUP13"
    },
    "14933": {
      "op": "DUP4"
    },
    "14934": {
      "op": "DUP14"
    },
    "14935": {
      "op": "ADD"
    },
    "14936": {
      "op": "PUSH2",
      "value": "0x38C9"
    },
    "14939": {
      "op": "JUMP"
    },
    "14940": {
      "op": "JUMPDEST"
    },
    "14941": {
      "op": "SWAP1"
    },
    "14942": {
      "op": "SWAP7"
    },
    "14943": {
      "op": "POP"
    },
    "14944": {
      "op": "SWAP5"
    },
    "14945": {
      "op": "POP"
    },
    "14946": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14948": {
      "op": "DUP12"
    },
    "14949": {
      "op": "ADD"
    },
    "14950": {
      "op": "CALLDATALOAD"
    },
    "14951": {
      "op": "SWAP2"
    },
    "14952": {
      "op": "POP"
    },
    "14953": {
      "op": "DUP1"
    },
    "14954": {
      "op": "DUP3"
    },
    "14955": {
      "op": "GT"
    },
    "14956": {
      "op": "ISZERO"
    },
    "14957": {
      "op": "PUSH2",
      "value": "0x3A74"
    },
    "14960": {
      "op": "JUMPI"
    },
    "14961": {
      "op": "DUP4"
    },
    "14962": {
      "op": "DUP5"
    },
    "14963": {
      "op": "REVERT"
    },
    "14964": {
      "op": "JUMPDEST"
    },
    "14965": {
      "op": "POP"
    },
    "14966": {
      "op": "PUSH2",
      "value": "0x3A81"
    },
    "14969": {
      "op": "DUP12"
    },
    "14970": {
      "op": "DUP3"
    },
    "14971": {
      "op": "DUP13"
    },
    "14972": {
      "op": "ADD"
    },
    "14973": {
      "op": "PUSH2",
      "value": "0x3912"
    },
    "14976": {
      "op": "JUMP"
    },
    "14977": {
      "op": "JUMPDEST"
    },
    "14978": {
      "op": "SWAP10"
    },
    "14979": {
      "op": "SWAP13"
    },
    "14980": {
      "op": "SWAP9"
    },
    "14981": {
      "op": "SWAP12"
    },
    "14982": {
      "op": "POP"
    },
    "14983": {
      "op": "SWAP7"
    },
    "14984": {
      "op": "SWAP10"
    },
    "14985": {
      "op": "POP"
    },
    "14986": {
      "op": "SWAP5"
    },
    "14987": {
      "op": "SWAP8"
    },
    "14988": {
      "op": "SWAP4"
    },
    "14989": {
      "op": "SWAP7"
    },
    "14990": {
      "op": "SWAP3"
    },
    "14991": {
      "op": "SWAP6"
    },
    "14992": {
      "op": "SWAP5"
    },
    "14993": {
      "op": "POP"
    },
    "14994": {
      "op": "POP"
    },
    "14995": {
      "op": "POP"
    },
    "14996": {
      "op": "JUMP"
    },
    "14997": {
      "op": "JUMPDEST"
    },
    "14998": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15000": {
      "op": "DUP1"
    },
    "15001": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15003": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "15006": {
      "op": "DUP5"
    },
    "15007": {
      "op": "DUP7"
    },
    "15008": {
      "op": "SUB"
    },
    "15009": {
      "op": "SLT"
    },
    "15010": {
      "op": "ISZERO"
    },
    "15011": {
      "op": "PUSH2",
      "value": "0x3AAA"
    },
    "15014": {
      "op": "JUMPI"
    },
    "15015": {
      "op": "DUP3"
    },
    "15016": {
      "op": "DUP4"
    },
    "15017": {
      "op": "REVERT"
    },
    "15018": {
      "op": "JUMPDEST"
    },
    "15019": {
      "op": "DUP4"
    },
    "15020": {
      "op": "CALLDATALOAD"
    },
    "15021": {
      "op": "PUSH2",
      "value": "0x3AB5"
    },
    "15024": {
      "op": "DUP2"
    },
    "15025": {
      "op": "PUSH2",
      "value": "0x45E7"
    },
    "15028": {
      "op": "JUMP"
    },
    "15029": {
      "op": "JUMPDEST"
    },
    "15030": {
      "op": "SWAP3"
    },
    "15031": {
      "op": "POP"
    },
    "15032": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15034": {
      "op": "DUP5"
    },
    "15035": {
      "op": "ADD"
    },
    "15036": {
      "op": "CALLDATALOAD"
    },
    "15037": {
      "op": "PUSH2",
      "value": "0x3AC5"
    },
    "15040": {
      "op": "DUP2"
    },
    "15041": {
      "op": "PUSH2",
      "value": "0x45E7"
    },
    "15044": {
      "op": "JUMP"
    },
    "15045": {
      "op": "JUMPDEST"
    },
    "15046": {
      "op": "SWAP2"
    },
    "15047": {
      "op": "POP"
    },
    "15048": {
      "op": "PUSH2",
      "value": "0x3AD4"
    },
    "15051": {
      "op": "DUP6"
    },
    "15052": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15054": {
      "op": "DUP7"
    },
    "15055": {
      "op": "ADD"
    },
    "15056": {
      "op": "PUSH2",
      "value": "0x3952"
    },
    "15059": {
      "op": "JUMP"
    },
    "15060": {
      "op": "JUMPDEST"
    },
    "15061": {
      "op": "SWAP1"
    },
    "15062": {
      "op": "POP"
    },
    "15063": {
      "op": "SWAP3"
    },
    "15064": {
      "op": "POP"
    },
    "15065": {
      "op": "SWAP3"
    },
    "15066": {
      "op": "POP"
    },
    "15067": {
      "op": "SWAP3"
    },
    "15068": {
      "op": "JUMP"
    },
    "15069": {
      "op": "JUMPDEST"
    },
    "15070": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15072": {
      "op": "DUP1"
    },
    "15073": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15075": {
      "op": "DUP1"
    },
    "15076": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "15079": {
      "op": "DUP6"
    },
    "15080": {
      "op": "DUP8"
    },
    "15081": {
      "op": "SUB"
    },
    "15082": {
      "op": "SLT"
    },
    "15083": {
      "op": "ISZERO"
    },
    "15084": {
      "op": "PUSH2",
      "value": "0x3AF3"
    },
    "15087": {
      "op": "JUMPI"
    },
    "15088": {
      "op": "DUP4"
    },
    "15089": {
      "op": "DUP5"
    },
    "15090": {
      "op": "REVERT"
    },
    "15091": {
      "op": "JUMPDEST"
    },
    "15092": {
      "op": "DUP5"
    },
    "15093": {
      "op": "CALLDATALOAD"
    },
    "15094": {
      "op": "PUSH2",
      "value": "0x3AFE"
    },
    "15097": {
      "op": "DUP2"
    },
    "15098": {
      "op": "PUSH2",
      "value": "0x45E7"
    },
    "15101": {
      "op": "JUMP"
    },
    "15102": {
      "op": "JUMPDEST"
    },
    "15103": {
      "op": "SWAP4"
    },
    "15104": {
      "op": "POP"
    },
    "15105": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15107": {
      "op": "DUP6"
    },
    "15108": {
      "op": "ADD"
    },
    "15109": {
      "op": "CALLDATALOAD"
    },
    "15110": {
      "op": "PUSH2",
      "value": "0x3B0E"
    },
    "15113": {
      "op": "DUP2"
    },
    "15114": {
      "op": "PUSH2",
      "value": "0x45E7"
    },
    "15117": {
      "op": "JUMP"
    },
    "15118": {
      "op": "JUMPDEST"
    },
    "15119": {
      "op": "SWAP3"
    },
    "15120": {
      "op": "POP"
    },
    "15121": {
      "op": "PUSH2",
      "value": "0x3B1D"
    },
    "15124": {
      "op": "DUP7"
    },
    "15125": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15127": {
      "op": "DUP8"
    },
    "15128": {
      "op": "ADD"
    },
    "15129": {
      "op": "PUSH2",
      "value": "0x3952"
    },
    "15132": {
      "op": "JUMP"
    },
    "15133": {
      "op": "JUMPDEST"
    },
    "15134": {
      "op": "SWAP4"
    },
    "15135": {
      "op": "SWAP7"
    },
    "15136": {
      "op": "SWAP3"
    },
    "15137": {
      "op": "SWAP6"
    },
    "15138": {
      "op": "POP"
    },
    "15139": {
      "op": "SWAP3"
    },
    "15140": {
      "op": "SWAP4"
    },
    "15141": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "15144": {
      "op": "ADD"
    },
    "15145": {
      "op": "CALLDATALOAD"
    },
    "15146": {
      "op": "SWAP3"
    },
    "15147": {
      "op": "POP"
    },
    "15148": {
      "op": "POP"
    },
    "15149": {
      "op": "JUMP"
    },
    "15150": {
      "op": "JUMPDEST"
    },
    "15151": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15153": {
      "op": "DUP1"
    },
    "15154": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15156": {
      "op": "DUP4"
    },
    "15157": {
      "op": "DUP6"
    },
    "15158": {
      "op": "SUB"
    },
    "15159": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "15162": {
      "op": "DUP2"
    },
    "15163": {
      "op": "SLT"
    },
    "15164": {
      "op": "ISZERO"
    },
    "15165": {
      "op": "PUSH2",
      "value": "0x3B44"
    },
    "15168": {
      "op": "JUMPI"
    },
    "15169": {
      "op": "DUP4"
    },
    "15170": {
      "op": "DUP5"
    },
    "15171": {
      "op": "REVERT"
    },
    "15172": {
      "op": "JUMPDEST"
    },
    "15173": {
      "op": "DUP5"
    },
    "15174": {
      "op": "CALLDATALOAD"
    },
    "15175": {
      "op": "PUSH2",
      "value": "0x3B4F"
    },
    "15178": {
      "op": "DUP2"
    },
    "15179": {
      "op": "PUSH2",
      "value": "0x45E7"
    },
    "15182": {
      "op": "JUMP"
    },
    "15183": {
      "op": "JUMPDEST"
    },
    "15184": {
      "op": "SWAP4"
    },
    "15185": {
      "op": "POP"
    },
    "15186": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15188": {
      "op": "DUP6"
    },
    "15189": {
      "op": "ADD"
    },
    "15190": {
      "op": "CALLDATALOAD"
    },
    "15191": {
      "op": "PUSH2",
      "value": "0x3B5F"
    },
    "15194": {
      "op": "DUP2"
    },
    "15195": {
      "op": "PUSH2",
      "value": "0x45E7"
    },
    "15198": {
      "op": "JUMP"
    },
    "15199": {
      "op": "JUMPDEST"
    },
    "15200": {
      "op": "SWAP3"
    },
    "15201": {
      "op": "POP"
    },
    "15202": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15204": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "15206": {
      "op": "NOT"
    },
    "15207": {
      "op": "DUP3"
    },
    "15208": {
      "op": "ADD"
    },
    "15209": {
      "op": "SLT"
    },
    "15210": {
      "op": "ISZERO"
    },
    "15211": {
      "op": "PUSH2",
      "value": "0x3B72"
    },
    "15214": {
      "op": "JUMPI"
    },
    "15215": {
      "op": "DUP2"
    },
    "15216": {
      "op": "DUP3"
    },
    "15217": {
      "op": "REVERT"
    },
    "15218": {
      "op": "JUMPDEST"
    },
    "15219": {
      "op": "POP"
    },
    "15220": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15222": {
      "op": "DUP5"
    },
    "15223": {
      "op": "ADD"
    },
    "15224": {
      "op": "SWAP1"
    },
    "15225": {
      "op": "POP"
    },
    "15226": {
      "op": "SWAP3"
    },
    "15227": {
      "op": "POP"
    },
    "15228": {
      "op": "SWAP3"
    },
    "15229": {
      "op": "POP"
    },
    "15230": {
      "op": "SWAP3"
    },
    "15231": {
      "op": "JUMP"
    },
    "15232": {
      "op": "JUMPDEST"
    },
    "15233": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15235": {
      "op": "DUP1"
    },
    "15236": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15238": {
      "op": "DUP1"
    },
    "15239": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15241": {
      "op": "DUP6"
    },
    "15242": {
      "op": "DUP8"
    },
    "15243": {
      "op": "SUB"
    },
    "15244": {
      "op": "SLT"
    },
    "15245": {
      "op": "ISZERO"
    },
    "15246": {
      "op": "PUSH2",
      "value": "0x3B95"
    },
    "15249": {
      "op": "JUMPI"
    },
    "15250": {
      "op": "DUP2"
    },
    "15251": {
      "op": "DUP3"
    },
    "15252": {
      "op": "REVERT"
    },
    "15253": {
      "op": "JUMPDEST"
    },
    "15254": {
      "op": "DUP5"
    },
    "15255": {
      "op": "MLOAD"
    },
    "15256": {
      "op": "PUSH2",
      "value": "0x3BA0"
    },
    "15259": {
      "op": "DUP2"
    },
    "15260": {
      "op": "PUSH2",
      "value": "0x45E7"
    },
    "15263": {
      "op": "JUMP"
    },
    "15264": {
      "op": "JUMPDEST"
    },
    "15265": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15267": {
      "op": "DUP7"
    },
    "15268": {
      "op": "ADD"
    },
    "15269": {
      "op": "MLOAD"
    },
    "15270": {
      "op": "SWAP1"
    },
    "15271": {
      "op": "SWAP5"
    },
    "15272": {
      "op": "POP"
    },
    "15273": {
      "op": "PUSH2",
      "value": "0x3BB1"
    },
    "15276": {
      "op": "DUP2"
    },
    "15277": {
      "op": "PUSH2",
      "value": "0x45E7"
    },
    "15280": {
      "op": "JUMP"
    },
    "15281": {
      "op": "JUMPDEST"
    },
    "15282": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15284": {
      "op": "DUP7"
    },
    "15285": {
      "op": "ADD"
    },
    "15286": {
      "op": "MLOAD"
    },
    "15287": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15289": {
      "op": "SWAP1"
    },
    "15290": {
      "op": "SWAP7"
    },
    "15291": {
      "op": "ADD"
    },
    "15292": {
      "op": "MLOAD"
    },
    "15293": {
      "op": "SWAP5"
    },
    "15294": {
      "op": "SWAP8"
    },
    "15295": {
      "op": "SWAP1"
    },
    "15296": {
      "op": "SWAP7"
    },
    "15297": {
      "op": "POP"
    },
    "15298": {
      "op": "SWAP3"
    },
    "15299": {
      "op": "POP"
    },
    "15300": {
      "op": "POP"
    },
    "15301": {
      "op": "POP"
    },
    "15302": {
      "op": "JUMP"
    },
    "15303": {
      "op": "JUMPDEST"
    },
    "15304": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15306": {
      "op": "DUP1"
    },
    "15307": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15309": {
      "op": "DUP1"
    },
    "15310": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15312": {
      "op": "DUP1"
    },
    "15313": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15315": {
      "op": "DUP8"
    },
    "15316": {
      "op": "DUP10"
    },
    "15317": {
      "op": "SUB"
    },
    "15318": {
      "op": "SLT"
    },
    "15319": {
      "op": "ISZERO"
    },
    "15320": {
      "op": "PUSH2",
      "value": "0x3BDF"
    },
    "15323": {
      "op": "JUMPI"
    },
    "15324": {
      "op": "DUP4"
    },
    "15325": {
      "op": "DUP5"
    },
    "15326": {
      "op": "REVERT"
    },
    "15327": {
      "op": "JUMPDEST"
    },
    "15328": {
      "op": "DUP7"
    },
    "15329": {
      "op": "CALLDATALOAD"
    },
    "15330": {
      "op": "PUSH2",
      "value": "0x3BEA"
    },
    "15333": {
      "op": "DUP2"
    },
    "15334": {
      "op": "PUSH2",
      "value": "0x45E7"
    },
    "15337": {
      "op": "JUMP"
    },
    "15338": {
      "op": "JUMPDEST"
    },
    "15339": {
      "op": "SWAP6"
    },
    "15340": {
      "op": "POP"
    },
    "15341": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15343": {
      "op": "DUP8"
    },
    "15344": {
      "op": "ADD"
    },
    "15345": {
      "op": "CALLDATALOAD"
    },
    "15346": {
      "op": "PUSH2",
      "value": "0x3BFA"
    },
    "15349": {
      "op": "DUP2"
    },
    "15350": {
      "op": "PUSH2",
      "value": "0x45E7"
    },
    "15353": {
      "op": "JUMP"
    },
    "15354": {
      "op": "JUMPDEST"
    },
    "15355": {
      "op": "SWAP5"
    },
    "15356": {
      "op": "POP"
    },
    "15357": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15359": {
      "op": "DUP8"
    },
    "15360": {
      "op": "ADD"
    },
    "15361": {
      "op": "CALLDATALOAD"
    },
    "15362": {
      "op": "SWAP4"
    },
    "15363": {
      "op": "POP"
    },
    "15364": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15366": {
      "op": "DUP8"
    },
    "15367": {
      "op": "ADD"
    },
    "15368": {
      "op": "CALLDATALOAD"
    },
    "15369": {
      "op": "SWAP3"
    },
    "15370": {
      "op": "POP"
    },
    "15371": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15373": {
      "op": "DUP8"
    },
    "15374": {
      "op": "ADD"
    },
    "15375": {
      "op": "CALLDATALOAD"
    },
    "15376": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "15385": {
      "op": "DUP2"
    },
    "15386": {
      "op": "GT"
    },
    "15387": {
      "op": "ISZERO"
    },
    "15388": {
      "op": "PUSH2",
      "value": "0x3C23"
    },
    "15391": {
      "op": "JUMPI"
    },
    "15392": {
      "op": "DUP3"
    },
    "15393": {
      "op": "DUP4"
    },
    "15394": {
      "op": "REVERT"
    },
    "15395": {
      "op": "JUMPDEST"
    },
    "15396": {
      "op": "PUSH2",
      "value": "0x3C2F"
    },
    "15399": {
      "op": "DUP10"
    },
    "15400": {
      "op": "DUP3"
    },
    "15401": {
      "op": "DUP11"
    },
    "15402": {
      "op": "ADD"
    },
    "15403": {
      "op": "PUSH2",
      "value": "0x3912"
    },
    "15406": {
      "op": "JUMP"
    },
    "15407": {
      "op": "JUMPDEST"
    },
    "15408": {
      "op": "SWAP8"
    },
    "15409": {
      "op": "SWAP11"
    },
    "15410": {
      "op": "SWAP7"
    },
    "15411": {
      "op": "SWAP10"
    },
    "15412": {
      "op": "POP"
    },
    "15413": {
      "op": "SWAP5"
    },
    "15414": {
      "op": "SWAP8"
    },
    "15415": {
      "op": "POP"
    },
    "15416": {
      "op": "SWAP3"
    },
    "15417": {
      "op": "SWAP6"
    },
    "15418": {
      "op": "SWAP4"
    },
    "15419": {
      "op": "SWAP5"
    },
    "15420": {
      "op": "SWAP3"
    },
    "15421": {
      "op": "POP"
    },
    "15422": {
      "op": "POP"
    },
    "15423": {
      "op": "POP"
    },
    "15424": {
      "op": "JUMP"
    },
    "15425": {
      "op": "JUMPDEST"
    },
    "15426": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15428": {
      "op": "DUP1"
    },
    "15429": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15431": {
      "op": "DUP1"
    },
    "15432": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15434": {
      "op": "DUP6"
    },
    "15435": {
      "op": "DUP8"
    },
    "15436": {
      "op": "SUB"
    },
    "15437": {
      "op": "SLT"
    },
    "15438": {
      "op": "ISZERO"
    },
    "15439": {
      "op": "PUSH2",
      "value": "0x3C56"
    },
    "15442": {
      "op": "JUMPI"
    },
    "15443": {
      "op": "DUP2"
    },
    "15444": {
      "op": "DUP3"
    },
    "15445": {
      "op": "REVERT"
    },
    "15446": {
      "op": "JUMPDEST"
    },
    "15447": {
      "op": "DUP5"
    },
    "15448": {
      "op": "MLOAD"
    },
    "15449": {
      "op": "PUSH2",
      "value": "0x3C61"
    },
    "15452": {
      "op": "DUP2"
    },
    "15453": {
      "op": "PUSH2",
      "value": "0x45E7"
    },
    "15456": {
      "op": "JUMP"
    },
    "15457": {
      "op": "JUMPDEST"
    },
    "15458": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15460": {
      "op": "DUP7"
    },
    "15461": {
      "op": "ADD"
    },
    "15462": {
      "op": "MLOAD"
    },
    "15463": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15465": {
      "op": "DUP8"
    },
    "15466": {
      "op": "ADD"
    },
    "15467": {
      "op": "MLOAD"
    },
    "15468": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15470": {
      "op": "SWAP1"
    },
    "15471": {
      "op": "SWAP8"
    },
    "15472": {
      "op": "ADD"
    },
    "15473": {
      "op": "MLOAD"
    },
    "15474": {
      "op": "SWAP2"
    },
    "15475": {
      "op": "SWAP9"
    },
    "15476": {
      "op": "SWAP1"
    },
    "15477": {
      "op": "SWAP8"
    },
    "15478": {
      "op": "POP"
    },
    "15479": {
      "op": "SWAP1"
    },
    "15480": {
      "op": "SWAP5"
    },
    "15481": {
      "op": "POP"
    },
    "15482": {
      "op": "SWAP3"
    },
    "15483": {
      "op": "POP"
    },
    "15484": {
      "op": "POP"
    },
    "15485": {
      "op": "POP"
    },
    "15486": {
      "op": "JUMP"
    },
    "15487": {
      "op": "JUMPDEST"
    },
    "15488": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15490": {
      "op": "DUP1"
    },
    "15491": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15493": {
      "op": "DUP1"
    },
    "15494": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15496": {
      "op": "DUP6"
    },
    "15497": {
      "op": "DUP8"
    },
    "15498": {
      "op": "SUB"
    },
    "15499": {
      "op": "SLT"
    },
    "15500": {
      "op": "ISZERO"
    },
    "15501": {
      "op": "PUSH2",
      "value": "0x3C94"
    },
    "15504": {
      "op": "JUMPI"
    },
    "15505": {
      "op": "DUP2"
    },
    "15506": {
      "op": "DUP3"
    },
    "15507": {
      "op": "REVERT"
    },
    "15508": {
      "op": "JUMPDEST"
    },
    "15509": {
      "op": "DUP5"
    },
    "15510": {
      "op": "CALLDATALOAD"
    },
    "15511": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "15520": {
      "op": "DUP1"
    },
    "15521": {
      "op": "DUP3"
    },
    "15522": {
      "op": "GT"
    },
    "15523": {
      "op": "ISZERO"
    },
    "15524": {
      "op": "PUSH2",
      "value": "0x3CAB"
    },
    "15527": {
      "op": "JUMPI"
    },
    "15528": {
      "op": "DUP4"
    },
    "15529": {
      "op": "DUP5"
    },
    "15530": {
      "op": "REVERT"
    },
    "15531": {
      "op": "JUMPDEST"
    },
    "15532": {
      "op": "PUSH2",
      "value": "0x3CB7"
    },
    "15535": {
      "op": "DUP9"
    },
    "15536": {
      "op": "DUP4"
    },
    "15537": {
      "op": "DUP10"
    },
    "15538": {
      "op": "ADD"
    },
    "15539": {
      "op": "PUSH2",
      "value": "0x38C9"
    },
    "15542": {
      "op": "JUMP"
    },
    "15543": {
      "op": "JUMPDEST"
    },
    "15544": {
      "op": "SWAP1"
    },
    "15545": {
      "op": "SWAP7"
    },
    "15546": {
      "op": "POP"
    },
    "15547": {
      "op": "SWAP5"
    },
    "15548": {
      "op": "POP"
    },
    "15549": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15551": {
      "op": "DUP8"
    },
    "15552": {
      "op": "ADD"
    },
    "15553": {
      "op": "CALLDATALOAD"
    },
    "15554": {
      "op": "SWAP2"
    },
    "15555": {
      "op": "POP"
    },
    "15556": {
      "op": "DUP1"
    },
    "15557": {
      "op": "DUP3"
    },
    "15558": {
      "op": "GT"
    },
    "15559": {
      "op": "ISZERO"
    },
    "15560": {
      "op": "PUSH2",
      "value": "0x3CCF"
    },
    "15563": {
      "op": "JUMPI"
    },
    "15564": {
      "op": "DUP4"
    },
    "15565": {
      "op": "DUP5"
    },
    "15566": {
      "op": "REVERT"
    },
    "15567": {
      "op": "JUMPDEST"
    },
    "15568": {
      "op": "POP"
    },
    "15569": {
      "op": "PUSH2",
      "value": "0x3CDC"
    },
    "15572": {
      "op": "DUP8"
    },
    "15573": {
      "op": "DUP3"
    },
    "15574": {
      "op": "DUP9"
    },
    "15575": {
      "op": "ADD"
    },
    "15576": {
      "op": "PUSH2",
      "value": "0x38C9"
    },
    "15579": {
      "op": "JUMP"
    },
    "15580": {
      "op": "JUMPDEST"
    },
    "15581": {
      "op": "SWAP6"
    },
    "15582": {
      "op": "SWAP9"
    },
    "15583": {
      "op": "SWAP5"
    },
    "15584": {
      "op": "SWAP8"
    },
    "15585": {
      "op": "POP"
    },
    "15586": {
      "op": "SWAP6"
    },
    "15587": {
      "op": "POP"
    },
    "15588": {
      "op": "POP"
    },
    "15589": {
      "op": "POP"
    },
    "15590": {
      "op": "POP"
    },
    "15591": {
      "op": "JUMP"
    },
    "15592": {
      "op": "JUMPDEST"
    },
    "15593": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15595": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15597": {
      "op": "DUP1"
    },
    "15598": {
      "op": "DUP4"
    },
    "15599": {
      "op": "DUP6"
    },
    "15600": {
      "op": "SUB"
    },
    "15601": {
      "op": "SLT"
    },
    "15602": {
      "op": "ISZERO"
    },
    "15603": {
      "op": "PUSH2",
      "value": "0x3CFA"
    },
    "15606": {
      "op": "JUMPI"
    },
    "15607": {
      "op": "DUP2"
    },
    "15608": {
      "op": "DUP3"
    },
    "15609": {
      "op": "REVERT"
    },
    "15610": {
      "op": "JUMPDEST"
    },
    "15611": {
      "op": "DUP3"
    },
    "15612": {
      "op": "MLOAD"
    },
    "15613": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "15622": {
      "op": "DUP2"
    },
    "15623": {
      "op": "GT"
    },
    "15624": {
      "op": "ISZERO"
    },
    "15625": {
      "op": "PUSH2",
      "value": "0x3D10"
    },
    "15628": {
      "op": "JUMPI"
    },
    "15629": {
      "op": "DUP3"
    },
    "15630": {
      "op": "DUP4"
    },
    "15631": {
      "op": "REVERT"
    },
    "15632": {
      "op": "JUMPDEST"
    },
    "15633": {
      "op": "DUP4"
    },
    "15634": {
      "op": "ADD"
    },
    "15635": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15637": {
      "op": "DUP2"
    },
    "15638": {
      "op": "ADD"
    },
    "15639": {
      "op": "DUP6"
    },
    "15640": {
      "op": "SGT"
    },
    "15641": {
      "op": "PUSH2",
      "value": "0x3D20"
    },
    "15644": {
      "op": "JUMPI"
    },
    "15645": {
      "op": "DUP3"
    },
    "15646": {
      "op": "DUP4"
    },
    "15647": {
      "op": "REVERT"
    },
    "15648": {
      "op": "JUMPDEST"
    },
    "15649": {
      "op": "DUP1"
    },
    "15650": {
      "op": "MLOAD"
    },
    "15651": {
      "op": "PUSH2",
      "value": "0x3D33"
    },
    "15654": {
      "op": "PUSH2",
      "value": "0x3D2E"
    },
    "15657": {
      "op": "DUP3"
    },
    "15658": {
      "op": "PUSH2",
      "value": "0x459B"
    },
    "15661": {
      "op": "JUMP"
    },
    "15662": {
      "op": "JUMPDEST"
    },
    "15663": {
      "op": "PUSH2",
      "value": "0x4574"
    },
    "15666": {
      "op": "JUMP"
    },
    "15667": {
      "op": "JUMPDEST"
    },
    "15668": {
      "op": "DUP2"
    },
    "15669": {
      "op": "DUP2"
    },
    "15670": {
      "op": "MSTORE"
    },
    "15671": {
      "op": "DUP4"
    },
    "15672": {
      "op": "DUP2"
    },
    "15673": {
      "op": "ADD"
    },
    "15674": {
      "op": "SWAP1"
    },
    "15675": {
      "op": "DUP4"
    },
    "15676": {
      "op": "DUP6"
    },
    "15677": {
      "op": "ADD"
    },
    "15678": {
      "op": "DUP6"
    },
    "15679": {
      "op": "DUP5"
    },
    "15680": {
      "op": "MUL"
    },
    "15681": {
      "op": "DUP6"
    },
    "15682": {
      "op": "ADD"
    },
    "15683": {
      "op": "DUP7"
    },
    "15684": {
      "op": "ADD"
    },
    "15685": {
      "op": "DUP10"
    },
    "15686": {
      "op": "LT"
    },
    "15687": {
      "op": "ISZERO"
    },
    "15688": {
      "op": "PUSH2",
      "value": "0x3D4F"
    },
    "15691": {
      "op": "JUMPI"
    },
    "15692": {
      "op": "DUP7"
    },
    "15693": {
      "op": "DUP8"
    },
    "15694": {
      "op": "REVERT"
    },
    "15695": {
      "op": "JUMPDEST"
    },
    "15696": {
      "op": "DUP7"
    },
    "15697": {
      "op": "SWAP5"
    },
    "15698": {
      "op": "POP"
    },
    "15699": {
      "op": "JUMPDEST"
    },
    "15700": {
      "op": "DUP4"
    },
    "15701": {
      "op": "DUP6"
    },
    "15702": {
      "op": "LT"
    },
    "15703": {
      "op": "ISZERO"
    },
    "15704": {
      "op": "PUSH2",
      "value": "0x3D71"
    },
    "15707": {
      "op": "JUMPI"
    },
    "15708": {
      "op": "DUP1"
    },
    "15709": {
      "op": "MLOAD"
    },
    "15710": {
      "op": "DUP4"
    },
    "15711": {
      "op": "MSTORE"
    },
    "15712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15714": {
      "op": "SWAP5"
    },
    "15715": {
      "op": "SWAP1"
    },
    "15716": {
      "op": "SWAP5"
    },
    "15717": {
      "op": "ADD"
    },
    "15718": {
      "op": "SWAP4"
    },
    "15719": {
      "op": "SWAP2"
    },
    "15720": {
      "op": "DUP6"
    },
    "15721": {
      "op": "ADD"
    },
    "15722": {
      "op": "SWAP2"
    },
    "15723": {
      "op": "DUP6"
    },
    "15724": {
      "op": "ADD"
    },
    "15725": {
      "op": "PUSH2",
      "value": "0x3D53"
    },
    "15728": {
      "op": "JUMP"
    },
    "15729": {
      "op": "JUMPDEST"
    },
    "15730": {
      "op": "POP"
    },
    "15731": {
      "op": "SWAP8"
    },
    "15732": {
      "op": "SWAP7"
    },
    "15733": {
      "op": "POP"
    },
    "15734": {
      "op": "POP"
    },
    "15735": {
      "op": "POP"
    },
    "15736": {
      "op": "POP"
    },
    "15737": {
      "op": "POP"
    },
    "15738": {
      "op": "POP"
    },
    "15739": {
      "op": "POP"
    },
    "15740": {
      "op": "JUMP"
    },
    "15741": {
      "op": "JUMPDEST"
    },
    "15742": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15744": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15746": {
      "op": "DUP3"
    },
    "15747": {
      "op": "DUP5"
    },
    "15748": {
      "op": "SUB"
    },
    "15749": {
      "op": "SLT"
    },
    "15750": {
      "op": "ISZERO"
    },
    "15751": {
      "op": "PUSH2",
      "value": "0x3D8E"
    },
    "15754": {
      "op": "JUMPI"
    },
    "15755": {
      "op": "DUP1"
    },
    "15756": {
      "op": "DUP2"
    },
    "15757": {
      "op": "REVERT"
    },
    "15758": {
      "op": "JUMPDEST"
    },
    "15759": {
      "op": "DUP2"
    },
    "15760": {
      "op": "CALLDATALOAD"
    },
    "15761": {
      "op": "PUSH2",
      "value": "0x697"
    },
    "15764": {
      "op": "DUP2"
    },
    "15765": {
      "op": "PUSH2",
      "value": "0x45FC"
    },
    "15768": {
      "op": "JUMP"
    },
    "15769": {
      "op": "JUMPDEST"
    },
    "15770": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15772": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15774": {
      "op": "DUP3"
    },
    "15775": {
      "op": "DUP5"
    },
    "15776": {
      "op": "SUB"
    },
    "15777": {
      "op": "SLT"
    },
    "15778": {
      "op": "ISZERO"
    },
    "15779": {
      "op": "PUSH2",
      "value": "0x3DAA"
    },
    "15782": {
      "op": "JUMPI"
    },
    "15783": {
      "op": "DUP1"
    },
    "15784": {
      "op": "DUP2"
    },
    "15785": {
      "op": "REVERT"
    },
    "15786": {
      "op": "JUMPDEST"
    },
    "15787": {
      "op": "DUP2"
    },
    "15788": {
      "op": "MLOAD"
    },
    "15789": {
      "op": "PUSH2",
      "value": "0x697"
    },
    "15792": {
      "op": "DUP2"
    },
    "15793": {
      "op": "PUSH2",
      "value": "0x45FC"
    },
    "15796": {
      "op": "JUMP"
    },
    "15797": {
      "op": "JUMPDEST"
    },
    "15798": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15800": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15802": {
      "op": "DUP3"
    },
    "15803": {
      "op": "DUP5"
    },
    "15804": {
      "op": "SUB"
    },
    "15805": {
      "op": "SLT"
    },
    "15806": {
      "op": "ISZERO"
    },
    "15807": {
      "op": "PUSH2",
      "value": "0x3DC6"
    },
    "15810": {
      "op": "JUMPI"
    },
    "15811": {
      "op": "DUP1"
    },
    "15812": {
      "op": "DUP2"
    },
    "15813": {
      "op": "REVERT"
    },
    "15814": {
      "op": "JUMPDEST"
    },
    "15815": {
      "op": "DUP2"
    },
    "15816": {
      "op": "CALLDATALOAD"
    },
    "15817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15819": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15821": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15823": {
      "op": "SHL"
    },
    "15824": {
      "op": "SUB"
    },
    "15825": {
      "op": "NOT"
    },
    "15826": {
      "op": "DUP2"
    },
    "15827": {
      "op": "AND"
    },
    "15828": {
      "op": "DUP2"
    },
    "15829": {
      "op": "EQ"
    },
    "15830": {
      "op": "PUSH2",
      "value": "0x697"
    },
    "15833": {
      "op": "JUMPI"
    },
    "15834": {
      "op": "DUP2"
    },
    "15835": {
      "op": "DUP3"
    },
    "15836": {
      "op": "REVERT"
    },
    "15837": {
      "op": "JUMPDEST"
    },
    "15838": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15840": {
      "op": "DUP1"
    },
    "15841": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15843": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15845": {
      "op": "DUP5"
    },
    "15846": {
      "op": "DUP7"
    },
    "15847": {
      "op": "SUB"
    },
    "15848": {
      "op": "SLT"
    },
    "15849": {
      "op": "ISZERO"
    },
    "15850": {
      "op": "PUSH2",
      "value": "0x3DF1"
    },
    "15853": {
      "op": "JUMPI"
    },
    "15854": {
      "op": "DUP1"
    },
    "15855": {
      "op": "DUP2"
    },
    "15856": {
      "op": "REVERT"
    },
    "15857": {
      "op": "JUMPDEST"
    },
    "15858": {
      "op": "DUP4"
    },
    "15859": {
      "op": "MLOAD"
    },
    "15860": {
      "op": "PUSH2",
      "value": "0x3DFC"
    },
    "15863": {
      "op": "DUP2"
    },
    "15864": {
      "op": "PUSH2",
      "value": "0x460A"
    },
    "15867": {
      "op": "JUMP"
    },
    "15868": {
      "op": "JUMPDEST"
    },
    "15869": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15871": {
      "op": "DUP6"
    },
    "15872": {
      "op": "ADD"
    },
    "15873": {
      "op": "MLOAD"
    },
    "15874": {
      "op": "SWAP1"
    },
    "15875": {
      "op": "SWAP4"
    },
    "15876": {
      "op": "POP"
    },
    "15877": {
      "op": "PUSH2",
      "value": "0x3E0D"
    },
    "15880": {
      "op": "DUP2"
    },
    "15881": {
      "op": "PUSH2",
      "value": "0x460A"
    },
    "15884": {
      "op": "JUMP"
    },
    "15885": {
      "op": "JUMPDEST"
    },
    "15886": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15888": {
      "op": "DUP6"
    },
    "15889": {
      "op": "ADD"
    },
    "15890": {
      "op": "MLOAD"
    },
    "15891": {
      "op": "SWAP1"
    },
    "15892": {
      "op": "SWAP3"
    },
    "15893": {
      "op": "POP"
    },
    "15894": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "15899": {
      "op": "DUP2"
    },
    "15900": {
      "op": "AND"
    },
    "15901": {
      "op": "DUP2"
    },
    "15902": {
      "op": "EQ"
    },
    "15903": {
      "op": "PUSH2",
      "value": "0x3E26"
    },
    "15906": {
      "op": "JUMPI"
    },
    "15907": {
      "op": "DUP2"
    },
    "15908": {
      "op": "DUP3"
    },
    "15909": {
      "op": "REVERT"
    },
    "15910": {
      "op": "JUMPDEST"
    },
    "15911": {
      "op": "DUP1"
    },
    "15912": {
      "op": "SWAP2"
    },
    "15913": {
      "op": "POP"
    },
    "15914": {
      "op": "POP"
    },
    "15915": {
      "op": "SWAP3"
    },
    "15916": {
      "op": "POP"
    },
    "15917": {
      "op": "SWAP3"
    },
    "15918": {
      "op": "POP"
    },
    "15919": {
      "op": "SWAP3"
    },
    "15920": {
      "op": "JUMP"
    },
    "15921": {
      "op": "JUMPDEST"
    },
    "15922": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15924": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15926": {
      "op": "DUP3"
    },
    "15927": {
      "op": "DUP5"
    },
    "15928": {
      "op": "SUB"
    },
    "15929": {
      "op": "SLT"
    },
    "15930": {
      "op": "ISZERO"
    },
    "15931": {
      "op": "PUSH2",
      "value": "0x3E42"
    },
    "15934": {
      "op": "JUMPI"
    },
    "15935": {
      "op": "DUP1"
    },
    "15936": {
      "op": "DUP2"
    },
    "15937": {
      "op": "REVERT"
    },
    "15938": {
      "op": "JUMPDEST"
    },
    "15939": {
      "op": "POP"
    },
    "15940": {
      "op": "MLOAD"
    },
    "15941": {
      "op": "SWAP2"
    },
    "15942": {
      "op": "SWAP1"
    },
    "15943": {
      "op": "POP"
    },
    "15944": {
      "op": "JUMP"
    },
    "15945": {
      "op": "JUMPDEST"
    },
    "15946": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15948": {
      "op": "DUP1"
    },
    "15949": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15951": {
      "op": "DUP4"
    },
    "15952": {
      "op": "DUP6"
    },
    "15953": {
      "op": "SUB"
    },
    "15954": {
      "op": "SLT"
    },
    "15955": {
      "op": "ISZERO"
    },
    "15956": {
      "op": "PUSH2",
      "value": "0x3E5B"
    },
    "15959": {
      "op": "JUMPI"
    },
    "15960": {
      "op": "DUP2"
    },
    "15961": {
      "op": "DUP3"
    },
    "15962": {
      "op": "REVERT"
    },
    "15963": {
      "op": "JUMPDEST"
    },
    "15964": {
      "op": "POP"
    },
    "15965": {
      "op": "POP"
    },
    "15966": {
      "op": "DUP1"
    },
    "15967": {
      "op": "MLOAD"
    },
    "15968": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15970": {
      "op": "SWAP1"
    },
    "15971": {
      "op": "SWAP2"
    },
    "15972": {
      "op": "ADD"
    },
    "15973": {
      "op": "MLOAD"
    },
    "15974": {
      "op": "SWAP1"
    },
    "15975": {
      "op": "SWAP3"
    },
    "15976": {
      "op": "SWAP1"
    },
    "15977": {
      "op": "SWAP2"
    },
    "15978": {
      "op": "POP"
    },
    "15979": {
      "op": "JUMP"
    },
    "15980": {
      "op": "JUMPDEST"
    },
    "15981": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15983": {
      "op": "DUP1"
    },
    "15984": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15986": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15988": {
      "op": "DUP5"
    },
    "15989": {
      "op": "DUP7"
    },
    "15990": {
      "op": "SUB"
    },
    "15991": {
      "op": "SLT"
    },
    "15992": {
      "op": "ISZERO"
    },
    "15993": {
      "op": "PUSH2",
      "value": "0x3E80"
    },
    "15996": {
      "op": "JUMPI"
    },
    "15997": {
      "op": "DUP1"
    },
    "15998": {
      "op": "DUP2"
    },
    "15999": {
      "op": "REVERT"
    },
    "16000": {
      "op": "JUMPDEST"
    },
    "16001": {
      "op": "DUP4"
    },
    "16002": {
      "op": "MLOAD"
    },
    "16003": {
      "op": "SWAP3"
    },
    "16004": {
      "op": "POP"
    },
    "16005": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16007": {
      "op": "DUP5"
    },
    "16008": {
      "op": "ADD"
    },
    "16009": {
      "op": "MLOAD"
    },
    "16010": {
      "op": "SWAP2"
    },
    "16011": {
      "op": "POP"
    },
    "16012": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16014": {
      "op": "DUP5"
    },
    "16015": {
      "op": "ADD"
    },
    "16016": {
      "op": "MLOAD"
    },
    "16017": {
      "op": "SWAP1"
    },
    "16018": {
      "op": "POP"
    },
    "16019": {
      "op": "SWAP3"
    },
    "16020": {
      "op": "POP"
    },
    "16021": {
      "op": "SWAP3"
    },
    "16022": {
      "op": "POP"
    },
    "16023": {
      "op": "SWAP3"
    },
    "16024": {
      "op": "JUMP"
    },
    "16025": {
      "op": "JUMPDEST"
    },
    "16026": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16028": {
      "op": "DUP2"
    },
    "16029": {
      "op": "MLOAD"
    },
    "16030": {
      "op": "DUP1"
    },
    "16031": {
      "op": "DUP5"
    },
    "16032": {
      "op": "MSTORE"
    },
    "16033": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16035": {
      "op": "DUP1"
    },
    "16036": {
      "op": "DUP6"
    },
    "16037": {
      "op": "ADD"
    },
    "16038": {
      "op": "SWAP5"
    },
    "16039": {
      "op": "POP"
    },
    "16040": {
      "op": "DUP1"
    },
    "16041": {
      "op": "DUP5"
    },
    "16042": {
      "op": "ADD"
    },
    "16043": {
      "op": "DUP4"
    },
    "16044": {
      "op": "JUMPDEST"
    },
    "16045": {
      "op": "DUP4"
    },
    "16046": {
      "op": "DUP2"
    },
    "16047": {
      "op": "LT"
    },
    "16048": {
      "op": "ISZERO"
    },
    "16049": {
      "op": "PUSH2",
      "value": "0x3ED1"
    },
    "16052": {
      "op": "JUMPI"
    },
    "16053": {
      "op": "DUP2"
    },
    "16054": {
      "op": "MLOAD"
    },
    "16055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16059": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16061": {
      "op": "SHL"
    },
    "16062": {
      "op": "SUB"
    },
    "16063": {
      "op": "AND"
    },
    "16064": {
      "op": "DUP8"
    },
    "16065": {
      "op": "MSTORE"
    },
    "16066": {
      "op": "SWAP6"
    },
    "16067": {
      "op": "DUP3"
    },
    "16068": {
      "op": "ADD"
    },
    "16069": {
      "op": "SWAP6"
    },
    "16070": {
      "op": "SWAP1"
    },
    "16071": {
      "op": "DUP3"
    },
    "16072": {
      "op": "ADD"
    },
    "16073": {
      "op": "SWAP1"
    },
    "16074": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16076": {
      "op": "ADD"
    },
    "16077": {
      "op": "PUSH2",
      "value": "0x3EAC"
    },
    "16080": {
      "op": "JUMP"
    },
    "16081": {
      "op": "JUMPDEST"
    },
    "16082": {
      "op": "POP"
    },
    "16083": {
      "op": "SWAP5"
    },
    "16084": {
      "op": "SWAP6"
    },
    "16085": {
      "op": "SWAP5"
    },
    "16086": {
      "op": "POP"
    },
    "16087": {
      "op": "POP"
    },
    "16088": {
      "op": "POP"
    },
    "16089": {
      "op": "POP"
    },
    "16090": {
      "op": "POP"
    },
    "16091": {
      "op": "JUMP"
    },
    "16092": {
      "op": "JUMPDEST"
    },
    "16093": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16095": {
      "op": "DUP3"
    },
    "16096": {
      "op": "MLOAD"
    },
    "16097": {
      "op": "PUSH2",
      "value": "0x3EEE"
    },
    "16100": {
      "op": "DUP2"
    },
    "16101": {
      "op": "DUP5"
    },
    "16102": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16104": {
      "op": "DUP8"
    },
    "16105": {
      "op": "ADD"
    },
    "16106": {
      "op": "PUSH2",
      "value": "0x45BB"
    },
    "16109": {
      "op": "JUMP"
    },
    "16110": {
      "op": "JUMPDEST"
    },
    "16111": {
      "op": "SWAP2"
    },
    "16112": {
      "op": "SWAP1"
    },
    "16113": {
      "op": "SWAP2"
    },
    "16114": {
      "op": "ADD"
    },
    "16115": {
      "op": "SWAP3"
    },
    "16116": {
      "op": "SWAP2"
    },
    "16117": {
      "op": "POP"
    },
    "16118": {
      "op": "POP"
    },
    "16119": {
      "op": "JUMP"
    },
    "16120": {
      "op": "JUMPDEST"
    },
    "16121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16125": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16127": {
      "op": "SHL"
    },
    "16128": {
      "op": "SUB"
    },
    "16129": {
      "op": "SWAP2"
    },
    "16130": {
      "op": "SWAP1"
    },
    "16131": {
      "op": "SWAP2"
    },
    "16132": {
      "op": "AND"
    },
    "16133": {
      "op": "DUP2"
    },
    "16134": {
      "op": "MSTORE"
    },
    "16135": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16137": {
      "op": "ADD"
    },
    "16138": {
      "op": "SWAP1"
    },
    "16139": {
      "op": "JUMP"
    },
    "16140": {
      "op": "JUMPDEST"
    },
    "16141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16145": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16147": {
      "op": "SHL"
    },
    "16148": {
      "op": "SUB"
    },
    "16149": {
      "op": "SWAP3"
    },
    "16150": {
      "op": "DUP4"
    },
    "16151": {
      "op": "AND"
    },
    "16152": {
      "op": "DUP2"
    },
    "16153": {
      "op": "MSTORE"
    },
    "16154": {
      "op": "SWAP2"
    },
    "16155": {
      "op": "AND"
    },
    "16156": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16158": {
      "op": "DUP3"
    },
    "16159": {
      "op": "ADD"
    },
    "16160": {
      "op": "MSTORE"
    },
    "16161": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16163": {
      "op": "ADD"
    },
    "16164": {
      "op": "SWAP1"
    },
    "16165": {
      "op": "JUMP"
    },
    "16166": {
      "op": "JUMPDEST"
    },
    "16167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16171": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16173": {
      "op": "SHL"
    },
    "16174": {
      "op": "SUB"
    },
    "16175": {
      "op": "SWAP8"
    },
    "16176": {
      "op": "DUP9"
    },
    "16177": {
      "op": "AND"
    },
    "16178": {
      "op": "DUP2"
    },
    "16179": {
      "op": "MSTORE"
    },
    "16180": {
      "op": "SWAP6"
    },
    "16181": {
      "op": "DUP8"
    },
    "16182": {
      "op": "AND"
    },
    "16183": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16185": {
      "op": "DUP8"
    },
    "16186": {
      "op": "ADD"
    },
    "16187": {
      "op": "MSTORE"
    },
    "16188": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16190": {
      "op": "DUP7"
    },
    "16191": {
      "op": "ADD"
    },
    "16192": {
      "op": "SWAP5"
    },
    "16193": {
      "op": "SWAP1"
    },
    "16194": {
      "op": "SWAP5"
    },
    "16195": {
      "op": "MSTORE"
    },
    "16196": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16198": {
      "op": "DUP6"
    },
    "16199": {
      "op": "ADD"
    },
    "16200": {
      "op": "SWAP3"
    },
    "16201": {
      "op": "SWAP1"
    },
    "16202": {
      "op": "SWAP3"
    },
    "16203": {
      "op": "MSTORE"
    },
    "16204": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16206": {
      "op": "DUP5"
    },
    "16207": {
      "op": "ADD"
    },
    "16208": {
      "op": "MSTORE"
    },
    "16209": {
      "op": "SWAP1"
    },
    "16210": {
      "op": "SWAP3"
    },
    "16211": {
      "op": "AND"
    },
    "16212": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16214": {
      "op": "DUP3"
    },
    "16215": {
      "op": "ADD"
    },
    "16216": {
      "op": "MSTORE"
    },
    "16217": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "16219": {
      "op": "DUP2"
    },
    "16220": {
      "op": "ADD"
    },
    "16221": {
      "op": "SWAP2"
    },
    "16222": {
      "op": "SWAP1"
    },
    "16223": {
      "op": "SWAP2"
    },
    "16224": {
      "op": "MSTORE"
    },
    "16225": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16227": {
      "op": "ADD"
    },
    "16228": {
      "op": "SWAP1"
    },
    "16229": {
      "op": "JUMP"
    },
    "16230": {
      "op": "JUMPDEST"
    },
    "16231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16235": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16237": {
      "op": "SHL"
    },
    "16238": {
      "op": "SUB"
    },
    "16239": {
      "op": "SWAP9"
    },
    "16240": {
      "op": "DUP10"
    },
    "16241": {
      "op": "AND"
    },
    "16242": {
      "op": "DUP2"
    },
    "16243": {
      "op": "MSTORE"
    },
    "16244": {
      "op": "SWAP7"
    },
    "16245": {
      "op": "DUP9"
    },
    "16246": {
      "op": "AND"
    },
    "16247": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16249": {
      "op": "DUP9"
    },
    "16250": {
      "op": "ADD"
    },
    "16251": {
      "op": "MSTORE"
    },
    "16252": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16254": {
      "op": "DUP8"
    },
    "16255": {
      "op": "ADD"
    },
    "16256": {
      "op": "SWAP6"
    },
    "16257": {
      "op": "SWAP1"
    },
    "16258": {
      "op": "SWAP6"
    },
    "16259": {
      "op": "MSTORE"
    },
    "16260": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16262": {
      "op": "DUP7"
    },
    "16263": {
      "op": "ADD"
    },
    "16264": {
      "op": "SWAP4"
    },
    "16265": {
      "op": "SWAP1"
    },
    "16266": {
      "op": "SWAP4"
    },
    "16267": {
      "op": "MSTORE"
    },
    "16268": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16270": {
      "op": "DUP6"
    },
    "16271": {
      "op": "ADD"
    },
    "16272": {
      "op": "SWAP2"
    },
    "16273": {
      "op": "SWAP1"
    },
    "16274": {
      "op": "SWAP2"
    },
    "16275": {
      "op": "MSTORE"
    },
    "16276": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16278": {
      "op": "DUP5"
    },
    "16279": {
      "op": "ADD"
    },
    "16280": {
      "op": "MSTORE"
    },
    "16281": {
      "op": "SWAP1"
    },
    "16282": {
      "op": "SWAP3"
    },
    "16283": {
      "op": "AND"
    },
    "16284": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "16286": {
      "op": "DUP3"
    },
    "16287": {
      "op": "ADD"
    },
    "16288": {
      "op": "MSTORE"
    },
    "16289": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16291": {
      "op": "DUP2"
    },
    "16292": {
      "op": "ADD"
    },
    "16293": {
      "op": "SWAP2"
    },
    "16294": {
      "op": "SWAP1"
    },
    "16295": {
      "op": "SWAP2"
    },
    "16296": {
      "op": "MSTORE"
    },
    "16297": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "16300": {
      "op": "ADD"
    },
    "16301": {
      "op": "SWAP1"
    },
    "16302": {
      "op": "JUMP"
    },
    "16303": {
      "op": "JUMPDEST"
    },
    "16304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16308": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16310": {
      "op": "SHL"
    },
    "16311": {
      "op": "SUB"
    },
    "16312": {
      "op": "SWAP3"
    },
    "16313": {
      "op": "SWAP1"
    },
    "16314": {
      "op": "SWAP3"
    },
    "16315": {
      "op": "AND"
    },
    "16316": {
      "op": "DUP3"
    },
    "16317": {
      "op": "MSTORE"
    },
    "16318": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16320": {
      "op": "DUP3"
    },
    "16321": {
      "op": "ADD"
    },
    "16322": {
      "op": "MSTORE"
    },
    "16323": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16325": {
      "op": "ADD"
    },
    "16326": {
      "op": "SWAP1"
    },
    "16327": {
      "op": "JUMP"
    },
    "16328": {
      "op": "JUMPDEST"
    },
    "16329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16331": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16333": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16335": {
      "op": "SHL"
    },
    "16336": {
      "op": "SUB"
    },
    "16337": {
      "op": "SWAP4"
    },
    "16338": {
      "op": "SWAP1"
    },
    "16339": {
      "op": "SWAP4"
    },
    "16340": {
      "op": "AND"
    },
    "16341": {
      "op": "DUP4"
    },
    "16342": {
      "op": "MSTORE"
    },
    "16343": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16345": {
      "op": "DUP4"
    },
    "16346": {
      "op": "ADD"
    },
    "16347": {
      "op": "SWAP2"
    },
    "16348": {
      "op": "SWAP1"
    },
    "16349": {
      "op": "SWAP2"
    },
    "16350": {
      "op": "MSTORE"
    },
    "16351": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16353": {
      "op": "DUP3"
    },
    "16354": {
      "op": "ADD"
    },
    "16355": {
      "op": "MSTORE"
    },
    "16356": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16358": {
      "op": "ADD"
    },
    "16359": {
      "op": "SWAP1"
    },
    "16360": {
      "op": "JUMP"
    },
    "16361": {
      "op": "JUMPDEST"
    },
    "16362": {
      "op": "SWAP1"
    },
    "16363": {
      "op": "ISZERO"
    },
    "16364": {
      "op": "ISZERO"
    },
    "16365": {
      "op": "DUP2"
    },
    "16366": {
      "op": "MSTORE"
    },
    "16367": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16369": {
      "op": "ADD"
    },
    "16370": {
      "op": "SWAP1"
    },
    "16371": {
      "op": "JUMP"
    },
    "16372": {
      "op": "JUMPDEST"
    },
    "16373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16377": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16379": {
      "op": "SHL"
    },
    "16380": {
      "op": "SUB"
    },
    "16381": {
      "op": "NOT"
    },
    "16382": {
      "op": "SWAP2"
    },
    "16383": {
      "op": "SWAP1"
    },
    "16384": {
      "op": "SWAP2"
    },
    "16385": {
      "op": "AND"
    },
    "16386": {
      "op": "DUP2"
    },
    "16387": {
      "op": "MSTORE"
    },
    "16388": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16390": {
      "op": "ADD"
    },
    "16391": {
      "op": "SWAP1"
    },
    "16392": {
      "op": "JUMP"
    },
    "16393": {
      "op": "JUMPDEST"
    },
    "16394": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16396": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16398": {
      "op": "DUP3"
    },
    "16399": {
      "op": "MSTORE"
    },
    "16400": {
      "op": "DUP3"
    },
    "16401": {
      "op": "MLOAD"
    },
    "16402": {
      "op": "DUP1"
    },
    "16403": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16405": {
      "op": "DUP5"
    },
    "16406": {
      "op": "ADD"
    },
    "16407": {
      "op": "MSTORE"
    },
    "16408": {
      "op": "PUSH2",
      "value": "0x4028"
    },
    "16411": {
      "op": "DUP2"
    },
    "16412": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16414": {
      "op": "DUP6"
    },
    "16415": {
      "op": "ADD"
    },
    "16416": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16418": {
      "op": "DUP8"
    },
    "16419": {
      "op": "ADD"
    },
    "16420": {
      "op": "PUSH2",
      "value": "0x45BB"
    },
    "16423": {
      "op": "JUMP"
    },
    "16424": {
      "op": "JUMPDEST"
    },
    "16425": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16427": {
      "op": "ADD"
    },
    "16428": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16430": {
      "op": "NOT"
    },
    "16431": {
      "op": "AND"
    },
    "16432": {
      "op": "SWAP2"
    },
    "16433": {
      "op": "SWAP1"
    },
    "16434": {
      "op": "SWAP2"
    },
    "16435": {
      "op": "ADD"
    },
    "16436": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16438": {
      "op": "ADD"
    },
    "16439": {
      "op": "SWAP3"
    },
    "16440": {
      "op": "SWAP2"
    },
    "16441": {
      "op": "POP"
    },
    "16442": {
      "op": "POP"
    },
    "16443": {
      "op": "JUMP"
    },
    "16444": {
      "op": "JUMPDEST"
    },
    "16445": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16447": {
      "op": "DUP1"
    },
    "16448": {
      "op": "DUP3"
    },
    "16449": {
      "op": "MSTORE"
    },
    "16450": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "16452": {
      "op": "SWAP1"
    },
    "16453": {
      "op": "DUP3"
    },
    "16454": {
      "op": "ADD"
    },
    "16455": {
      "op": "MSTORE"
    },
    "16456": {
      "op": "PUSH17",
      "value": "0x1C99599D5B99081155120819985A5B1959"
    },
    "16474": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "16476": {
      "op": "SHL"
    },
    "16477": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16479": {
      "op": "DUP3"
    },
    "16480": {
      "op": "ADD"
    },
    "16481": {
      "op": "MSTORE"
    },
    "16482": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16484": {
      "op": "ADD"
    },
    "16485": {
      "op": "SWAP1"
    },
    "16486": {
      "op": "JUMP"
    },
    "16487": {
      "op": "JUMPDEST"
    },
    "16488": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16490": {
      "op": "DUP1"
    },
    "16491": {
      "op": "DUP3"
    },
    "16492": {
      "op": "MSTORE"
    },
    "16493": {
      "op": "PUSH1",
      "value": "0x8"
    },
    "16495": {
      "op": "SWAP1"
    },
    "16496": {
      "op": "DUP3"
    },
    "16497": {
      "op": "ADD"
    },
    "16498": {
      "op": "MSTORE"
    },
    "16499": {
      "op": "PUSH8",
      "value": "0x10B0B6BA2126B4B7"
    },
    "16508": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "16510": {
      "op": "SHL"
    },
    "16511": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16513": {
      "op": "DUP3"
    },
    "16514": {
      "op": "ADD"
    },
    "16515": {
      "op": "MSTORE"
    },
    "16516": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16518": {
      "op": "ADD"
    },
    "16519": {
      "op": "SWAP1"
    },
    "16520": {
      "op": "JUMP"
    },
    "16521": {
      "op": "JUMPDEST"
    },
    "16522": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16524": {
      "op": "DUP1"
    },
    "16525": {
      "op": "DUP3"
    },
    "16526": {
      "op": "MSTORE"
    },
    "16527": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "16529": {
      "op": "SWAP1"
    },
    "16530": {
      "op": "DUP3"
    },
    "16531": {
      "op": "ADD"
    },
    "16532": {
      "op": "MSTORE"
    },
    "16533": {
      "op": "PUSH32",
      "value": "0x6E6F74207468652070656E64696E6720676F7665726E6F720000000000000000"
    },
    "16566": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16568": {
      "op": "DUP3"
    },
    "16569": {
      "op": "ADD"
    },
    "16570": {
      "op": "MSTORE"
    },
    "16571": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16573": {
      "op": "ADD"
    },
    "16574": {
      "op": "SWAP1"
    },
    "16575": {
      "op": "JUMP"
    },
    "16576": {
      "op": "JUMPDEST"
    },
    "16577": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16579": {
      "op": "DUP1"
    },
    "16580": {
      "op": "DUP3"
    },
    "16581": {
      "op": "MSTORE"
    },
    "16582": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "16584": {
      "op": "SWAP1"
    },
    "16585": {
      "op": "DUP3"
    },
    "16586": {
      "op": "ADD"
    },
    "16587": {
      "op": "MSTORE"
    },
    "16588": {
      "op": "PUSH32",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "16621": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16623": {
      "op": "DUP3"
    },
    "16624": {
      "op": "ADD"
    },
    "16625": {
      "op": "MSTORE"
    },
    "16626": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16628": {
      "op": "ADD"
    },
    "16629": {
      "op": "SWAP1"
    },
    "16630": {
      "op": "JUMP"
    },
    "16631": {
      "op": "JUMPDEST"
    },
    "16632": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16634": {
      "op": "DUP1"
    },
    "16635": {
      "op": "DUP3"
    },
    "16636": {
      "op": "MSTORE"
    },
    "16637": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "16639": {
      "op": "SWAP1"
    },
    "16640": {
      "op": "DUP3"
    },
    "16641": {
      "op": "ADD"
    },
    "16642": {
      "op": "MSTORE"
    },
    "16643": {
      "op": "PUSH32",
      "value": "0x6F7261636C65206E6F7420737570706F7274206C7020746F6B656E0000000000"
    },
    "16676": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16678": {
      "op": "DUP3"
    },
    "16679": {
      "op": "ADD"
    },
    "16680": {
      "op": "MSTORE"
    },
    "16681": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16683": {
      "op": "ADD"
    },
    "16684": {
      "op": "SWAP1"
    },
    "16685": {
      "op": "JUMP"
    },
    "16686": {
      "op": "JUMPDEST"
    },
    "16687": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16689": {
      "op": "DUP1"
    },
    "16690": {
      "op": "DUP3"
    },
    "16691": {
      "op": "MSTORE"
    },
    "16692": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "16694": {
      "op": "SWAP1"
    },
    "16695": {
      "op": "DUP3"
    },
    "16696": {
      "op": "ADD"
    },
    "16697": {
      "op": "MSTORE"
    },
    "16698": {
      "op": "PUSH32",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "16731": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16733": {
      "op": "DUP3"
    },
    "16734": {
      "op": "ADD"
    },
    "16735": {
      "op": "MSTORE"
    },
    "16736": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16738": {
      "op": "ADD"
    },
    "16739": {
      "op": "SWAP1"
    },
    "16740": {
      "op": "JUMP"
    },
    "16741": {
      "op": "JUMPDEST"
    },
    "16742": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16744": {
      "op": "DUP1"
    },
    "16745": {
      "op": "DUP3"
    },
    "16746": {
      "op": "MSTORE"
    },
    "16747": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "16749": {
      "op": "SWAP1"
    },
    "16750": {
      "op": "DUP3"
    },
    "16751": {
      "op": "ADD"
    },
    "16752": {
      "op": "MSTORE"
    },
    "16753": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "16786": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16788": {
      "op": "DUP3"
    },
    "16789": {
      "op": "ADD"
    },
    "16790": {
      "op": "MSTORE"
    },
    "16791": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "16798": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "16800": {
      "op": "SHL"
    },
    "16801": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16803": {
      "op": "DUP3"
    },
    "16804": {
      "op": "ADD"
    },
    "16805": {
      "op": "MSTORE"
    },
    "16806": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16808": {
      "op": "ADD"
    },
    "16809": {
      "op": "SWAP1"
    },
    "16810": {
      "op": "JUMP"
    },
    "16811": {
      "op": "JUMPDEST"
    },
    "16812": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16814": {
      "op": "DUP1"
    },
    "16815": {
      "op": "DUP3"
    },
    "16816": {
      "op": "MSTORE"
    },
    "16817": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "16819": {
      "op": "SWAP1"
    },
    "16820": {
      "op": "DUP3"
    },
    "16821": {
      "op": "ADD"
    },
    "16822": {
      "op": "MSTORE"
    },
    "16823": {
      "op": "PUSH32",
      "value": "0x536166654D6174683A206469766973696F6E206279207A65726F000000000000"
    },
    "16856": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16858": {
      "op": "DUP3"
    },
    "16859": {
      "op": "ADD"
    },
    "16860": {
      "op": "MSTORE"
    },
    "16861": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16863": {
      "op": "ADD"
    },
    "16864": {
      "op": "SWAP1"
    },
    "16865": {
      "op": "JUMP"
    },
    "16866": {
      "op": "JUMPDEST"
    },
    "16867": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16869": {
      "op": "DUP1"
    },
    "16870": {
      "op": "DUP3"
    },
    "16871": {
      "op": "MSTORE"
    },
    "16872": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "16874": {
      "op": "SWAP1"
    },
    "16875": {
      "op": "DUP3"
    },
    "16876": {
      "op": "ADD"
    },
    "16877": {
      "op": "MSTORE"
    },
    "16878": {
      "op": "PUSH16",
      "value": "0x3737BA103A34329033B7BB32B93737B9"
    },
    "16895": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "16897": {
      "op": "SHL"
    },
    "16898": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16900": {
      "op": "DUP3"
    },
    "16901": {
      "op": "ADD"
    },
    "16902": {
      "op": "MSTORE"
    },
    "16903": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16905": {
      "op": "ADD"
    },
    "16906": {
      "op": "SWAP1"
    },
    "16907": {
      "op": "JUMP"
    },
    "16908": {
      "op": "JUMPDEST"
    },
    "16909": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16911": {
      "op": "DUP1"
    },
    "16912": {
      "op": "DUP3"
    },
    "16913": {
      "op": "MSTORE"
    },
    "16914": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "16916": {
      "op": "SWAP1"
    },
    "16917": {
      "op": "DUP3"
    },
    "16918": {
      "op": "ADD"
    },
    "16919": {
      "op": "MSTORE"
    },
    "16920": {
      "op": "PUSH32",
      "value": "0x6C70546F6B656E732026207374617475736573206C656E677468206D69736D61"
    },
    "16953": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16955": {
      "op": "DUP3"
    },
    "16956": {
      "op": "ADD"
    },
    "16957": {
      "op": "MSTORE"
    },
    "16958": {
      "op": "PUSH5",
      "value": "0x1D18DA1959"
    },
    "16964": {
      "op": "PUSH1",
      "value": "0xDA"
    },
    "16966": {
      "op": "SHL"
    },
    "16967": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16969": {
      "op": "DUP3"
    },
    "16970": {
      "op": "ADD"
    },
    "16971": {
      "op": "MSTORE"
    },
    "16972": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16974": {
      "op": "ADD"
    },
    "16975": {
      "op": "SWAP1"
    },
    "16976": {
      "op": "JUMP"
    },
    "16977": {
      "op": "JUMPDEST"
    },
    "16978": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16980": {
      "op": "DUP1"
    },
    "16981": {
      "op": "DUP3"
    },
    "16982": {
      "op": "MSTORE"
    },
    "16983": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "16985": {
      "op": "SWAP1"
    },
    "16986": {
      "op": "DUP3"
    },
    "16987": {
      "op": "ADD"
    },
    "16988": {
      "op": "MSTORE"
    },
    "16989": {
      "op": "PUSH11",
      "value": "0x3737903638103A37B5B2B7"
    },
    "17001": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "17003": {
      "op": "SHL"
    },
    "17004": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17006": {
      "op": "DUP3"
    },
    "17007": {
      "op": "ADD"
    },
    "17008": {
      "op": "MSTORE"
    },
    "17009": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17011": {
      "op": "ADD"
    },
    "17012": {
      "op": "SWAP1"
    },
    "17013": {
      "op": "JUMP"
    },
    "17014": {
      "op": "JUMPDEST"
    },
    "17015": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17017": {
      "op": "DUP1"
    },
    "17018": {
      "op": "DUP3"
    },
    "17019": {
      "op": "MSTORE"
    },
    "17020": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "17022": {
      "op": "SWAP1"
    },
    "17023": {
      "op": "DUP3"
    },
    "17024": {
      "op": "ADD"
    },
    "17025": {
      "op": "MSTORE"
    },
    "17026": {
      "op": "PUSH18",
      "value": "0x34B731B7B93932B1BA103638103A37B5B2B7"
    },
    "17045": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "17047": {
      "op": "SHL"
    },
    "17048": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17050": {
      "op": "DUP3"
    },
    "17051": {
      "op": "ADD"
    },
    "17052": {
      "op": "MSTORE"
    },
    "17053": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17055": {
      "op": "ADD"
    },
    "17056": {
      "op": "SWAP1"
    },
    "17057": {
      "op": "JUMP"
    },
    "17058": {
      "op": "JUMPDEST"
    },
    "17059": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17061": {
      "op": "DUP1"
    },
    "17062": {
      "op": "DUP3"
    },
    "17063": {
      "op": "MSTORE"
    },
    "17064": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "17066": {
      "op": "SWAP1"
    },
    "17067": {
      "op": "DUP3"
    },
    "17068": {
      "op": "ADD"
    },
    "17069": {
      "op": "MSTORE"
    },
    "17070": {
      "op": "PUSH32",
      "value": "0x6C7020746F6B656E206E6F742077686974656C69737465640000000000000000"
    },
    "17103": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17105": {
      "op": "DUP3"
    },
    "17106": {
      "op": "ADD"
    },
    "17107": {
      "op": "MSTORE"
    },
    "17108": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17110": {
      "op": "ADD"
    },
    "17111": {
      "op": "SWAP1"
    },
    "17112": {
      "op": "JUMP"
    },
    "17113": {
      "op": "JUMPDEST"
    },
    "17114": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17116": {
      "op": "DUP1"
    },
    "17117": {
      "op": "DUP3"
    },
    "17118": {
      "op": "MSTORE"
    },
    "17119": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "17121": {
      "op": "SWAP1"
    },
    "17122": {
      "op": "DUP3"
    },
    "17123": {
      "op": "ADD"
    },
    "17124": {
      "op": "MSTORE"
    },
    "17125": {
      "op": "PUSH32",
      "value": "0x455448206D75737420636F6D652066726F6D2057455448000000000000000000"
    },
    "17158": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17160": {
      "op": "DUP3"
    },
    "17161": {
      "op": "ADD"
    },
    "17162": {
      "op": "MSTORE"
    },
    "17163": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17165": {
      "op": "ADD"
    },
    "17166": {
      "op": "SWAP1"
    },
    "17167": {
      "op": "JUMP"
    },
    "17168": {
      "op": "JUMPDEST"
    },
    "17169": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17171": {
      "op": "DUP1"
    },
    "17172": {
      "op": "DUP3"
    },
    "17173": {
      "op": "MSTORE"
    },
    "17174": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "17176": {
      "op": "SWAP1"
    },
    "17177": {
      "op": "DUP3"
    },
    "17178": {
      "op": "ADD"
    },
    "17179": {
      "op": "MSTORE"
    },
    "17180": {
      "op": "PUSH32",
      "value": "0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F"
    },
    "17213": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17215": {
      "op": "DUP3"
    },
    "17216": {
      "op": "ADD"
    },
    "17217": {
      "op": "MSTORE"
    },
    "17218": {
      "op": "PUSH1",
      "value": "0x77"
    },
    "17220": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "17222": {
      "op": "SHL"
    },
    "17223": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17225": {
      "op": "DUP3"
    },
    "17226": {
      "op": "ADD"
    },
    "17227": {
      "op": "MSTORE"
    },
    "17228": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17230": {
      "op": "ADD"
    },
    "17231": {
      "op": "SWAP1"
    },
    "17232": {
      "op": "JUMP"
    },
    "17233": {
      "op": "JUMPDEST"
    },
    "17234": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17236": {
      "op": "DUP1"
    },
    "17237": {
      "op": "DUP3"
    },
    "17238": {
      "op": "MSTORE"
    },
    "17239": {
      "op": "PUSH1",
      "value": "0x8"
    },
    "17241": {
      "op": "SWAP1"
    },
    "17242": {
      "op": "DUP3"
    },
    "17243": {
      "op": "ADD"
    },
    "17244": {
      "op": "MSTORE"
    },
    "17245": {
      "op": "PUSH8",
      "value": "0x10B0B6BA20A6B4B7"
    },
    "17254": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "17256": {
      "op": "SHL"
    },
    "17257": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17259": {
      "op": "DUP3"
    },
    "17260": {
      "op": "ADD"
    },
    "17261": {
      "op": "MSTORE"
    },
    "17262": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17264": {
      "op": "ADD"
    },
    "17265": {
      "op": "SWAP1"
    },
    "17266": {
      "op": "JUMP"
    },
    "17267": {
      "op": "JUMPDEST"
    },
    "17268": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17270": {
      "op": "DUP1"
    },
    "17271": {
      "op": "DUP3"
    },
    "17272": {
      "op": "MSTORE"
    },
    "17273": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "17275": {
      "op": "SWAP1"
    },
    "17276": {
      "op": "DUP3"
    },
    "17277": {
      "op": "ADD"
    },
    "17278": {
      "op": "MSTORE"
    },
    "17279": {
      "op": "PUSH32",
      "value": "0x636F6C6C61746572616C20746F6B656E202620776D617374657263686566206D"
    },
    "17312": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17314": {
      "op": "DUP3"
    },
    "17315": {
      "op": "ADD"
    },
    "17316": {
      "op": "MSTORE"
    },
    "17317": {
      "op": "PUSH9",
      "value": "0x1A5CDB585D18DA1959"
    },
    "17327": {
      "op": "PUSH1",
      "value": "0xBA"
    },
    "17329": {
      "op": "SHL"
    },
    "17330": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17332": {
      "op": "DUP3"
    },
    "17333": {
      "op": "ADD"
    },
    "17334": {
      "op": "MSTORE"
    },
    "17335": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17337": {
      "op": "ADD"
    },
    "17338": {
      "op": "SWAP1"
    },
    "17339": {
      "op": "JUMP"
    },
    "17340": {
      "op": "JUMPDEST"
    },
    "17341": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17343": {
      "op": "DUP1"
    },
    "17344": {
      "op": "DUP3"
    },
    "17345": {
      "op": "MSTORE"
    },
    "17346": {
      "op": "PUSH1",
      "value": "0x8"
    },
    "17348": {
      "op": "SWAP1"
    },
    "17349": {
      "op": "DUP3"
    },
    "17350": {
      "op": "ADD"
    },
    "17351": {
      "op": "MSTORE"
    },
    "17352": {
      "op": "PUSH8",
      "value": "0x14995D995C9CD959"
    },
    "17361": {
      "op": "PUSH1",
      "value": "0xC2"
    },
    "17363": {
      "op": "SHL"
    },
    "17364": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17366": {
      "op": "DUP3"
    },
    "17367": {
      "op": "ADD"
    },
    "17368": {
      "op": "MSTORE"
    },
    "17369": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17371": {
      "op": "ADD"
    },
    "17372": {
      "op": "SWAP1"
    },
    "17373": {
      "op": "JUMP"
    },
    "17374": {
      "op": "JUMPDEST"
    },
    "17375": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17377": {
      "op": "DUP1"
    },
    "17378": {
      "op": "DUP3"
    },
    "17379": {
      "op": "MSTORE"
    },
    "17380": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "17382": {
      "op": "SWAP1"
    },
    "17383": {
      "op": "DUP3"
    },
    "17384": {
      "op": "ADD"
    },
    "17385": {
      "op": "MSTORE"
    },
    "17386": {
      "op": "PUSH13",
      "value": "0x1A5B98DBDC9C9958DD081C1A59"
    },
    "17400": {
      "op": "PUSH1",
      "value": "0x9A"
    },
    "17402": {
      "op": "SHL"
    },
    "17403": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17405": {
      "op": "DUP3"
    },
    "17406": {
      "op": "ADD"
    },
    "17407": {
      "op": "MSTORE"
    },
    "17408": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17410": {
      "op": "ADD"
    },
    "17411": {
      "op": "SWAP1"
    },
    "17412": {
      "op": "JUMP"
    },
    "17413": {
      "op": "JUMPDEST"
    },
    "17414": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17416": {
      "op": "DUP1"
    },
    "17417": {
      "op": "DUP3"
    },
    "17418": {
      "op": "MSTORE"
    },
    "17419": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "17421": {
      "op": "SWAP1"
    },
    "17422": {
      "op": "DUP3"
    },
    "17423": {
      "op": "ADD"
    },
    "17424": {
      "op": "MSTORE"
    },
    "17425": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "17458": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17460": {
      "op": "DUP3"
    },
    "17461": {
      "op": "ADD"
    },
    "17462": {
      "op": "MSTORE"
    },
    "17463": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17465": {
      "op": "ADD"
    },
    "17466": {
      "op": "SWAP1"
    },
    "17467": {
      "op": "JUMP"
    },
    "17468": {
      "op": "JUMPDEST"
    },
    "17469": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17471": {
      "op": "DUP1"
    },
    "17472": {
      "op": "DUP3"
    },
    "17473": {
      "op": "MSTORE"
    },
    "17474": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "17476": {
      "op": "SWAP1"
    },
    "17477": {
      "op": "DUP3"
    },
    "17478": {
      "op": "ADD"
    },
    "17479": {
      "op": "MSTORE"
    },
    "17480": {
      "op": "PUSH20",
      "value": "0x696E636F727265637420756E6465726C79696E67"
    },
    "17501": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17503": {
      "op": "SHL"
    },
    "17504": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17506": {
      "op": "DUP3"
    },
    "17507": {
      "op": "ADD"
    },
    "17508": {
      "op": "MSTORE"
    },
    "17509": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17511": {
      "op": "ADD"
    },
    "17512": {
      "op": "SWAP1"
    },
    "17513": {
      "op": "JUMP"
    },
    "17514": {
      "op": "JUMPDEST"
    },
    "17515": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17517": {
      "op": "DUP1"
    },
    "17518": {
      "op": "DUP3"
    },
    "17519": {
      "op": "MSTORE"
    },
    "17520": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "17522": {
      "op": "SWAP1"
    },
    "17523": {
      "op": "DUP3"
    },
    "17524": {
      "op": "ADD"
    },
    "17525": {
      "op": "MSTORE"
    },
    "17526": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "17559": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17561": {
      "op": "DUP3"
    },
    "17562": {
      "op": "ADD"
    },
    "17563": {
      "op": "MSTORE"
    },
    "17564": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "17575": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "17577": {
      "op": "SHL"
    },
    "17578": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17580": {
      "op": "DUP3"
    },
    "17581": {
      "op": "ADD"
    },
    "17582": {
      "op": "MSTORE"
    },
    "17583": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17585": {
      "op": "ADD"
    },
    "17586": {
      "op": "SWAP1"
    },
    "17587": {
      "op": "JUMP"
    },
    "17588": {
      "op": "JUMPDEST"
    },
    "17589": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17591": {
      "op": "DUP1"
    },
    "17592": {
      "op": "DUP3"
    },
    "17593": {
      "op": "MSTORE"
    },
    "17594": {
      "op": "PUSH1",
      "value": "0x36"
    },
    "17596": {
      "op": "SWAP1"
    },
    "17597": {
      "op": "DUP3"
    },
    "17598": {
      "op": "ADD"
    },
    "17599": {
      "op": "MSTORE"
    },
    "17600": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F"
    },
    "17633": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17635": {
      "op": "DUP3"
    },
    "17636": {
      "op": "ADD"
    },
    "17637": {
      "op": "MSTORE"
    },
    "17638": {
      "op": "PUSH22",
      "value": "0x20746F206E6F6E2D7A65726F20616C6C6F77616E6365"
    },
    "17661": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "17663": {
      "op": "SHL"
    },
    "17664": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17666": {
      "op": "DUP3"
    },
    "17667": {
      "op": "ADD"
    },
    "17668": {
      "op": "MSTORE"
    },
    "17669": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17671": {
      "op": "ADD"
    },
    "17672": {
      "op": "SWAP1"
    },
    "17673": {
      "op": "JUMP"
    },
    "17674": {
      "op": "JUMPDEST"
    },
    "17675": {
      "op": "SWAP1"
    },
    "17676": {
      "op": "DUP2"
    },
    "17677": {
      "op": "MSTORE"
    },
    "17678": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17680": {
      "op": "ADD"
    },
    "17681": {
      "op": "SWAP1"
    },
    "17682": {
      "op": "JUMP"
    },
    "17683": {
      "op": "JUMPDEST"
    },
    "17684": {
      "op": "SWAP2"
    },
    "17685": {
      "op": "DUP3"
    },
    "17686": {
      "op": "MSTORE"
    },
    "17687": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17689": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17691": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17693": {
      "op": "SHL"
    },
    "17694": {
      "op": "SUB"
    },
    "17695": {
      "op": "AND"
    },
    "17696": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17698": {
      "op": "DUP3"
    },
    "17699": {
      "op": "ADD"
    },
    "17700": {
      "op": "MSTORE"
    },
    "17701": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17703": {
      "op": "ADD"
    },
    "17704": {
      "op": "SWAP1"
    },
    "17705": {
      "op": "JUMP"
    },
    "17706": {
      "op": "JUMPDEST"
    },
    "17707": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17709": {
      "op": "DUP7"
    },
    "17710": {
      "op": "DUP3"
    },
    "17711": {
      "op": "MSTORE"
    },
    "17712": {
      "op": "DUP6"
    },
    "17713": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17715": {
      "op": "DUP4"
    },
    "17716": {
      "op": "ADD"
    },
    "17717": {
      "op": "MSTORE"
    },
    "17718": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17720": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17722": {
      "op": "DUP4"
    },
    "17723": {
      "op": "ADD"
    },
    "17724": {
      "op": "MSTORE"
    },
    "17725": {
      "op": "PUSH2",
      "value": "0x4549"
    },
    "17728": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17730": {
      "op": "DUP4"
    },
    "17731": {
      "op": "ADD"
    },
    "17732": {
      "op": "DUP7"
    },
    "17733": {
      "op": "PUSH2",
      "value": "0x3E99"
    },
    "17736": {
      "op": "JUMP"
    },
    "17737": {
      "op": "JUMPDEST"
    },
    "17738": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17740": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17742": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17744": {
      "op": "SHL"
    },
    "17745": {
      "op": "SUB"
    },
    "17746": {
      "op": "SWAP5"
    },
    "17747": {
      "op": "SWAP1"
    },
    "17748": {
      "op": "SWAP5"
    },
    "17749": {
      "op": "AND"
    },
    "17750": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17752": {
      "op": "DUP4"
    },
    "17753": {
      "op": "ADD"
    },
    "17754": {
      "op": "MSTORE"
    },
    "17755": {
      "op": "POP"
    },
    "17756": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17758": {
      "op": "ADD"
    },
    "17759": {
      "op": "MSTORE"
    },
    "17760": {
      "op": "SWAP4"
    },
    "17761": {
      "op": "SWAP3"
    },
    "17762": {
      "op": "POP"
    },
    "17763": {
      "op": "POP"
    },
    "17764": {
      "op": "POP"
    },
    "17765": {
      "op": "JUMP"
    },
    "17766": {
      "op": "JUMPDEST"
    },
    "17767": {
      "op": "SWAP2"
    },
    "17768": {
      "op": "DUP3"
    },
    "17769": {
      "op": "MSTORE"
    },
    "17770": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17772": {
      "op": "DUP3"
    },
    "17773": {
      "op": "ADD"
    },
    "17774": {
      "op": "MSTORE"
    },
    "17775": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17777": {
      "op": "ADD"
    },
    "17778": {
      "op": "SWAP1"
    },
    "17779": {
      "op": "JUMP"
    },
    "17780": {
      "op": "JUMPDEST"
    },
    "17781": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17783": {
      "op": "MLOAD"
    },
    "17784": {
      "op": "DUP2"
    },
    "17785": {
      "op": "DUP2"
    },
    "17786": {
      "op": "ADD"
    },
    "17787": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "17796": {
      "op": "DUP2"
    },
    "17797": {
      "op": "GT"
    },
    "17798": {
      "op": "DUP3"
    },
    "17799": {
      "op": "DUP3"
    },
    "17800": {
      "op": "LT"
    },
    "17801": {
      "op": "OR"
    },
    "17802": {
      "op": "ISZERO"
    },
    "17803": {
      "op": "PUSH2",
      "value": "0x4593"
    },
    "17806": {
      "op": "JUMPI"
    },
    "17807": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17809": {
      "op": "DUP1"
    },
    "17810": {
      "op": "REVERT"
    },
    "17811": {
      "op": "JUMPDEST"
    },
    "17812": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17814": {
      "op": "MSTORE"
    },
    "17815": {
      "op": "SWAP2"
    },
    "17816": {
      "op": "SWAP1"
    },
    "17817": {
      "op": "POP"
    },
    "17818": {
      "op": "JUMP"
    },
    "17819": {
      "op": "JUMPDEST"
    },
    "17820": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17822": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "17831": {
      "op": "DUP3"
    },
    "17832": {
      "op": "GT"
    },
    "17833": {
      "op": "ISZERO"
    },
    "17834": {
      "op": "PUSH2",
      "value": "0x45B1"
    },
    "17837": {
      "op": "JUMPI"
    },
    "17838": {
      "op": "DUP1"
    },
    "17839": {
      "op": "DUP2"
    },
    "17840": {
      "op": "REVERT"
    },
    "17841": {
      "op": "JUMPDEST"
    },
    "17842": {
      "op": "POP"
    },
    "17843": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17845": {
      "op": "SWAP1"
    },
    "17846": {
      "op": "DUP2"
    },
    "17847": {
      "op": "MUL"
    },
    "17848": {
      "op": "ADD"
    },
    "17849": {
      "op": "SWAP1"
    },
    "17850": {
      "op": "JUMP"
    },
    "17851": {
      "op": "JUMPDEST"
    },
    "17852": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17854": {
      "op": "JUMPDEST"
    },
    "17855": {
      "op": "DUP4"
    },
    "17856": {
      "op": "DUP2"
    },
    "17857": {
      "op": "LT"
    },
    "17858": {
      "op": "ISZERO"
    },
    "17859": {
      "op": "PUSH2",
      "value": "0x45D6"
    },
    "17862": {
      "op": "JUMPI"
    },
    "17863": {
      "op": "DUP2"
    },
    "17864": {
      "op": "DUP2"
    },
    "17865": {
      "op": "ADD"
    },
    "17866": {
      "op": "MLOAD"
    },
    "17867": {
      "op": "DUP4"
    },
    "17868": {
      "op": "DUP3"
    },
    "17869": {
      "op": "ADD"
    },
    "17870": {
      "op": "MSTORE"
    },
    "17871": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17873": {
      "op": "ADD"
    },
    "17874": {
      "op": "PUSH2",
      "value": "0x45BE"
    },
    "17877": {
      "op": "JUMP"
    },
    "17878": {
      "op": "JUMPDEST"
    },
    "17879": {
      "op": "DUP4"
    },
    "17880": {
      "op": "DUP2"
    },
    "17881": {
      "op": "GT"
    },
    "17882": {
      "op": "ISZERO"
    },
    "17883": {
      "op": "PUSH2",
      "value": "0x4CA"
    },
    "17886": {
      "op": "JUMPI"
    },
    "17887": {
      "op": "POP"
    },
    "17888": {
      "op": "POP"
    },
    "17889": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17891": {
      "op": "SWAP2"
    },
    "17892": {
      "op": "ADD"
    },
    "17893": {
      "op": "MSTORE"
    },
    "17894": {
      "op": "JUMP"
    },
    "17895": {
      "op": "JUMPDEST"
    },
    "17896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17900": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17902": {
      "op": "SHL"
    },
    "17903": {
      "op": "SUB"
    },
    "17904": {
      "op": "DUP2"
    },
    "17905": {
      "op": "AND"
    },
    "17906": {
      "op": "DUP2"
    },
    "17907": {
      "op": "EQ"
    },
    "17908": {
      "op": "PUSH2",
      "value": "0x3239"
    },
    "17911": {
      "op": "JUMPI"
    },
    "17912": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17914": {
      "op": "DUP1"
    },
    "17915": {
      "op": "REVERT"
    },
    "17916": {
      "op": "JUMPDEST"
    },
    "17917": {
      "op": "DUP1"
    },
    "17918": {
      "op": "ISZERO"
    },
    "17919": {
      "op": "ISZERO"
    },
    "17920": {
      "op": "DUP2"
    },
    "17921": {
      "op": "EQ"
    },
    "17922": {
      "op": "PUSH2",
      "value": "0x3239"
    },
    "17925": {
      "op": "JUMPI"
    },
    "17926": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17928": {
      "op": "DUP1"
    },
    "17929": {
      "op": "REVERT"
    },
    "17930": {
      "op": "JUMPDEST"
    },
    "17931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17935": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "17937": {
      "op": "SHL"
    },
    "17938": {
      "op": "SUB"
    },
    "17939": {
      "op": "DUP2"
    },
    "17940": {
      "op": "AND"
    },
    "17941": {
      "op": "DUP2"
    },
    "17942": {
      "op": "EQ"
    },
    "17943": {
      "op": "PUSH2",
      "value": "0x3239"
    },
    "17946": {
      "op": "JUMPI"
    },
    "17947": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17949": {
      "op": "DUP1"
    },
    "17950": {
      "op": "REVERT"
    }
  },
  "sha1": "34d6245c68260b9345ee34d1f10a7bc7944b8c79",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.6.12;\npragma experimental ABIEncoderV2;\n\nimport 'OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/IERC20.sol';\nimport 'OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol';\n\nimport './WhitelistSpell.sol';\nimport '../utils/HomoraMath.sol';\nimport '../../interfaces/IUniswapV2Factory.sol';\nimport '../../interfaces/IUniswapV2Router02.sol';\nimport '../../interfaces/IUniswapV2Pair.sol';\nimport '../../interfaces/IWMasterChef.sol';\n\ncontract SushiswapSpellV1 is WhitelistSpell {\n  using SafeMath for uint;\n  using HomoraMath for uint;\n\n  IUniswapV2Factory public immutable factory; // Sushiswap factory\n  IUniswapV2Router02 public immutable router; // Sushiswap router\n\n  mapping(address => mapping(address => address)) public pairs; // Mapping from tokenA to (mapping from tokenB to LP token)\n\n  IWMasterChef public immutable wmasterchef; // Wrapped masterChef\n\n  address public immutable sushi; // Sushi token address\n\n  constructor(\n    IBank _bank,\n    address _werc20,\n    IUniswapV2Router02 _router,\n    address _wmasterchef\n  ) public WhitelistSpell(_bank, _werc20, _router.WETH()) {\n    router = _router;\n    factory = IUniswapV2Factory(_router.factory());\n    wmasterchef = IWMasterChef(_wmasterchef);\n    IWMasterChef(_wmasterchef).setApprovalForAll(address(_bank), true);\n    sushi = address(IWMasterChef(_wmasterchef).sushi());\n  }\n\n  /// @dev Return the LP token for the token pairs (can be in any order)\n  /// @param tokenA Token A to get LP token\n  /// @param tokenB Token B to get LP token\n  function getAndApprovePair(address tokenA, address tokenB) public returns (address) {\n    address lp = pairs[tokenA][tokenB];\n    if (lp == address(0)) {\n      lp = factory.getPair(tokenA, tokenB);\n      require(lp != address(0), 'no lp token');\n      ensureApprove(tokenA, address(router));\n      ensureApprove(tokenB, address(router));\n      ensureApprove(lp, address(router));\n      pairs[tokenA][tokenB] = lp;\n      pairs[tokenB][tokenA] = lp;\n    }\n    return lp;\n  }\n\n  /// @dev Compute optimal deposit amount\n  /// @param amtA amount of token A desired to deposit\n  /// @param amtB amount of token B desired to deposit\n  /// @param resA amount of token A in reserve\n  /// @param resB amount of token B in reserve\n  function optimalDeposit(\n    uint amtA,\n    uint amtB,\n    uint resA,\n    uint resB\n  ) internal pure returns (uint swapAmt, bool isReversed) {\n    if (amtA.mul(resB) >= amtB.mul(resA)) {\n      swapAmt = _optimalDepositA(amtA, amtB, resA, resB);\n      isReversed = false;\n    } else {\n      swapAmt = _optimalDepositA(amtB, amtA, resB, resA);\n      isReversed = true;\n    }\n  }\n\n  /// @dev Compute optimal deposit amount helper.\n  /// @param amtA amount of token A desired to deposit\n  /// @param amtB amount of token B desired to deposit\n  /// @param resA amount of token A in reserve\n  /// @param resB amount of token B in reserve\n  /// Formula: https://blog.alphafinance.io/byot/\n  function _optimalDepositA(\n    uint amtA,\n    uint amtB,\n    uint resA,\n    uint resB\n  ) internal pure returns (uint) {\n    require(amtA.mul(resB) >= amtB.mul(resA), 'Reversed');\n    uint a = 997;\n    uint b = uint(1997).mul(resA);\n    uint _c = (amtA.mul(resB)).sub(amtB.mul(resA));\n    uint c = _c.mul(1000).div(amtB.add(resB)).mul(resA);\n    uint d = a.mul(c).mul(4);\n    uint e = HomoraMath.sqrt(b.mul(b).add(d));\n    uint numerator = e.sub(b);\n    uint denominator = a.mul(2);\n    return numerator.div(denominator);\n  }\n\n  struct Amounts {\n    uint amtAUser; // Supplied tokenA amount\n    uint amtBUser; // Supplied tokenB amount\n    uint amtLPUser; // Supplied LP token amount\n    uint amtABorrow; // Borrow tokenA amount\n    uint amtBBorrow; // Borrow tokenB amount\n    uint amtLPBorrow; // Borrow LP token amount\n    uint amtAMin; // Desired tokenA amount (slippage control)\n    uint amtBMin; // Desired tokenB amount (slippage control)\n  }\n\n  /// @dev Add liquidity to Sushiswap pool\n  /// @param tokenA Token A for the pair\n  /// @param tokenB Token B for the pair\n  /// @param amt Amounts of tokens to supply, borrow, and get.\n  function addLiquidityInternal(\n    address tokenA,\n    address tokenB,\n    Amounts calldata amt,\n    address lp\n  ) internal {\n    require(whitelistedLpTokens[lp], 'lp token not whitelisted');\n\n    // 1. Get user input amounts\n    doTransmitETH();\n    doTransmit(tokenA, amt.amtAUser);\n    doTransmit(tokenB, amt.amtBUser);\n    doTransmit(lp, amt.amtLPUser);\n\n    // 2. Borrow specified amounts\n    doBorrow(tokenA, amt.amtABorrow);\n    doBorrow(tokenB, amt.amtBBorrow);\n    doBorrow(lp, amt.amtLPBorrow);\n\n    // 3. Calculate optimal swap amount\n    uint swapAmt;\n    bool isReversed;\n    {\n      uint amtA = IERC20(tokenA).balanceOf(address(this));\n      uint amtB = IERC20(tokenB).balanceOf(address(this));\n      uint resA;\n      uint resB;\n      if (IUniswapV2Pair(lp).token0() == tokenA) {\n        (resA, resB, ) = IUniswapV2Pair(lp).getReserves();\n      } else {\n        (resB, resA, ) = IUniswapV2Pair(lp).getReserves();\n      }\n      (swapAmt, isReversed) = optimalDeposit(amtA, amtB, resA, resB);\n    }\n\n    // 4. Swap optimal amount\n    if (swapAmt > 0) {\n      address[] memory path = new address[](2);\n      (path[0], path[1]) = isReversed ? (tokenB, tokenA) : (tokenA, tokenB);\n      router.swapExactTokensForTokens(swapAmt, 0, path, address(this), block.timestamp);\n    }\n\n    // 5. Add liquidity\n    uint balA = IERC20(tokenA).balanceOf(address(this));\n    uint balB = IERC20(tokenB).balanceOf(address(this));\n    if (balA > 0 || balB > 0) {\n      require(balA >= amt.amtAMin, '!amtAMin');\n      require(balB >= amt.amtBMin, '!amtBMin');\n      router.addLiquidity(\n        tokenA,\n        tokenB,\n        balA,\n        balB,\n        amt.amtAMin,\n        amt.amtBMin,\n        address(this),\n        block.timestamp\n      );\n    }\n  }\n\n  /// @dev Add liquidity to Sushiswap pool, with no staking rewards (use WERC20 wrapper)\n  /// @param tokenA Token A for the pair\n  /// @param tokenB Token B for the pair\n  /// @param amt Amounts of tokens to supply, borrow, and get.\n  function addLiquidityWERC20(\n    address tokenA,\n    address tokenB,\n    Amounts calldata amt\n  ) external payable {\n    address lp = getAndApprovePair(tokenA, tokenB);\n    // 1-5. add liquidity\n    addLiquidityInternal(tokenA, tokenB, amt, lp);\n\n    // 6. Put collateral\n    doPutCollateral(lp, IERC20(lp).balanceOf(address(this)));\n\n    // 7. Refund leftovers to users\n    doRefundETH();\n    doRefund(tokenA);\n    doRefund(tokenB);\n  }\n\n  /// @dev Add liquidity to Sushiswap pool, with staking to masterChef\n  /// @param tokenA Token A for the pair\n  /// @param tokenB Token B for the pair\n  /// @param amt Amounts of tokens to supply, borrow, and get.\n  /// @param pid Pool id\n  function addLiquidityWMasterChef(\n    address tokenA,\n    address tokenB,\n    Amounts calldata amt,\n    uint pid\n  ) external payable {\n    address lp = getAndApprovePair(tokenA, tokenB);\n    (address lpToken, , , ) = wmasterchef.chef().poolInfo(pid);\n    require(lpToken == lp, 'incorrect lp token');\n\n    // 1-5. add liquidity\n    addLiquidityInternal(tokenA, tokenB, amt, lp);\n\n    // 6. Take out collateral\n    (, address collToken, uint collId, uint collSize) = bank.getCurrentPositionInfo();\n    if (collSize > 0) {\n      (uint decodedPid, ) = wmasterchef.decodeId(collId);\n      require(pid == decodedPid, 'incorrect pid');\n      require(collToken == address(wmasterchef), 'collateral token & wmasterchef mismatched');\n      bank.takeCollateral(address(wmasterchef), collId, collSize);\n      wmasterchef.burn(collId, collSize);\n    }\n\n    // 7. Put collateral\n    ensureApprove(lp, address(wmasterchef));\n    uint amount = IERC20(lp).balanceOf(address(this));\n    uint id = wmasterchef.mint(pid, amount);\n    bank.putCollateral(address(wmasterchef), id, amount);\n\n    // 8. Refund leftovers to users\n    doRefundETH();\n    doRefund(tokenA);\n    doRefund(tokenB);\n\n    // 9. Refund sushi\n    doRefund(sushi);\n  }\n\n  struct RepayAmounts {\n    uint amtLPTake; // Take out LP token amount (from Homora)\n    uint amtLPWithdraw; // Withdraw LP token amount (back to caller)\n    uint amtARepay; // Repay tokenA amount\n    uint amtBRepay; // Repay tokenB amount\n    uint amtLPRepay; // Repay LP token amount\n    uint amtAMin; // Desired tokenA amount\n    uint amtBMin; // Desired tokenB amount\n  }\n\n  /// @dev Remove liquidity from Sushiswap pool\n  /// @param tokenA Token A for the pair\n  /// @param tokenB Token B for the pair\n  /// @param amt Amounts of tokens to take out, withdraw, repay, and get.\n  function removeLiquidityInternal(\n    address tokenA,\n    address tokenB,\n    RepayAmounts calldata amt,\n    address lp\n  ) internal {\n    require(whitelistedLpTokens[lp], 'lp token not whitelisted');\n    uint positionId = bank.POSITION_ID();\n\n    uint amtARepay = amt.amtARepay;\n    uint amtBRepay = amt.amtBRepay;\n    uint amtLPRepay = amt.amtLPRepay;\n\n    // 2. Compute repay amount if MAX_INT is supplied (max debt)\n    if (amtARepay == uint(-1)) {\n      amtARepay = bank.borrowBalanceCurrent(positionId, tokenA);\n    }\n    if (amtBRepay == uint(-1)) {\n      amtBRepay = bank.borrowBalanceCurrent(positionId, tokenB);\n    }\n    if (amtLPRepay == uint(-1)) {\n      amtLPRepay = bank.borrowBalanceCurrent(positionId, lp);\n    }\n\n    // 3. Compute amount to actually remove\n    uint amtLPToRemove = IERC20(lp).balanceOf(address(this)).sub(amt.amtLPWithdraw);\n\n    // 4. Remove liquidity\n    uint amtA;\n    uint amtB;\n    if (amtLPToRemove > 0) {\n      (amtA, amtB) = router.removeLiquidity(\n        tokenA,\n        tokenB,\n        amtLPToRemove,\n        0,\n        0,\n        address(this),\n        block.timestamp\n      );\n    }\n\n    // 5. MinimizeTrading\n    uint amtADesired = amtARepay.add(amt.amtAMin);\n    uint amtBDesired = amtBRepay.add(amt.amtBMin);\n\n    if (amtA < amtADesired && amtB > amtBDesired) {\n      address[] memory path = new address[](2);\n      (path[0], path[1]) = (tokenB, tokenA);\n      router.swapTokensForExactTokens(\n        amtADesired.sub(amtA),\n        amtB.sub(amtBDesired),\n        path,\n        address(this),\n        block.timestamp\n      );\n    } else if (amtA > amtADesired && amtB < amtBDesired) {\n      address[] memory path = new address[](2);\n      (path[0], path[1]) = (tokenA, tokenB);\n      router.swapTokensForExactTokens(\n        amtBDesired.sub(amtB),\n        amtA.sub(amtADesired),\n        path,\n        address(this),\n        block.timestamp\n      );\n    }\n\n    // 6. Repay\n    doRepay(tokenA, amtARepay);\n    doRepay(tokenB, amtBRepay);\n    doRepay(lp, amtLPRepay);\n\n    // 7. Slippage control\n    require(IERC20(tokenA).balanceOf(address(this)) >= amt.amtAMin);\n    require(IERC20(tokenB).balanceOf(address(this)) >= amt.amtBMin);\n    require(IERC20(lp).balanceOf(address(this)) >= amt.amtLPWithdraw);\n\n    // 8. Refund leftover\n    doRefundETH();\n    doRefund(tokenA);\n    doRefund(tokenB);\n    doRefund(lp);\n  }\n\n  /// @dev Remove liquidity from Sushiswap pool, with no staking rewards (use WERC20 wrapper)\n  /// @param tokenA Token A for the pair\n  /// @param tokenB Token B for the pair\n  /// @param amt Amounts of tokens to take out, withdraw, repay, and get.\n  function removeLiquidityWERC20(\n    address tokenA,\n    address tokenB,\n    RepayAmounts calldata amt\n  ) external {\n    address lp = getAndApprovePair(tokenA, tokenB);\n\n    // 1. Take out collateral\n    doTakeCollateral(lp, amt.amtLPTake);\n\n    // 2-8. remove liquidity\n    removeLiquidityInternal(tokenA, tokenB, amt, lp);\n  }\n\n  /// @dev Remove liquidity from Sushiswap pool, from masterChef staking\n  /// @param tokenA Token A for the pair\n  /// @param tokenB Token B for the pair\n  /// @param amt Amounts of tokens to take out, withdraw, repay, and get.\n  function removeLiquidityWMasterChef(\n    address tokenA,\n    address tokenB,\n    RepayAmounts calldata amt\n  ) external {\n    address lp = getAndApprovePair(tokenA, tokenB);\n    (, address collToken, uint collId, ) = bank.getCurrentPositionInfo();\n    require(IWMasterChef(collToken).getUnderlyingToken(collId) == lp, 'incorrect underlying');\n    require(collToken == address(wmasterchef), 'collateral token & wmasterchef mismatched');\n\n    // 1. Take out collateral\n    bank.takeCollateral(address(wmasterchef), collId, amt.amtLPTake);\n    wmasterchef.burn(collId, amt.amtLPTake);\n\n    // 2-8. remove liquidity\n    removeLiquidityInternal(tokenA, tokenB, amt, lp);\n\n    // 9. Refund sushi\n    doRefund(sushi);\n  }\n\n  /// @dev Harvest SUSHI reward tokens to in-exec position's owner\n  function harvestWMasterChef() external {\n    (, address collToken, uint collId, ) = bank.getCurrentPositionInfo();\n    (uint pid, ) = wmasterchef.decodeId(collId);\n    address lp = wmasterchef.getUnderlyingToken(collId);\n    require(whitelistedLpTokens[lp], 'lp token not whitelisted');\n    require(collToken == address(wmasterchef), 'collateral token & wmasterchef mismatched');\n\n    // 1. Take out collateral\n    bank.takeCollateral(address(wmasterchef), collId, uint(-1));\n    wmasterchef.burn(collId, uint(-1));\n\n    // 2. put collateral\n    uint amount = IERC20(lp).balanceOf(address(this));\n    ensureApprove(lp, address(wmasterchef));\n    uint id = wmasterchef.mint(pid, amount);\n    bank.putCollateral(address(wmasterchef), id, amount);\n\n    // 3. Refund sushi\n    doRefund(sushi);\n  }\n}\n",
  "sourceMap": "513:12853:66:-:0;;;1003:420;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1137:5;1144:7;1153;-1:-1:-1;;;;;1153:12:66;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;360:5:68;367:7;376:5;768:40:4;-1:-1:-1;;;768:18:4;:40::i;:::-;282:170:14;-1:-1:-1;;;282:18:14;:170::i;:::-;-1:-1:-1;;;;;;795:12:63;;;;;;;;813:25;;;;;;;844:12;;;;;;862:36;851:5;802;862:13;:36::i;:::-;904:56;;-1:-1:-1;;;904:56:63;;-1:-1:-1;;;;;904:34:63;;;;;:56;;947:5;;955:4;;904:56;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;709:256;;;389:20:68::1;:18;;;:20;;:::i;:::-;269:145:::0;;;1184:7:66::1;-1:-1:-1::0;;;;;1175:16:66::1;;;-1:-1:-1::0;;;;;1175:16:66::1;;;;;::::0;::::1;1225:7;-1:-1:-1::0;;;;;1225:15:66::1;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;;1197:46:66::1;::::0;;;;;::::1;::::0;1249:40;;;;;::::1;::::0;1295:66:::1;::::0;-1:-1:-1;;;1295:66:66;;-1:-1:-1;;;;;1249:40:66;::::1;::::0;1295:44:::1;::::0;:66:::1;::::0;1348:5;;1356:4:::1;::::0;1295:66:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1396:12;-1:-1:-1::0;;;;;1383:32:66::1;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1367:51;::::0;-1:-1:-1;;;;;;1367:51:66;::::1;::::0;-1:-1:-1;513:12853:66;;-1:-1:-1;;;513:12853:66;1507:198:4;-1:-1:-1;;;;;;1590:25:4;;;;;1582:66;;;;-1:-1:-1;;;1582:66:4;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;;1658:33:4;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1658:40:4;1694:4;1658:40;;;1507:198::o;1230:203:63:-;-1:-1:-1;;;;;1305:15:63;;;;;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;1300:129;;1339:44;1365:7;-1:-1:-1;;1346:5:63;-1:-1:-1;;;;;1339:25:63;;;;;;;:44;;;;;:::i;:::-;-1:-1:-1;;;;;1391:15:63;;;;;;;:8;:15;;;;;;;;:24;;;;;;;;;:31;;-1:-1:-1;;1391:31:63;1418:4;1391:31;;;1300:129;1230:203;;:::o;673:151:24:-;1501:13:8;;;;;;;;:33;;-1:-1:-1;1518:16:8;:14;:16::i;:::-;1501:50;;;-1:-1:-1;1539:12:8;;;;1538:13;1501:50;1493:109;;;;-1:-1:-1;;;1493:109:8;;;;;;;:::i;:::-;1636:13;;;;;;;1635:14;1659:98;;;;1693:13;:20;;-1:-1:-1;;;;1693:20:8;;;;;1727:19;1709:4;1727:19;;;1659:98;730:8:24::1;:21:::0;;-1:-1:-1;;;;;;730:21:24::1;741:10;730:21:::0;;::::1;::::0;;;::::1;::::0;;;757:15:::1;:28:::0;;-1:-1:-1;;;;;;757:28:24::1;::::0;;796:23:::1;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;;;;;;;;1783:14:8::0;1779:66;;;1813:13;:21;;-1:-1:-1;;1813:21:8;;;1779:66;673:151:24;:::o;1348:613:20:-;1713:10;;;1712:62;;-1:-1:-1;1729:39:20;;-1:-1:-1;;;1729:39:20;;-1:-1:-1;;;;;1729:15:20;;;;;:39;;1753:4;;1760:7;;1729:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;1712:62;1704:150;;;;-1:-1:-1;;;1704:150:20;;;;;;;:::i;:::-;1864:90;1884:5;1914:22;;;1938:7;1947:5;1891:62;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;1891:62:20;;;;;;;;;;;-1:-1:-1;;;;;;1891:62:20;;;;-1:-1:-1;;;;;1891:62:20;;;;;;;1864:19;:90;:::i;:::-;1348:613;;;:::o;1941:112:8:-;1989:4;2013:33;2040:4;2013:18;;;;;:33;;:::i;:::-;2012:34;2005:41;;1941:112;:::o;2967:751:20:-;3386:23;3412:69;3440:4;3412:69;;;;;;;;;;;;;;;;;3420:5;-1:-1:-1;;;;;3412:27:20;;;;;;;:69;;;;;:::i;:::-;3495:17;;3386:95;;-1:-1:-1;3495:21:20;3491:221;;3635:10;3624:30;;;;;;;;;;;;:::i;:::-;3616:85;;;;-1:-1:-1;;;3616:85:20;;;;;;;:::i;726:413:21:-;1086:20;1124:8;;;726:413::o;3581:193::-;3684:12;3715:52;3737:6;3745:4;3751:1;3754:12;3715:21;:52::i;:::-;3708:59;;3581:193;;;;;;:::o;4608:523::-;4735:12;4792:5;4767:21;:30;;4759:81;;;;-1:-1:-1;;;4759:81:21;;;;;;;:::i;:::-;4858:18;4869:6;4858:10;:18::i;:::-;4850:60;;;;-1:-1:-1;;;4850:60:21;;;;;;;:::i;:::-;4981:12;4995:23;5022:6;-1:-1:-1;;;;;5022:11:21;5042:5;5050:4;5022:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4980:75:21;;-1:-1:-1;4980:75:21;-1:-1:-1;5072:52:21;4980:75;;5111:12;5072:17;:52::i;:::-;5065:59;4608:523;-1:-1:-1;;;;;;;4608:523:21:o;7091:725::-;7206:12;7234:7;7230:580;;;-1:-1:-1;7264:10:21;7257:17;;7230:580;7375:17;;:21;7371:429;;7633:10;7627:17;7693:15;7680:10;7676:2;7672:19;7665:44;7582:145;7772:12;7765:20;;-1:-1:-1;;;7765:20:21;;;;;;;;:::i;963:263:-1:-;;1078:2;1066:9;1057:7;1053:23;1049:32;1046:2;;;-1:-1;;1084:12;1046:2;89:6;83:13;101:33;128:5;101:33;:::i;1233:257::-;;1345:2;1333:9;1324:7;1320:23;1316:32;1313:2;;;-1:-1;;1351:12;1313:2;227:6;221:13;12974:5;11422:13;11415:21;12952:5;12949:32;12939:2;;-1:-1;;12985:12;1497:758;;;;;1706:3;1694:9;1685:7;1681:23;1677:33;1674:2;;;-1:-1;;1713:12;1674:2;380:6;374:13;392:48;434:5;392:48;:::i;:::-;1891:2;1941:22;;83:13;1765:89;;-1:-1;101:33;83:13;101:33;:::i;:::-;2010:2;2088:22;;731:13;1899:74;;-1:-1;749:61;731:13;749:61;:::i;:::-;2157:2;2207:22;;83:13;2018:102;;-1:-1;101:33;83:13;101:33;:::i;:::-;1668:587;;;;-1:-1;1668:587;;-1:-1;;1668:587::o;2564:263::-;;2679:2;2667:9;2658:7;2654:23;2650:32;2647:2;;;-1:-1;;2685:12;2647:2;-1:-1;900:13;;2641:186;-1:-1;2641:186::o;6290:271::-;;3374:5;10763:12;3485:52;3530:6;3525:3;3518:4;3511:5;3507:16;3485:52;:::i;:::-;3549:16;;;;;6424:137;-1:-1;;6424:137::o;6568:238::-;-1:-1;;;;;11863:54;;;;2913:58;;6703:2;6688:18;;6674:132::o;6813:333::-;-1:-1;;;;;11863:54;;;3054:37;;11863:54;;7132:2;7117:18;;3054:37;6968:2;6953:18;;6939:207::o;7153:321::-;-1:-1;;;;;11863:54;;;;3054:37;;11422:13;11415:21;7460:2;7445:18;;3168:34;7302:2;7287:18;;7273:201::o;7481:333::-;-1:-1;;;;;11863:54;;;;3054:37;;7800:2;7785:18;;6241:37;7636:2;7621:18;;7607:207::o;7821:310::-;;7968:2;7989:17;7982:47;3722:5;10763:12;11202:6;7968:2;7957:9;7953:18;11190:19;3816:52;3861:6;11230:14;7957:9;11230:14;7968:2;3842:5;3838:16;3816:52;:::i;:::-;12748:7;12732:14;-1:-1;;12728:28;3880:39;;;;11230:14;3880:39;;7939:192;-1:-1;;7939:192::o;8138:416::-;8338:2;8352:47;;;4156:2;8323:18;;;11190:19;4192:30;11230:14;;;4172:51;4242:12;;;8309:245::o;8561:416::-;8761:2;8775:47;;;4493:2;8746:18;;;11190:19;4529:34;11230:14;;;4509:55;-1:-1;;;4584:12;;;4577:30;4626:12;;;8732:245::o;8984:416::-;9184:2;9198:47;;;4877:2;9169:18;;;11190:19;4913:34;11230:14;;;4893:55;-1:-1;;;4968:12;;;4961:38;5018:12;;;9155:245::o;9407:416::-;9607:2;9621:47;;;5269:2;9592:18;;;11190:19;5305:31;11230:14;;;5285:52;5356:12;;;9578:245::o;9830:416::-;10030:2;10044:47;;;5607:2;10015:18;;;11190:19;5643:34;11230:14;;;5623:55;-1:-1;;;5698:12;;;5691:34;5744:12;;;10001:245::o;10253:416::-;10453:2;10467:47;;;5995:2;10438:18;;;11190:19;6031:34;11230:14;;;6011:55;6100:24;6086:12;;;6079:46;6144:12;;;10424:245::o;12388:268::-;12453:1;12460:101;12474:6;12471:1;12468:13;12460:101;;;12541:11;;;12535:18;12522:11;;;12515:39;12496:2;12489:10;12460:101;;;12576:6;12573:1;12570:13;12567:2;;;12453:1;12632:6;12627:3;12623:16;12616:27;12567:2;;12437:219;;;:::o;12769:117::-;-1:-1;;;;;11863:54;;12828:35;;12818:2;;12877:1;;12867:12;12812:74;513:12853:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/spell/SushiswapSpellV1.sol",
  "type": "contract"
}